Index: app/src/main/java/com/example/asasfans/TestActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.asasfans;\r\n\r\nimport android.Manifest;\r\nimport android.content.Context;\r\nimport android.content.Intent;\r\nimport android.content.SharedPreferences;\r\nimport android.content.pm.PackageManager;\r\nimport android.graphics.Bitmap;\r\nimport android.net.Uri;\r\nimport android.os.Bundle;\r\nimport android.os.Handler;\r\nimport android.util.Log;\r\nimport android.view.Gravity;\r\nimport android.view.KeyEvent;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.view.animation.Animation;\r\nimport android.view.animation.RotateAnimation;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.annotation.Nullable;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.core.app.ActivityCompat;\r\nimport androidx.core.content.ContextCompat;\r\nimport androidx.viewpager.widget.ViewPager;\r\n\r\nimport com.chaychan.viewlib.bottombarlayout.BottomBarItem;\r\nimport com.chaychan.viewlib.bottombarlayout.BottomBarLayout;\r\nimport com.example.asasfans.data.GithubVersionBean;\r\nimport com.example.asasfans.data.TabData;\r\nimport com.example.asasfans.ui.main.adapter.BottomPagerAdapter;\r\nimport com.example.asasfans.ui.main.adapter.NewBottomPagerAdapter;\r\nimport com.example.asasfans.ui.main.adapter.ToolsAdapter;\r\nimport com.example.asasfans.ui.main.fragment.ImageFanArtFragment;\r\nimport com.example.asasfans.ui.main.fragment.MainFragment;\r\nimport com.example.asasfans.ui.main.fragment.ToolsFragment;\r\nimport com.example.asasfans.ui.main.fragment.WebFragment;\r\nimport com.google.android.material.tabs.TabLayout;\r\nimport com.google.gson.Gson;\r\nimport com.nostra13.universalimageloader.cache.disc.impl.UnlimitedDiskCache;\r\nimport com.nostra13.universalimageloader.cache.disc.naming.Md5FileNameGenerator;\r\nimport com.nostra13.universalimageloader.cache.memory.impl.UsingFreqLimitedMemoryCache;\r\nimport com.nostra13.universalimageloader.core.DisplayImageOptions;\r\nimport com.nostra13.universalimageloader.core.ImageLoader;\r\nimport com.nostra13.universalimageloader.core.ImageLoaderConfiguration;\r\nimport com.nostra13.universalimageloader.core.assist.QueueProcessingType;\r\nimport com.nostra13.universalimageloader.core.display.FadeInBitmapDisplayer;\r\nimport com.nostra13.universalimageloader.core.display.RoundedBitmapDisplayer;\r\nimport com.nostra13.universalimageloader.core.download.BaseImageDownloader;\r\nimport com.orhanobut.dialogplus.DialogPlus;\r\nimport com.orhanobut.dialogplus.ViewHolder;\r\n\r\nimport java.io.File;\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\nimport java.util.Map;\r\n\r\n/**\r\n * @author akarinini\r\n * @description 测试用页面，目前作为主页面\r\n *              2022/3/03 修改底部导航栏可以动态改变标签\r\n *              2022/3/7 更新了图片加载方式。之前是自己写的一个根据url加载图片的imageview，\r\n *                       问题在于它把全部的图片放在了内存中，浏览几百个视频就oom然后crash掉了，\r\n *                       现在换成了开源库imageloader，它的方式是把图片下载到存储里，\r\n *                       遇到相同的url直接从存储中加载。\r\n *                       修改了预加载页面数量，全部预加载。\r\n *              2022/4/10 固定了页面\r\n */\r\n\r\npublic class TestActivity extends AppCompatActivity {\r\n    /** 上次点击返回键的时间 */\r\n    private long lastBackPressed;\r\n    /** 两次点击的间隔时间 */\r\n    private static final int QUIT_INTERVAL = 3000;\r\n\r\n    private TabLayout tabs;\r\n    private ViewPager viewPager;\r\n    public List<TabData> mFragmentList = new ArrayList<>();\r\n\r\n    private BottomPagerAdapter bottomPagerAdapter;\r\n    private Object mCurrentFragment;\r\n\r\n    private SharedPreferences userInfo;\r\n    private SharedPreferences.Editor editor;//获取Editor\r\n    private Map<String, ?> tmp;\r\n    private DialogPlus dialog;\r\n    private View dialogView;\r\n\r\n    private BottomBarLayout bottomBarLayout;\r\n\r\n    private RotateAnimation mRotateAnimation;\r\n    private Handler mHandler = new Handler();\r\n\r\n    /*\r\n    权限相关\r\n     */\r\n    public String[] permissions = new String[]{\r\n            Manifest.permission.WRITE_EXTERNAL_STORAGE,\r\n            Manifest.permission.INTERNET,\r\n            Manifest.permission.READ_EXTERNAL_STORAGE,\r\n            Manifest.permission.ACCESS_NETWORK_STATE\r\n    };\r\n    List<String> mPermissionList = new ArrayList<>();\r\n    private static final int PERMISSION_REQUEST = 1;\r\n\r\n    @Override\r\n    protected void onCreate(@Nullable Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.new_activity_bottom_main);\r\n        initImageLoader();\r\n        checkPermission();\r\n//        setContentView(R.layout.activity_bottom_main);\r\n//\r\n//        //恢复时会第二次添加底部导航栏\r\n//        mFragmentList.clear();\r\n//        initTab();\r\n//\r\n//\r\n//        bottomPagerAdapter = new BottomPagerAdapter(this, getSupportFragmentManager(), mFragmentList);\r\n//        mCurrentFragment = bottomPagerAdapter.getCurrentFragment();\r\n//        viewPager = findViewById(R.id.view_pager_main);\r\n//        viewPager.setAdapter(bottomPagerAdapter);\r\n//        viewPager.setOffscreenPageLimit(4);\r\n//        tabs = findViewById(R.id.tabs_bottom);\r\n//        tabs.setupWithViewPager(viewPager);\r\n        bottomBarLayout = findViewById(R.id.bbl);\r\n        viewPager = findViewById(R.id.vp_content);\r\n        viewPager.setAdapter(new NewBottomPagerAdapter(getSupportFragmentManager()));\r\n        viewPager.setOffscreenPageLimit(4);\r\n        bottomBarLayout.setViewPager(viewPager);\r\n\r\n        bottomBarLayout.setOnItemSelectedListener(new BottomBarLayout.OnItemSelectedListener() {\r\n            @Override\r\n            public void onItemSelected(BottomBarItem bottomBarItem, int position) {\r\n                switch (position){\r\n                    case 0:\r\n                        BottomBarItem bottomItem = bottomBarLayout.getBottomItem(0);\r\n                        bottomItem.setIconSelectedResourceId(R.drawable.ic_new_video_pressed);//更换为原来的图标\r\n\r\n                        cancelTabLoading(bottomItem);//停止旋转动画\r\n                        if (bottomBarLayout.getCurrentItem() == position){\r\n//                            bottomBarItem.setIconSelectedResourceId(R.drawable.ic_loading);//更换成加载图标\r\n//                            bottomBarItem.setStatus(true);\r\n//                            //播放旋转动画\r\n//                            if (mRotateAnimation == null) {\r\n//                                mRotateAnimation = new RotateAnimation(0, 360,\r\n//                                        Animation.RELATIVE_TO_SELF, 0.5f, Animation.RELATIVE_TO_SELF,\r\n//                                        0.5f);\r\n//                                mRotateAnimation.setDuration(800);\r\n//                                mRotateAnimation.setRepeatCount(-1);\r\n//                            }\r\n//                            ImageView bottomImageView = bottomBarItem.getImageView();\r\n//                            bottomImageView.setAnimation(mRotateAnimation);\r\n//                            bottomImageView.startAnimation(mRotateAnimation);//播放旋转动画\r\n//\r\n//                            //模拟数据刷新完毕\r\n//                            mHandler.postDelayed(new Runnable() {\r\n//                                @Override\r\n//                                public void run() {\r\n//                                    bottomBarItem.setIconSelectedResourceId(R.drawable.ic_video_dark);//更换成首页原来图标\r\n//                                    bottomBarItem.setStatus(true);//刷新图标\r\n//                                    cancelTabLoading(bottomBarItem);\r\n//                                }\r\n//                            },500);\r\n                            return;\r\n                        }\r\n                    default:\r\n\r\n                }\r\n            }\r\n        });\r\n\r\n        //设置分割线\r\n//        LinearLayout linearLayout = (LinearLayout) tabs.getChildAt(0);\r\n//        linearLayout.setShowDividers(LinearLayout.SHOW_DIVIDER_MIDDLE);\r\n//        linearLayout.setDividerDrawable(ContextCompat.getDrawable(this,\r\n//                R.drawable.divider)); //设置分割线的样式\r\n//        linearLayout.setDividerPadding(20); //设置分割线间隔\r\n\r\n        Intent intent =getIntent();\r\n        Bundle bundle =intent.getExtras();\r\n        Gson gson = new Gson();\r\n        if (bundle.getString(\"latestVersion\").equals(\"\")){\r\n            Toast.makeText(TestActivity.this, \"网络错误，版本号获取失败\", Toast.LENGTH_SHORT).show();\r\n        }else {\r\n            if (bundle.getString(\"latestVersion\").startsWith(\"{\\\"url\\\"\")){\r\n                GithubVersionBean githubVersionBean = gson.fromJson(bundle.getString(\"latestVersion\"), GithubVersionBean.class);\r\n                String versionName = githubVersionBean.getTag_name();\r\n\r\n                String[] tmp3 = versionName.split(\"v\");\r\n                String[] versionCodeString = tmp3[1].split(\"\\\\.\");\r\n                int versionCode = Integer.valueOf(versionCodeString[0]) * 100 + Integer.valueOf(versionCodeString[1]) * 10 + Integer.valueOf(versionCodeString[2]) * 1;\r\n                if (versionCode > getVersionCode(TestActivity.this)) {\r\n                    initDialog(TestActivity.this);\r\n                    TextView title = dialogView.findViewById(R.id.title);\r\n                    TextView content = dialogView.findViewById(R.id.upgrade_content);\r\n                    TextView cancel = dialogView.findViewById(R.id.close);\r\n                    TextView confirm = dialogView.findViewById(R.id.upgrade);\r\n\r\n                    content.setText(githubVersionBean.getBody());\r\n\r\n                    confirm.setOnClickListener(new View.OnClickListener() {\r\n                        @Override\r\n                        public void onClick(View view) {\r\n                            Intent intent = new Intent(Intent.ACTION_VIEW, Uri.parse(\"https://app.asf.ink/\"));\r\n                            startActivity(intent);\r\n                            dialog.dismiss();\r\n                        }\r\n                    });\r\n                    cancel.setOnClickListener(new View.OnClickListener() {\r\n                        @Override\r\n                        public void onClick(View view) {\r\n                            dialog.dismiss();\r\n                        }\r\n                    });\r\n                    dialog.show();\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private void cancelTabLoading(BottomBarItem bottomItem) {\r\n        Animation animation = bottomItem.getImageView().getAnimation();\r\n        if (animation != null){\r\n            animation.cancel();\r\n        }\r\n    }\r\n\r\n    private void initDialog(Context context){\r\n        dialog = DialogPlus.newDialog(context)\r\n                .setContentHolder(new ViewHolder(R.layout.dialog_upgrade))\r\n                .setContentHeight(ViewGroup.LayoutParams.WRAP_CONTENT)\r\n                .setContentWidth(ViewGroup.LayoutParams.MATCH_PARENT)\r\n                .setCancelable(true)\r\n                .setGravity(Gravity.CENTER)\r\n                .setContentBackgroundResource(R.color.transparent)\r\n                .create();\r\n        dialogView = dialog.getHolderView();\r\n    }\r\n\r\n    private void initImageLoader(){\r\n        Log.i(\"APATH\", getApplicationContext().getFilesDir().getAbsolutePath());\r\n        Log.i(\"BPATH\", getExternalCacheDir().getPath());\r\n        String dirname = getExternalCacheDir().getPath() + \"/pic\";\r\n\r\n        // 现在创建目录\r\n\r\n        DisplayImageOptions options = new DisplayImageOptions.Builder()\r\n                .cacheInMemory(false) //设置下载的图片是否缓存在内存中\r\n                .cacheOnDisk(true)//设置下载的图片是否缓存在SD卡中\r\n//                .showImageOnLoading(R.mipmap.loading_black)\r\n                .showImageOnFail(R.mipmap.load_failure)\r\n                .bitmapConfig(Bitmap.Config.RGB_565)\r\n                .considerExifParams(true)//是否考虑JPEG图像EXIF参数（旋转，翻转）\r\n                .resetViewBeforeLoading(true)// 设置图片在下载前是否重置，复位\r\n                .displayer(new RoundedBitmapDisplayer(80))\r\n                .displayer(new FadeInBitmapDisplayer(1000))\r\n                .build();\r\n        ImageLoaderConfiguration config = new ImageLoaderConfiguration.Builder(this)\r\n                .memoryCacheExtraOptions(480, 800) // max width, max height，即保存的每个缓存文件的最大长宽\r\n                .threadPoolSize(6) //线程池内加载的数量\r\n                .threadPriority(Thread.NORM_PRIORITY - 2)\r\n                .denyCacheImageMultipleSizesInMemory()\r\n                .diskCacheFileNameGenerator(new Md5FileNameGenerator()) //将保存的时候的URI名称用MD5 加密\r\n                .memoryCache(new UsingFreqLimitedMemoryCache(2 * 1024 * 1024)) // You can pass your own memory cache implementation/你可以通过自己的内存缓存实现\r\n                .memoryCacheSize(20 * 1024 * 1024) // 内存缓存的最大值\r\n                .diskCacheSize(500 * 1024 * 1024)  // 50 Mb sd卡(本地)缓存的最大值\r\n                .tasksProcessingOrder(QueueProcessingType.LIFO)\r\n                .defaultDisplayImageOptions(options)// 由原先的discCache -> diskCache\r\n                .diskCache(new UnlimitedDiskCache(new File(dirname)))//自定义缓存路径\r\n                .imageDownloader(new BaseImageDownloader(this, 5 * 1000, 30 * 1000)) // connectTimeout (5 s), readTimeout (30 s)超时时间\r\n//                .writeDebugLogs() // Remove for release app\r\n                .build();\r\n        ImageLoader.getInstance().init(config);//全局初始化此配置\r\n    }\r\n\r\n    /**\r\n     * @description 根据存储的CheckBox状态初始化底部栏，与ToolsAdapter耦合性很高，修改时要注意\r\n     * @param\r\n     * @return\r\n     * @author akari\r\n     * @time 2022/3/5 15:02\r\n     */\r\n    private void initTab() {\r\n        //这里初始化TabLayout\r\n//        Log.i(\"initTab\", String.valueOf((getSharedPreferences(\"ToolsData\", MODE_PRIVATE)).contains(ToolsAdapter.iconUrl.get(0))));\r\n        //判断是否为第一次加载\r\n        if (!((getSharedPreferences(\"ToolsData\", MODE_PRIVATE)).contains(ToolsAdapter.iconUrl.get(0)))) {\r\n            userInfo = getSharedPreferences(\"ToolsData\", MODE_PRIVATE);\r\n            editor = userInfo.edit();\r\n            for (int i = 0; i < ToolsAdapter.iconUrl.size(); i++) {\r\n                editor.putBoolean(ToolsAdapter.iconUrl.get(i), false);\r\n                editor.commit();\r\n            }\r\n        }\r\n        mFragmentList.add(new TabData(\"视频\", MainFragment.newInstance()));\r\n        if (getSharedPreferences(\"ToolsData\", MODE_PRIVATE) != null){\r\n            userInfo = getSharedPreferences(\"ToolsData\", MODE_PRIVATE);\r\n            tmp = userInfo.getAll();\r\n            if (tmp.size() < ToolsAdapter.iconUrl.size()){\r\n                editor = userInfo.edit();\r\n                for (int i = tmp.size(); i < ToolsAdapter.iconUrl.size(); i++) {\r\n                    editor.putBoolean(ToolsAdapter.iconUrl.get(i), false);\r\n                    editor.commit();\r\n                }\r\n            }\r\n            Log.i(\"initTab\", tmp.toString());\r\n            for (int i = 0 ; i < tmp.size() ; i++){\r\n                if (userInfo.getBoolean(ToolsAdapter.iconUrl.get(i), false)) {\r\n                    switch (i){\r\n                        case 0:\r\n                            mFragmentList.add(new TabData(\"二创图片\", ImageFanArtFragment.newInstance()));\r\n                            break;\r\n                        default:\r\n                            mFragmentList.add(new TabData(ToolsAdapter.name.get(i), WebFragment.newInstance(ToolsAdapter.iconUrl.get(i))));\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        mFragmentList.add(new TabData(\"工具\", ToolsFragment.newInstance()));\r\n    }\r\n\r\n//    public static void updateTabs(List<TabData> FragmentList){\r\n//        mFragmentList.addAll(1, FragmentList);\r\n//        if (viewPager.getAdapter() instanceof BottomPagerAdapter)\r\n//            ((BottomPagerAdapter)viewPager.getAdapter()).updateFragmentList(mFragmentList);\r\n//    }\r\n\r\n    public static int getVersionCode(Context mContext) {\r\n        int versionCode = 0;\r\n        try {\r\n                //获取软件版本号，对应AndroidManifest.xml下android:versionCode\r\n                versionCode = mContext.getPackageManager().\r\n                getPackageInfo(mContext.getPackageName(), 0).versionCode;\r\n        } catch (PackageManager.NameNotFoundException e) {\r\n            e.printStackTrace();\r\n        }\r\n        return versionCode;\r\n    }\r\n\r\n\r\n    /**\r\n     * @description Override实现两次退出\r\n     * @author akari\r\n     * @time 2022/2/27 11:47\r\n     */\r\n    @Override\r\n    public boolean onKeyDown(int keyCode, KeyEvent event) {\r\n        mCurrentFragment = bottomPagerAdapter.getCurrentFragment();\r\n        Log.i(\"instanceof\", String.valueOf(mCurrentFragment instanceof WebFragment));\r\n        Log.i(\"keyCode\", String.valueOf(keyCode));\r\n        //解决音量键的监听被webview劫持无法使用的问题\r\n        if (!(keyCode==KeyEvent.KEYCODE_BACK)){\r\n            return super.onKeyDown(keyCode, event);\r\n        }\r\n        if(mCurrentFragment instanceof WebFragment){\r\n            ((WebFragment)mCurrentFragment).onKeyDown(keyCode, event);\r\n            return true;\r\n        }else if (keyCode==KeyEvent.KEYCODE_BACK && event.getRepeatCount() == 0) {\r\n            long backPressed = System.currentTimeMillis();\r\n            if (backPressed - lastBackPressed > QUIT_INTERVAL) {\r\n                lastBackPressed = backPressed;\r\n                Toast.makeText(this,\"再按一次退出\", Toast.LENGTH_LONG).show();\r\n            } else {\r\n                finish();\r\n                System.exit(0);\r\n            }\r\n            return true;\r\n        }\r\n        return super.onKeyDown(keyCode, event);\r\n    }\r\n\r\n    private void checkPermission() {\r\n        mPermissionList.clear();\r\n        //判断哪些权限未授予\r\n        for (int i = 0; i < permissions.length; i++) {\r\n            if (ContextCompat.checkSelfPermission(this, permissions[i]) != PackageManager.PERMISSION_GRANTED) {\r\n                mPermissionList.add(permissions[i]);\r\n            }\r\n        }\r\n        /**\r\n         * 判断是否为空\r\n         */\r\n        if (mPermissionList.isEmpty()) {//未授予的权限为空，表示都授予了\r\n        } else {//请求权限方法\r\n            String[] permissions = mPermissionList.toArray(new String[mPermissionList.size()]);//将List转为数组\r\n            ActivityCompat.requestPermissions(TestActivity.this, permissions, PERMISSION_REQUEST);\r\n        }\r\n    }\r\n    /**\r\n     * 响应授权\r\n     * 这里不管用户是否拒绝，都进入首页，不再重复申请权限\r\n     */\r\n    @Override\r\n    public void onRequestPermissionsResult(int requestCode, @NonNull String[] permissions, @NonNull int[] grantResults) {\r\n        super.onRequestPermissionsResult(requestCode, permissions, grantResults);\r\n        switch (requestCode) {\r\n            case PERMISSION_REQUEST:\r\n                break;\r\n            default:\r\n                super.onRequestPermissionsResult(requestCode, permissions, grantResults);\r\n                break;\r\n        }\r\n    }\r\n}\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/asasfans/TestActivity.java b/app/src/main/java/com/example/asasfans/TestActivity.java
--- a/app/src/main/java/com/example/asasfans/TestActivity.java	
+++ b/app/src/main/java/com/example/asasfans/TestActivity.java	
@@ -1,6 +1,7 @@
 package com.example.asasfans;
 
 import android.Manifest;
+import android.app.Activity;
 import android.content.Context;
 import android.content.Intent;
 import android.content.SharedPreferences;
@@ -12,6 +13,7 @@
 import android.util.Log;
 import android.view.Gravity;
 import android.view.KeyEvent;
+import android.view.LayoutInflater;
 import android.view.View;
 import android.view.ViewGroup;
 import android.view.animation.Animation;
@@ -32,10 +34,7 @@
 import com.example.asasfans.data.TabData;
 import com.example.asasfans.ui.main.adapter.BottomPagerAdapter;
 import com.example.asasfans.ui.main.adapter.NewBottomPagerAdapter;
-import com.example.asasfans.ui.main.adapter.ToolsAdapter;
-import com.example.asasfans.ui.main.fragment.ImageFanArtFragment;
-import com.example.asasfans.ui.main.fragment.MainFragment;
-import com.example.asasfans.ui.main.fragment.ToolsFragment;
+import com.example.asasfans.ui.main.fragment.NewToolsFragment;
 import com.example.asasfans.ui.main.fragment.WebFragment;
 import com.google.android.material.tabs.TabLayout;
 import com.google.gson.Gson;
@@ -51,6 +50,8 @@
 import com.nostra13.universalimageloader.core.download.BaseImageDownloader;
 import com.orhanobut.dialogplus.DialogPlus;
 import com.orhanobut.dialogplus.ViewHolder;
+import com.yy.floatserver.FloatClient;
+import com.yy.floatserver.FloatHelper;
 
 import java.io.File;
 import java.util.ArrayList;
@@ -93,6 +94,9 @@
     private RotateAnimation mRotateAnimation;
     private Handler mHandler = new Handler();
 
+    private NewBottomPagerAdapter newBottomPagerAdapter;
+
+    private FloatHelper floatHelper;
     /*
     权限相关
      */
@@ -100,17 +104,28 @@
             Manifest.permission.WRITE_EXTERNAL_STORAGE,
             Manifest.permission.INTERNET,
             Manifest.permission.READ_EXTERNAL_STORAGE,
-            Manifest.permission.ACCESS_NETWORK_STATE
+            Manifest.permission.ACCESS_NETWORK_STATE,
+            Manifest.permission.SYSTEM_ALERT_WINDOW
     };
     List<String> mPermissionList = new ArrayList<>();
     private static final int PERMISSION_REQUEST = 1;
 
+    @Override
+    protected void onResume() {
+        super.onResume();
+        floatHelper.show();
+    }
+
     @Override
     protected void onCreate(@Nullable Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
         setContentView(R.layout.new_activity_bottom_main);
         initImageLoader();
         checkPermission();
+        initFloatingBall();
+        floatHelper.show();
+
+
 //        setContentView(R.layout.activity_bottom_main);
 //
 //        //恢复时会第二次添加底部导航栏
@@ -126,8 +141,9 @@
 //        tabs = findViewById(R.id.tabs_bottom);
 //        tabs.setupWithViewPager(viewPager);
         bottomBarLayout = findViewById(R.id.bbl);
+        newBottomPagerAdapter = new NewBottomPagerAdapter(getSupportFragmentManager());
         viewPager = findViewById(R.id.vp_content);
-        viewPager.setAdapter(new NewBottomPagerAdapter(getSupportFragmentManager()));
+        viewPager.setAdapter(newBottomPagerAdapter);
         viewPager.setOffscreenPageLimit(4);
         bottomBarLayout.setViewPager(viewPager);
 
@@ -179,10 +195,12 @@
 //                R.drawable.divider)); //设置分割线的样式
 //        linearLayout.setDividerPadding(20); //设置分割线间隔
 
-        Intent intent =getIntent();
-        Bundle bundle =intent.getExtras();
+        Intent intent = getIntent();
+        Bundle bundle = intent.getExtras();
         Gson gson = new Gson();
-        if (bundle.getString("latestVersion").equals("")){
+        if (bundle == null){
+            Toast.makeText(TestActivity.this, "qqq", Toast.LENGTH_SHORT).show();
+        } else if (bundle.getString("latestVersion").equals("")){
             Toast.makeText(TestActivity.this, "网络错误，版本号获取失败", Toast.LENGTH_SHORT).show();
         }else {
             if (bundle.getString("latestVersion").startsWith("{\"url\"")){
@@ -221,6 +239,7 @@
         }
     }
 
+
     private void cancelTabLoading(BottomBarItem bottomItem) {
         Animation animation = bottomItem.getImageView().getAnimation();
         if (animation != null){
@@ -241,8 +260,8 @@
     }
 
     private void initImageLoader(){
-        Log.i("APATH", getApplicationContext().getFilesDir().getAbsolutePath());
-        Log.i("BPATH", getExternalCacheDir().getPath());
+//        Log.i("APATH", getApplicationContext().getFilesDir().getAbsolutePath());
+//        Log.i("BPATH", getExternalCacheDir().getPath());
         String dirname = getExternalCacheDir().getPath() + "/pic";
 
         // 现在创建目录
@@ -260,7 +279,7 @@
                 .build();
         ImageLoaderConfiguration config = new ImageLoaderConfiguration.Builder(this)
                 .memoryCacheExtraOptions(480, 800) // max width, max height，即保存的每个缓存文件的最大长宽
-                .threadPoolSize(6) //线程池内加载的数量
+                .threadPoolSize(10) //线程池内加载的数量
                 .threadPriority(Thread.NORM_PRIORITY - 2)
                 .denyCacheImageMultipleSizesInMemory()
                 .diskCacheFileNameGenerator(new Md5FileNameGenerator()) //将保存的时候的URI名称用MD5 加密
@@ -270,11 +289,21 @@
                 .tasksProcessingOrder(QueueProcessingType.LIFO)
                 .defaultDisplayImageOptions(options)// 由原先的discCache -> diskCache
                 .diskCache(new UnlimitedDiskCache(new File(dirname)))//自定义缓存路径
-                .imageDownloader(new BaseImageDownloader(this, 5 * 1000, 30 * 1000)) // connectTimeout (5 s), readTimeout (30 s)超时时间
+                .imageDownloader(new BaseImageDownloader(this, 5 * 1000, 5 * 1000)) // connectTimeout (5 s), readTimeout (30 s)超时时间
 //                .writeDebugLogs() // Remove for release app
                 .build();
         ImageLoader.getInstance().init(config);//全局初始化此配置
     }
+    private void initFloatingBall(){
+        View view =  LayoutInflater.from(this).inflate(R.layout.video_recyclerview, null);;
+        floatHelper = new FloatClient.Builder()
+                .with(this)
+                .addView(view)
+                .enableDefaultPermissionDialog(true)
+                .setClickTarget(TestActivity.class)
+                .build();
+        floatHelper.show();
+    }
 
     /**
      * @description 根据存储的CheckBox状态初始化底部栏，与ToolsAdapter耦合性很高，修改时要注意
@@ -283,45 +312,45 @@
      * @author akari
      * @time 2022/3/5 15:02
      */
-    private void initTab() {
-        //这里初始化TabLayout
-//        Log.i("initTab", String.valueOf((getSharedPreferences("ToolsData", MODE_PRIVATE)).contains(ToolsAdapter.iconUrl.get(0))));
-        //判断是否为第一次加载
-        if (!((getSharedPreferences("ToolsData", MODE_PRIVATE)).contains(ToolsAdapter.iconUrl.get(0)))) {
-            userInfo = getSharedPreferences("ToolsData", MODE_PRIVATE);
-            editor = userInfo.edit();
-            for (int i = 0; i < ToolsAdapter.iconUrl.size(); i++) {
-                editor.putBoolean(ToolsAdapter.iconUrl.get(i), false);
-                editor.commit();
-            }
-        }
-        mFragmentList.add(new TabData("视频", MainFragment.newInstance()));
-        if (getSharedPreferences("ToolsData", MODE_PRIVATE) != null){
-            userInfo = getSharedPreferences("ToolsData", MODE_PRIVATE);
-            tmp = userInfo.getAll();
-            if (tmp.size() < ToolsAdapter.iconUrl.size()){
-                editor = userInfo.edit();
-                for (int i = tmp.size(); i < ToolsAdapter.iconUrl.size(); i++) {
-                    editor.putBoolean(ToolsAdapter.iconUrl.get(i), false);
-                    editor.commit();
-                }
-            }
-            Log.i("initTab", tmp.toString());
-            for (int i = 0 ; i < tmp.size() ; i++){
-                if (userInfo.getBoolean(ToolsAdapter.iconUrl.get(i), false)) {
-                    switch (i){
-                        case 0:
-                            mFragmentList.add(new TabData("二创图片", ImageFanArtFragment.newInstance()));
-                            break;
-                        default:
-                            mFragmentList.add(new TabData(ToolsAdapter.name.get(i), WebFragment.newInstance(ToolsAdapter.iconUrl.get(i))));
-                            break;
-                    }
-                }
-            }
-        }
-        mFragmentList.add(new TabData("工具", ToolsFragment.newInstance()));
-    }
+//    private void initTab() {
+//        //这里初始化TabLayout
+////        Log.i("initTab", String.valueOf((getSharedPreferences("ToolsData", MODE_PRIVATE)).contains(ToolsAdapter.iconUrl.get(0))));
+//        //判断是否为第一次加载
+//        if (!((getSharedPreferences("ToolsData", MODE_PRIVATE)).contains(ToolsAdapter.iconUrl.get(0)))) {
+//            userInfo = getSharedPreferences("ToolsData", MODE_PRIVATE);
+//            editor = userInfo.edit();
+//            for (int i = 0; i < ToolsAdapter.iconUrl.size(); i++) {
+//                editor.putBoolean(ToolsAdapter.iconUrl.get(i), false);
+//                editor.commit();
+//            }
+//        }
+//        mFragmentList.add(new TabData("视频", MainFragment.newInstance()));
+//        if (getSharedPreferences("ToolsData", MODE_PRIVATE) != null){
+//            userInfo = getSharedPreferences("ToolsData", MODE_PRIVATE);
+//            tmp = userInfo.getAll();
+//            if (tmp.size() < ToolsAdapter.iconUrl.size()){
+//                editor = userInfo.edit();
+//                for (int i = tmp.size(); i < ToolsAdapter.iconUrl.size(); i++) {
+//                    editor.putBoolean(ToolsAdapter.iconUrl.get(i), false);
+//                    editor.commit();
+//                }
+//            }
+//            Log.i("initTab", tmp.toString());
+//            for (int i = 0 ; i < tmp.size() ; i++){
+//                if (userInfo.getBoolean(ToolsAdapter.iconUrl.get(i), false)) {
+//                    switch (i){
+//                        case 0:
+//                            mFragmentList.add(new TabData("二创图片", ImageFanArtFragment.newInstance()));
+//                            break;
+//                        default:
+//                            mFragmentList.add(new TabData(ToolsAdapter.name.get(i), WebFragment.newInstance(ToolsAdapter.iconUrl.get(i))));
+//                            break;
+//                    }
+//                }
+//            }
+//        }
+//        mFragmentList.add(new TabData("工具", ToolsFragment.newInstance()));
+//    }
 
 //    public static void updateTabs(List<TabData> FragmentList){
 //        mFragmentList.addAll(1, FragmentList);
@@ -349,7 +378,8 @@
      */
     @Override
     public boolean onKeyDown(int keyCode, KeyEvent event) {
-        mCurrentFragment = bottomPagerAdapter.getCurrentFragment();
+        mCurrentFragment = newBottomPagerAdapter.getCurrentFragment();
+
         Log.i("instanceof", String.valueOf(mCurrentFragment instanceof WebFragment));
         Log.i("keyCode", String.valueOf(keyCode));
         //解决音量键的监听被webview劫持无法使用的问题
@@ -359,14 +389,17 @@
         if(mCurrentFragment instanceof WebFragment){
             ((WebFragment)mCurrentFragment).onKeyDown(keyCode, event);
             return true;
-        }else if (keyCode==KeyEvent.KEYCODE_BACK && event.getRepeatCount() == 0) {
+        }else if(mCurrentFragment instanceof NewToolsFragment){
+            ((NewToolsFragment) mCurrentFragment).current().onKeyDown(keyCode, event);
+            return true;
+        }
+        else if (keyCode==KeyEvent.KEYCODE_BACK && event.getRepeatCount() == 0) {
             long backPressed = System.currentTimeMillis();
             if (backPressed - lastBackPressed > QUIT_INTERVAL) {
                 lastBackPressed = backPressed;
                 Toast.makeText(this,"再按一次退出", Toast.LENGTH_LONG).show();
             } else {
                 finish();
-                System.exit(0);
             }
             return true;
         }
@@ -405,5 +438,20 @@
                 break;
         }
     }
+
+    @Override
+    protected void onDestroy() {
+        super.onDestroy();
+        floatHelper.release();
+        Log.i("TestActivity", "onDestroy: ");
+    }
+    public static void launchActivity(Activity act) {
+        try {
+            Intent intent = new Intent(act, TestActivity.class);
+            act.startActivity(intent);
+        } catch (Exception e) {
+            e.printStackTrace();
+        }
+    }
 }
 
Index: app/src/main/res/layout/tools_recyclerview.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<androidx.constraintlayout.widget.ConstraintLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"wrap_content\"\r\n    android:id=\"@+id/tools_layout\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    android:layout_marginLeft=\"10dp\"\r\n    android:layout_marginTop=\"10dp\"\r\n    android:background=\"@drawable/recycler_view_card\"\r\n    android:layout_marginRight=\"10dp\">\r\n    <ImageView\r\n        android:id=\"@+id/web_icon\"\r\n        android:layout_width=\"40dp\"\r\n        android:layout_height=\"40dp\"\r\n        app:layout_constraintHorizontal_chainStyle=\"spread_inside\"\r\n        app:layout_constraintTop_toTopOf=\"parent\"\r\n        app:layout_constraintBottom_toBottomOf=\"parent\"\r\n        app:layout_constraintRight_toLeftOf=\"@+id/web_desc\"\r\n        app:layout_constraintLeft_toLeftOf=\"parent\"\r\n        android:scaleType=\"fitStart\"\r\n        android:src=\"@drawable/icon_asoul_cloud\"/>\r\n\r\n    <TextView\r\n        android:id=\"@+id/web_desc\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:textColor=\"@color/cardBlack\"\r\n        app:layout_constraintTop_toTopOf=\"parent\"\r\n        app:layout_constraintBottom_toBottomOf=\"parent\"\r\n        app:layout_constraintLeft_toRightOf=\"@+id/web_icon\"\r\n        app:layout_constraintRight_toLeftOf=\"@+id/web_check_box\"\r\n        android:text=\"111111\"\r\n        android:textSize=\"15dp\"/>\r\n\r\n    <CheckBox\r\n        android:theme=\"@style/MyCheckBox\"\r\n        android:id=\"@+id/web_check_box\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        app:layout_constraintTop_toTopOf=\"parent\"\r\n        app:layout_constraintBottom_toBottomOf=\"parent\"\r\n        app:layout_constraintLeft_toRightOf=\"@+id/web_desc\"\r\n        app:layout_constraintRight_toRightOf=\"parent\"/>\r\n\r\n</androidx.constraintlayout.widget.ConstraintLayout>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/tools_recyclerview.xml b/app/src/main/res/layout/tools_recyclerview.xml
--- a/app/src/main/res/layout/tools_recyclerview.xml	
+++ b/app/src/main/res/layout/tools_recyclerview.xml	
@@ -1,45 +1,35 @@
 <?xml version="1.0" encoding="utf-8"?>
 <androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
     android:layout_width="match_parent"
-    android:layout_height="wrap_content"
+    android:layout_height="78dp"
     android:id="@+id/tools_layout"
     xmlns:app="http://schemas.android.com/apk/res-auto"
-    android:layout_marginLeft="10dp"
-    android:layout_marginTop="10dp"
-    android:background="@drawable/recycler_view_card"
-    android:layout_marginRight="10dp">
+    android:background="@color/transparent"
+    >
     <ImageView
         android:id="@+id/web_icon"
-        android:layout_width="40dp"
-        android:layout_height="40dp"
-        app:layout_constraintHorizontal_chainStyle="spread_inside"
+        android:layout_width="36dp"
+        android:layout_height="36dp"
         app:layout_constraintTop_toTopOf="parent"
-        app:layout_constraintBottom_toBottomOf="parent"
-        app:layout_constraintRight_toLeftOf="@+id/web_desc"
+        app:layout_constraintRight_toRightOf="parent"
         app:layout_constraintLeft_toLeftOf="parent"
+        app:layout_constraintBottom_toTopOf="@+id/web_desc"
         android:scaleType="fitStart"
         android:src="@drawable/icon_asoul_cloud"/>
 
     <TextView
         android:id="@+id/web_desc"
-        android:layout_width="wrap_content"
-        android:layout_height="wrap_content"
-        android:textColor="@color/cardBlack"
-        app:layout_constraintTop_toTopOf="parent"
+        android:layout_width="60dp"
+        android:layout_height="18dp"
+        android:textColor="@color/cardWhite"
+        app:layout_constraintTop_toBottomOf="@+id/web_icon"
+        app:layout_constraintRight_toRightOf="parent"
+        app:layout_constraintLeft_toLeftOf="parent"
         app:layout_constraintBottom_toBottomOf="parent"
-        app:layout_constraintLeft_toRightOf="@+id/web_icon"
-        app:layout_constraintRight_toLeftOf="@+id/web_check_box"
+        android:gravity="center"
+        android:lines="1"
+        android:ellipsize="end"
         android:text="111111"
-        android:textSize="15dp"/>
-
-    <CheckBox
-        android:theme="@style/MyCheckBox"
-        android:id="@+id/web_check_box"
-        android:layout_width="wrap_content"
-        android:layout_height="wrap_content"
-        app:layout_constraintTop_toTopOf="parent"
-        app:layout_constraintBottom_toBottomOf="parent"
-        app:layout_constraintLeft_toRightOf="@+id/web_desc"
-        app:layout_constraintRight_toRightOf="parent"/>
+        android:textSize="13dp"/>
 
 </androidx.constraintlayout.widget.ConstraintLayout>
Index: app/src/main/java/com/example/asasfans/ui/main/fragment/WebFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.asasfans.ui.main.fragment;\r\n\r\nimport static android.content.Context.DOWNLOAD_SERVICE;\r\n\r\nimport android.app.DownloadManager;\r\nimport android.content.ActivityNotFoundException;\r\nimport android.content.BroadcastReceiver;\r\nimport android.content.Context;\r\nimport android.content.Intent;\r\nimport android.content.IntentFilter;\r\nimport android.graphics.Bitmap;\r\nimport android.net.Uri;\r\nimport android.os.Build;\r\nimport android.os.Bundle;\r\nimport android.os.Environment;\r\nimport android.text.TextUtils;\r\nimport android.util.Log;\r\nimport android.view.KeyEvent;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.webkit.DownloadListener;\r\nimport android.webkit.URLUtil;\r\nimport android.webkit.ValueCallback;\r\nimport android.webkit.WebChromeClient;\r\nimport android.webkit.WebResourceRequest;\r\nimport android.webkit.WebResourceResponse;\r\nimport android.webkit.WebSettings;\r\nimport android.webkit.WebView;\r\nimport android.webkit.WebViewClient;\r\nimport android.widget.LinearLayout;\r\nimport android.widget.ProgressBar;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.annotation.Nullable;\r\nimport androidx.fragment.app.Fragment;\r\n\r\nimport com.example.asasfans.AsApplication;\r\nimport com.example.asasfans.R;\r\nimport com.scwang.smart.refresh.header.BezierRadarHeader;\r\nimport com.scwang.smart.refresh.layout.api.RefreshLayout;\r\nimport com.scwang.smart.refresh.layout.listener.OnRefreshListener;\r\n\r\nimport java.io.IOException;\r\nimport java.io.InputStream;\r\n\r\n\r\n/**\r\n * @author akarinini\r\n * @description webFragment，使用WebView直接加载URL显示，属于BottomPagerAdapter\r\n */\r\n\r\npublic class WebFragment extends Fragment {\r\n    private static WebView webView;\r\n    private ProgressBar progressBar;\r\n    private long exitTime = 0;\r\n    private String url = \"https://asoulcnki.asia/\";\r\n    private static final int REQUEST_CODE_FILE_CHOOSER = 1;\r\n\r\n    private ValueCallback<Uri> mUploadCallbackForLowApi;\r\n    private ValueCallback<Uri[]> mUploadCallbackForHighApi;\r\n\r\n\r\n    public static WebFragment newInstance(String url) {\r\n        WebFragment fragment = new WebFragment();\r\n        Bundle args = new Bundle();\r\n        args.putString(\"WebUrl\", url);\r\n        fragment.setArguments(args);\r\n        return fragment;\r\n    }\r\n\r\n    @Override\r\n    public void onCreate(@Nullable Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        this.url = getArguments().getString(\"WebUrl\");\r\n        // This callback will only be called when MyFragment is at least Started.\r\n//        OnBackPressedCallback callback = new OnBackPressedCallback(true /* enabled by default */) {\r\n//            @Override\r\n//            public void handleOnBackPressed() {\r\n//                // Handle the back button event\r\n//                if (webView.canGoBack()) {\r\n//                    webView.goBack();\r\n//                }else {\r\n//                    getActivity().onBackPressed();\r\n//                }\r\n//            }\r\n//        };\r\n//        requireActivity().getOnBackPressedDispatcher().addCallback(this, callback);\r\n\r\n        // The callback can be enabled or disabled here or in handleOnBackPressed()\r\n    }\r\n\r\n    @Override\r\n    public void onViewCreated(@NonNull View view, @Nullable Bundle savedInstanceState) {\r\n        super.onViewCreated(view, savedInstanceState);\r\n    }\r\n\r\n    @Nullable\r\n    @Override\r\n    public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {\r\n        View view = inflater.inflate(R.layout.fragment_web, container, false);\r\n        webView = view.findViewById(R.id.webView);\r\n        progressBar = view.findViewById(R.id.pb);\r\n\r\n        View emptyView = view.findViewById(R.id.emptyViewWeb);\r\n        LinearLayout.LayoutParams layoutParams = new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, AsApplication.Companion.getStatusBarHeight());\r\n        emptyView.setLayoutParams(layoutParams);\r\n\r\n        RefreshLayout refreshLayout = (RefreshLayout)view.findViewById(R.id.web_refreshLayout);\r\n        //先关掉下拉刷新\r\n        refreshLayout.setEnableRefresh(false);\r\n        refreshLayout.setRefreshHeader(new BezierRadarHeader(getActivity()));\r\n        refreshLayout.setOnRefreshListener(new OnRefreshListener() {\r\n            @Override\r\n            public void onRefresh(@NonNull RefreshLayout refreshLayout) {\r\n                webView.loadUrl(url);\r\n                refreshLayout.finishRefresh();\r\n            }\r\n        });\r\n\r\n        webView.getSettings().setDatabaseEnabled(true);\r\n\r\n        WebSettings webSettings = webView.getSettings();\r\n        webSettings.setJavaScriptCanOpenWindowsAutomatically(true);//设置js可以直接打开窗口，如window.open()，默认为false\r\n        webSettings.setJavaScriptEnabled(true);//是否允许JavaScript脚本运行，默认为false。设置true时，会提醒可能造成XSS漏洞\r\n        webSettings.setSupportZoom(true);//是否可以缩放，默认true\r\n        webSettings.setUseWideViewPort(true);//设置此属性，可任意比例缩放。大视图模式\r\n        webSettings.setLoadWithOverviewMode(true);//和setUseWideViewPort(true)一起解决网页自适应问题\r\n        webSettings.setAppCacheEnabled(true);//是否使用缓存\r\n        webSettings.setDomStorageEnabled(true);//开启本地DOM存储\r\n        webSettings.setLoadsImagesAutomatically(true); // 加载图片\r\n        webSettings.setCacheMode(WebSettings.LOAD_DEFAULT);\r\n\r\n        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP) {\r\n            webView.getSettings().setMixedContentMode(WebSettings.MIXED_CONTENT_ALWAYS_ALLOW);\r\n        }\r\n\r\n        //第一次加载时间会很长，添加加载动画\r\n        webView.setWebChromeClient(new WebChromeClient(){\r\n            @Override\r\n            public boolean onShowFileChooser(WebView webView, ValueCallback<Uri[]> filePathCallback, FileChooserParams fileChooserParams) {\r\n                mUploadCallbackForHighApi = filePathCallback;\r\n                Intent intent = fileChooserParams.createIntent();\r\n                intent.addCategory(Intent.CATEGORY_OPENABLE);\r\n                try {\r\n                    startActivityForResult(intent, REQUEST_CODE_FILE_CHOOSER);\r\n                } catch (ActivityNotFoundException e) {\r\n                    mUploadCallbackForHighApi = null;\r\n//                    Toast.makeText(EShopAiCustomServiceAct.this, R.string.cant_open_file_chooser, Toast.LENGTH_LONG).show();\r\n                    return false;\r\n                }\r\n                return true;\r\n            }\r\n\r\n            @Override\r\n            public void onProgressChanged(WebView view, int newProgress) {\r\n                super.onProgressChanged(view, newProgress);\r\n                if (newProgress <= 100) {\r\n                    progressBar.setProgress(newProgress);\r\n                }\r\n\r\n            }\r\n        });\r\n\r\n        webView.setWebViewClient(new WebViewClient(){\r\n            @Override\r\n            public boolean shouldOverrideKeyEvent(WebView view, KeyEvent event) {\r\n                return super.shouldOverrideKeyEvent(view, event);\r\n            }\r\n\r\n            @Nullable\r\n            @Override\r\n            public WebResourceResponse shouldInterceptRequest(WebView view, WebResourceRequest request) {\r\n                Log.i(\"shouldInterceptRequest:getUrl\", request.getUrl().toString());\r\n                if (request.getUrl().toString().startsWith(\"https://asbbs-static-01.kzmidc.workers.dev/?file=/uploads/files/1/banner_1646556711136.mp4\")){\r\n                    Log.i(\"banner_1646556711136.mp4\", \"shouldInterceptRequest: \");\r\n                    InputStream is = null;\r\n                    // 步骤2:创建一个输入流\r\n                    try {\r\n                        is =getActivity().getApplicationContext().getAssets().open(\"images/abc.png\");\r\n                        // 步骤3:获得需要替换的资源(存放在assets文件夹里)\r\n                        // a. 先在app/src/main下创建一个assets文件夹\r\n                        // b. 在assets文件夹里再创建一个images文件夹\r\n                        // c. 在images文件夹放上需要替换的资源（此处替换的是abc.png图片）\r\n                    } catch (IOException e) {\r\n                        e.printStackTrace();\r\n                    }\r\n                    // 步骤4:替换资源\r\n                    WebResourceResponse response = new WebResourceResponse(\"image/png\", \"utf-8\", is);\r\n                    // 参数1：http请求里该图片的Content-Type,此处图片为image/png\r\n                    // 参数2：编码类型\r\n                    // 参数3：存放着替换资源的输入流（上面创建的那个）\r\n                    return response;\r\n                }\r\n                return super.shouldInterceptRequest(view, request);\r\n            }\r\n\r\n            @Override\r\n            public boolean shouldOverrideUrlLoading(WebView view, WebResourceRequest request) {\r\n                Log.i(\"WebResourceRequest:getUrl\", request.getUrl().toString());\r\n                Log.i(\"WebResourceRequest:getMethod\", request.getMethod());\r\n                if (request.getUrl().toString().startsWith(\"http\")) {\r\n                    return super.shouldOverrideUrlLoading(view, request);\r\n                }else {\r\n                    Intent it = new Intent();\r\n                    it.setAction(Intent.ACTION_VIEW);\r\n                    it.setData(Uri.parse(request.getUrl().toString()));\r\n                    getActivity().startActivity(it);\r\n                    return true;\r\n                }\r\n            }\r\n\r\n            @Override\r\n            public void onPageStarted(WebView view, String url, Bitmap favicon) {\r\n                super.onPageStarted(view, url, favicon);\r\n                progressBar.setVisibility(View.VISIBLE);\r\n            }\r\n\r\n            @Override\r\n            public void onPageFinished(WebView view, String url) {\r\n                super.onPageFinished(view, url);\r\n                progressBar.setVisibility(View.GONE);\r\n            }\r\n        });\r\n\r\n        webView.setDownloadListener(new DownloadListener() {\r\n            @Override\r\n            public void onDownloadStart(String url, String userAgent, String contentDisposition, String mimetype, long contentLength) {\r\n//                downloadByBrowser(url);\r\n                if (url.startsWith(\"http\")) {\r\n                    downloadBySystem(url, contentDisposition, mimetype);\r\n                    // 使用\r\n                    DownloadCompleteReceiver receiver = new DownloadCompleteReceiver();\r\n                    IntentFilter intentFilter = new IntentFilter();\r\n                    intentFilter.addAction(DownloadManager.ACTION_DOWNLOAD_COMPLETE);\r\n                    getActivity().registerReceiver(receiver, intentFilter);\r\n                }else {\r\n                    Toast.makeText(getActivity(), \"下载链接不是http/https协议\", Toast.LENGTH_SHORT).show();\r\n                }\r\n\r\n            }\r\n        });\r\n\r\n//        NotificationManager notificationManager = (NotificationManager) getActivity().getSystemService(Context.NOTIFICATION_SERVICE);\r\n//        String channelId = \"notification\";\r\n//        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O) {//适配一下高版本\r\n//            NotificationChannel channel = new NotificationChannel(channelId,\r\n//                    \"listen\",\r\n//                    NotificationManager.IMPORTANCE_DEFAULT);\r\n//            channel.enableLights(false); //是否在桌面icon展示小红点\r\n//            channel.setLightColor(Color.RED); //小红点颜色\r\n//            channel.setSound(null, null);//关了通知默认提示音\r\n//            channel.setShowBadge(false); //是否在久按桌面图标时显示此渠道的通知\r\n//            notificationManager.createNotificationChannel(channel);\r\n//        }\r\n//        NotificationCompat.Builder builder = new NotificationCompat.Builder(getActivity(), channelId)\r\n//                .setSmallIcon(R.mipmap.ic_launcher)//这玩意在通知栏上显示一个logo\r\n//                .setCategory(CATEGORY_MESSAGE)\r\n//                .setDefaults(DEFAULT_ALL)\r\n//                .setOngoing(true);\r\n//        //点击通知栏跳转的activity\r\n//        Intent intent = new Intent(getActivity(), TestActivity.class);\r\n//        PendingIntent pendingIntent = PendingIntent.getActivity(getActivity(), 0, intent,\r\n//                PendingIntent.FLAG_UPDATE_CURRENT);\r\n//        builder.setAutoCancel(false);//点击不让消失\r\n//        builder.setSound(null);//关了通知默认提示音\r\n//        builder.setPriority(PRIORITY_MAX);//咱们通知很重要\r\n//        builder.setVibrate(null);//关了车震\r\n//        builder.setContentIntent(pendingIntent);//整个点击跳转activity安排上\r\n//        builder.setOnlyAlertOnce(false);\r\n//        RemoteViews remoteViews = initNotifyView();\r\n//        builder.setContent(remoteViews);//把自定义view放上\r\n//        builder.setCustomBigContentView(remoteViews);//把自定义view放上\r\n//        Notification notification = builder.build();\r\n//        notification.flags |= FLAG_ONGOING_EVENT;\r\n//        notification.flags |= Notification.FLAG_NO_CLEAR;//不让手动清除 通知栏常驻\r\n//        notification.sound = null;//关了通知默认提示音\r\n//        notificationManager.notify(1, notification);\r\n\r\n        webView.loadUrl(url);\r\n//        webView.loadUrl(\"https://asoul.cloud/pic\");\r\n//        webView.loadUrl(\"https://liulanmi.com/labs/core.html\");\r\n        return view;\r\n    }\r\n\r\n//    private RemoteViews initNotifyView() {\r\n//        String packageName = getActivity().getPackageName();\r\n//        RemoteViews remoteView = new RemoteViews(packageName, R.layout.song_player);\r\n//        remoteView.setImageViewResource(R.id.widget_album, R.drawable.icon_asoul);\r\n//        remoteView.setTextViewText(R.id.widget_title, \"标题内容\");\r\n//        remoteView.setTextViewText(R.id.widget_artist, \"小标题内容\");\r\n//\r\n//        Intent prv = new Intent(getActivity(), XMPlayerReceiver.class);//播放上一首\r\n//        prv.setAction(PLAY_PRE);\r\n//        PendingIntent intent_prev = PendingIntent.getBroadcast(getActivity(), 1, prv,\r\n//                PendingIntent.FLAG_UPDATE_CURRENT);\r\n//        remoteView.setOnClickPendingIntent(R.id.widget_prev, intent_prev);\r\n//\r\n//\r\n//        Intent next = new Intent(getActivity(), XMPlayerReceiver.class);//播放下一首\r\n//        next.setAction(PLAY_NEXT);\r\n//        PendingIntent intent_next = PendingIntent.getBroadcast(getActivity(), 2, next,\r\n//                PendingIntent.FLAG_UPDATE_CURRENT);\r\n//        remoteView.setOnClickPendingIntent(R.id.widget_next, intent_next);\r\n//\r\n//\r\n//        Intent startpause = new Intent(getActivity(), XMPlayerReceiver.class);//暂停\r\n//        startpause.setAction(PLAY_PAUSE);\r\n//        PendingIntent intent_pause = PendingIntent.getBroadcast(getActivity(), 3, startpause,\r\n//                PendingIntent.FLAG_UPDATE_CURRENT);\r\n//        remoteView.setOnClickPendingIntent(R.id.widget_play, intent_pause);\r\n//\r\n//        Intent startplay = new Intent(getActivity(), XMPlayerReceiver.class);//播放\r\n//        startplay.setAction(PLAY_PLAY);\r\n//        PendingIntent intent_play = PendingIntent.getBroadcast(getActivity(), 4, startplay,\r\n//                PendingIntent.FLAG_UPDATE_CURRENT);\r\n//        remoteView.setOnClickPendingIntent(R.id.widget_play, intent_play);\r\n//        return remoteView;\r\n//    }\r\n//\r\n//    public static void clickPreviousSong(){\r\n//        if (webView == null){\r\n//            Log.i(\"clickPreviousSong\", \"clickPreviousSong: \");\r\n//        }else {\r\n//            webView.loadUrl(\"javascript:document.getElementsByClassName(\\\"prevButton playButtons\\\").click();\");\r\n//        }\r\n//\r\n//    }\r\n\r\n    public void onKeyDown(int keyCode, KeyEvent event) {\r\n        if ((keyCode == KeyEvent.KEYCODE_BACK) && webView.canGoBack()) {\r\n            webView.goBack();\r\n        }\r\n        else if ((keyCode == KeyEvent.KEYCODE_BACK) && (!webView.canGoBack()) && event.getRepeatCount() == 0) {\r\n            if ((System.currentTimeMillis() - exitTime) > 2000) {\r\n                Toast.makeText(getActivity(), \"再按一次退出程序\", Toast.LENGTH_SHORT).show();\r\n                exitTime = System.currentTimeMillis();\r\n            } else {\r\n                getActivity().finish();\r\n                System.exit(0);\r\n            }\r\n        }\r\n    }\r\n    public void onKeyDownInClick(int keyCode, KeyEvent event) {\r\n        if ((keyCode == KeyEvent.KEYCODE_BACK) && webView.canGoBack()) {\r\n            webView.goBack();\r\n        }\r\n        else if ((keyCode == KeyEvent.KEYCODE_BACK) && (!webView.canGoBack())) {\r\n            getActivity().finish();\r\n        }\r\n    }\r\n\r\n\r\n    private void downloadByBrowser(String url) {\r\n        Intent intent = new Intent(Intent.ACTION_VIEW, Uri.parse(url));\r\n        intent.addCategory(Intent.CATEGORY_BROWSABLE);\r\n        getActivity().startActivity(intent);\r\n    }\r\n\r\n    private void downloadBySystem(String url, String contentDisposition, String mimeType) {\r\n        // 指定下载地址\r\n        DownloadManager.Request request = new DownloadManager.Request(Uri.parse(url));\r\n        // 允许媒体扫描，根据下载的文件类型被加入相册、音乐等媒体库\r\n        request.allowScanningByMediaScanner();\r\n        // 设置通知的显示类型，下载进行时和完成后显示通知\r\n        request.setNotificationVisibility(DownloadManager.Request.VISIBILITY_VISIBLE_NOTIFY_COMPLETED);\r\n        // 设置通知栏的标题，如果不设置，默认使用文件名\r\n//        request.setTitle(\"This is title\");\r\n        // 设置通知栏的描述\r\n//        request.setDescription(\"This is description\");\r\n        // 允许在计费流量下下载\r\n        request.setAllowedOverMetered(false);\r\n        // 允许该记录在下载管理界面可见\r\n        request.setVisibleInDownloadsUi(false);\r\n        // 允许漫游时下载\r\n        request.setAllowedOverRoaming(true);\r\n        // 允许下载的网路类型\r\n        request.setAllowedNetworkTypes(DownloadManager.Request.NETWORK_WIFI);\r\n        // 设置下载文件保存的路径和文件名\r\n        String fileName  = URLUtil.guessFileName(url, contentDisposition, mimeType);\r\n//        log.debug(\"fileName:{}\", fileName);\r\n        request.setDestinationInExternalPublicDir(Environment.DIRECTORY_DOWNLOADS, fileName);\r\n//        另外可选一下方法，自定义下载路径\r\n//        request.setDestinationUri()\r\n//        request.setDestinationInExternalFilesDir()\r\n        final DownloadManager downloadManager = (DownloadManager) getActivity().getSystemService(DOWNLOAD_SERVICE);\r\n        // 添加一个下载任务\r\n        long downloadId = downloadManager.enqueue(request);\r\n//        log.debug(\"downloadId:{}\", downloadId);\r\n    }\r\n\r\n    private class DownloadCompleteReceiver extends BroadcastReceiver {\r\n\r\n        @Override\r\n        public void onReceive(Context context, Intent intent) {\r\n//            log.verbose(\"onReceive. intent:{}\", intent != null ? intent.toUri(0) : null);\r\n            if (intent != null) {\r\n                if (DownloadManager.ACTION_DOWNLOAD_COMPLETE.equals(intent.getAction())) {\r\n                    long downloadId = intent.getLongExtra(DownloadManager.EXTRA_DOWNLOAD_ID, -1);\r\n//                    log.debug(\"downloadId:{}\", downloadId);\r\n                    DownloadManager downloadManager = (DownloadManager) context.getSystemService(DOWNLOAD_SERVICE);\r\n                    String type = downloadManager.getMimeTypeForDownloadedFile(downloadId);\r\n//                    log.debug(\"getMimeTypeForDownloadedFile:{}\", type);\r\n                    if (TextUtils.isEmpty(type)) {\r\n                        type = \"*/*\";\r\n                    }\r\n                    Uri uri = downloadManager.getUriForDownloadedFile(downloadId);\r\n//                    log.debug(\"UriForDownloadedFile:{}\", uri);\r\n                    if (uri != null) {\r\n                        Intent handlerIntent = new Intent(Intent.ACTION_VIEW);\r\n                        handlerIntent.setDataAndType(uri, type);\r\n                        context.startActivity(handlerIntent);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/asasfans/ui/main/fragment/WebFragment.java b/app/src/main/java/com/example/asasfans/ui/main/fragment/WebFragment.java
--- a/app/src/main/java/com/example/asasfans/ui/main/fragment/WebFragment.java	
+++ b/app/src/main/java/com/example/asasfans/ui/main/fragment/WebFragment.java	
@@ -1,5 +1,7 @@
 package com.example.asasfans.ui.main.fragment;
 
+import static android.app.Activity.RESULT_CANCELED;
+import static android.app.Activity.RESULT_OK;
 import static android.content.Context.DOWNLOAD_SERVICE;
 
 import android.app.DownloadManager;
@@ -7,7 +9,6 @@
 import android.content.BroadcastReceiver;
 import android.content.Context;
 import android.content.Intent;
-import android.content.IntentFilter;
 import android.graphics.Bitmap;
 import android.net.Uri;
 import android.os.Build;
@@ -23,6 +24,7 @@
 import android.webkit.URLUtil;
 import android.webkit.ValueCallback;
 import android.webkit.WebChromeClient;
+import android.webkit.WebResourceError;
 import android.webkit.WebResourceRequest;
 import android.webkit.WebResourceResponse;
 import android.webkit.WebSettings;
@@ -38,9 +40,6 @@
 
 import com.example.asasfans.AsApplication;
 import com.example.asasfans.R;
-import com.scwang.smart.refresh.header.BezierRadarHeader;
-import com.scwang.smart.refresh.layout.api.RefreshLayout;
-import com.scwang.smart.refresh.layout.listener.OnRefreshListener;
 
 import java.io.IOException;
 import java.io.InputStream;
@@ -52,7 +51,7 @@
  */
 
 public class WebFragment extends Fragment {
-    private static WebView webView;
+    public WebView webView;
     private ProgressBar progressBar;
     private long exitTime = 0;
     private String url = "https://asoulcnki.asia/";
@@ -61,11 +60,14 @@
     private ValueCallback<Uri> mUploadCallbackForLowApi;
     private ValueCallback<Uri[]> mUploadCallbackForHighApi;
 
+    private Boolean inBottom = true;
 
-    public static WebFragment newInstance(String url) {
+
+    public static WebFragment newInstance(String url, Boolean inBottom) {
         WebFragment fragment = new WebFragment();
         Bundle args = new Bundle();
         args.putString("WebUrl", url);
+        args.putBoolean("Bottom", inBottom);
         fragment.setArguments(args);
         return fragment;
     }
@@ -74,6 +76,7 @@
     public void onCreate(@Nullable Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
         this.url = getArguments().getString("WebUrl");
+        this.inBottom = getArguments().getBoolean("Bottom");
         // This callback will only be called when MyFragment is at least Started.
 //        OnBackPressedCallback callback = new OnBackPressedCallback(true /* enabled by default */) {
 //            @Override
@@ -96,28 +99,57 @@
         super.onViewCreated(view, savedInstanceState);
     }
 
+    @Override
+    public void onActivityResult(int requestCode, int resultCode, @Nullable Intent data) {
+        if (requestCode == REQUEST_CODE_FILE_CHOOSER && (resultCode == RESULT_OK || resultCode == RESULT_CANCELED)) {
+            afterFileChooseGoing(resultCode, data);
+        }
+    }
+
+    private void afterFileChooseGoing(int resultCode, Intent data) {
+        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP) {
+            if (mUploadCallbackForHighApi == null) {
+                return;
+            }
+            mUploadCallbackForHighApi.onReceiveValue(WebChromeClient.FileChooserParams.parseResult(resultCode, data));
+            mUploadCallbackForHighApi = null;
+        } else {
+            if (mUploadCallbackForLowApi == null) {
+                return;
+            }
+            Uri result = data == null ? null : data.getData();
+            mUploadCallbackForLowApi.onReceiveValue(result);
+            mUploadCallbackForLowApi = null;
+        }
+    }
+
     @Nullable
     @Override
     public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {
-        View view = inflater.inflate(R.layout.fragment_web, container, false);
-        webView = view.findViewById(R.id.webView);
-        progressBar = view.findViewById(R.id.pb);
-
-        View emptyView = view.findViewById(R.id.emptyViewWeb);
-        LinearLayout.LayoutParams layoutParams = new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, AsApplication.Companion.getStatusBarHeight());
-        emptyView.setLayoutParams(layoutParams);
-
-        RefreshLayout refreshLayout = (RefreshLayout)view.findViewById(R.id.web_refreshLayout);
-        //先关掉下拉刷新
-        refreshLayout.setEnableRefresh(false);
-        refreshLayout.setRefreshHeader(new BezierRadarHeader(getActivity()));
-        refreshLayout.setOnRefreshListener(new OnRefreshListener() {
-            @Override
-            public void onRefresh(@NonNull RefreshLayout refreshLayout) {
-                webView.loadUrl(url);
-                refreshLayout.finishRefresh();
-            }
-        });
+        View view;
+        //兼容状态栏
+        if (inBottom) {
+            view = inflater.inflate(R.layout.fragment_web, container, false);
+            View emptyView = view.findViewById(R.id.emptyViewWeb);
+            LinearLayout.LayoutParams layoutParams = new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, AsApplication.Companion.getStatusBarHeight());
+            emptyView.setLayoutParams(layoutParams);
+        }else {
+            view = inflater.inflate(R.layout.fragment_tools_web, container, false);
+        }
+
+        webView = view.findViewById(R.id.webView);
+        progressBar = view.findViewById(R.id.pb);
+//        RefreshLayout refreshLayout = (RefreshLayout)view.findViewById(R.id.web_refreshLayout);
+//        //先关掉下拉刷新
+//        refreshLayout.setEnableRefresh(false);
+//        refreshLayout.setRefreshHeader(new BezierRadarHeader(getActivity()));
+//        refreshLayout.setOnRefreshListener(new OnRefreshListener() {
+//            @Override
+//            public void onRefresh(@NonNull RefreshLayout refreshLayout) {
+//                webView.loadUrl(url);
+//                refreshLayout.finishRefresh();
+//            }
+//        });
 
         webView.getSettings().setDatabaseEnabled(true);
 
@@ -132,6 +164,9 @@
         webSettings.setLoadsImagesAutomatically(true); // 加载图片
         webSettings.setCacheMode(WebSettings.LOAD_DEFAULT);
 
+
+
+
         if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP) {
             webView.getSettings().setMixedContentMode(WebSettings.MIXED_CONTENT_ALWAYS_ALLOW);
         }
@@ -145,9 +180,10 @@
                 intent.addCategory(Intent.CATEGORY_OPENABLE);
                 try {
                     startActivityForResult(intent, REQUEST_CODE_FILE_CHOOSER);
+//                    Toast.makeText(getActivity(), "can_open_file_chooser", Toast.LENGTH_LONG).show();
                 } catch (ActivityNotFoundException e) {
                     mUploadCallbackForHighApi = null;
-//                    Toast.makeText(EShopAiCustomServiceAct.this, R.string.cant_open_file_chooser, Toast.LENGTH_LONG).show();
+//                    Toast.makeText(getActivity(), "R.string.cant_open_file_chooser", Toast.LENGTH_LONG).show();
                     return false;
                 }
                 return true;
@@ -203,10 +239,14 @@
                 if (request.getUrl().toString().startsWith("http")) {
                     return super.shouldOverrideUrlLoading(view, request);
                 }else {
-                    Intent it = new Intent();
-                    it.setAction(Intent.ACTION_VIEW);
-                    it.setData(Uri.parse(request.getUrl().toString()));
-                    getActivity().startActivity(it);
+                    try {
+                        Intent it = new Intent();
+                        it.setAction(Intent.ACTION_VIEW);
+                        it.setData(Uri.parse(request.getUrl().toString()));
+                        getActivity().startActivity(it);
+                    }catch (Exception e){
+                        Toast.makeText(getActivity(), "没有找到对应app", Toast.LENGTH_SHORT).show();
+                    }
                     return true;
                 }
             }
@@ -222,22 +262,37 @@
                 super.onPageFinished(view, url);
                 progressBar.setVisibility(View.GONE);
             }
+
+            @Override
+            public void onReceivedError(WebView view, WebResourceRequest request, WebResourceError error) {
+                super.onReceivedError(view, request, error);
+                if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M) {
+                    return;
+                }
+            }
         });
 
         webView.setDownloadListener(new DownloadListener() {
             @Override
             public void onDownloadStart(String url, String userAgent, String contentDisposition, String mimetype, long contentLength) {
 //                downloadByBrowser(url);
-                if (url.startsWith("http")) {
-                    downloadBySystem(url, contentDisposition, mimetype);
-                    // 使用
-                    DownloadCompleteReceiver receiver = new DownloadCompleteReceiver();
-                    IntentFilter intentFilter = new IntentFilter();
-                    intentFilter.addAction(DownloadManager.ACTION_DOWNLOAD_COMPLETE);
-                    getActivity().registerReceiver(receiver, intentFilter);
-                }else {
-                    Toast.makeText(getActivity(), "下载链接不是http/https协议", Toast.LENGTH_SHORT).show();
+                try {
+                    downloadByBrowser(url);
+                }catch (Exception e){
+                    e.printStackTrace();
+                    Toast.makeText(getActivity(), "下载链接浏览器无法识别", Toast.LENGTH_SHORT).show();
                 }
+//                if (url.startsWith("http")) {
+//
+////                    downloadBySystem(url, contentDisposition, mimetype);
+////                    // 使用
+////                    DownloadCompleteReceiver receiver = new DownloadCompleteReceiver();
+////                    IntentFilter intentFilter = new IntentFilter();
+////                    intentFilter.addAction(DownloadManager.ACTION_DOWNLOAD_COMPLETE);
+////                    getActivity().registerReceiver(receiver, intentFilter);
+//                }else {
+//
+//                }
 
             }
         });
@@ -330,15 +385,16 @@
 
     public void onKeyDown(int keyCode, KeyEvent event) {
         if ((keyCode == KeyEvent.KEYCODE_BACK) && webView.canGoBack()) {
+            Log.i("web:onKeyDown", "canGoBack: ");
             webView.goBack();
         }
         else if ((keyCode == KeyEvent.KEYCODE_BACK) && (!webView.canGoBack()) && event.getRepeatCount() == 0) {
+            Log.i("web:onKeyDown", "can not GoBack: ");
             if ((System.currentTimeMillis() - exitTime) > 2000) {
                 Toast.makeText(getActivity(), "再按一次退出程序", Toast.LENGTH_SHORT).show();
                 exitTime = System.currentTimeMillis();
             } else {
                 getActivity().finish();
-                System.exit(0);
             }
         }
     }
Index: app/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>apply plugin: 'com.android.application'\r\napply plugin: 'kotlin-android'\r\n\r\nandroid {\r\n    compileSdkVersion 30\r\n    buildToolsVersion \"30.0.2\"\r\n\r\n    defaultConfig {\r\n        applicationId \"com.example.asasfans\"\r\n        minSdkVersion 25\r\n        //noinspection ExpiredTargetSdkVersion\r\n        targetSdkVersion 25\r\n        versionCode 120\r\n        versionName \"1.2.0\"\r\n\r\n        testInstrumentationRunner \"androidx.test.runner.AndroidJUnitRunner\"\r\n\r\n        javaCompileOptions {\r\n            annotationProcessorOptions {\r\n                includeCompileClasspath true\r\n            }\r\n        }\r\n    }\r\n    compileOptions {\r\n        sourceCompatibility JavaVersion.VERSION_1_8\r\n        targetCompatibility JavaVersion.VERSION_1_8\r\n    }\r\n    buildTypes {\r\n        release {\r\n            minifyEnabled false\r\n            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'\r\n        }\r\n    }\r\n}\r\n\r\ndependencies {\r\n    implementation fileTree(dir: \"libs\", include: [\"*.jar\"])\r\n    implementation 'androidx.appcompat:appcompat:1.2.0'\r\n    implementation 'com.google.android.material:material:1.2.1'\r\n    implementation \"androidx.constraintlayout:constraintlayout:2.1.3\"\r\n    // To use constraintlayout in compose\r\n    implementation \"androidx.constraintlayout:constraintlayout-compose:1.0.0\"\r\n    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'\r\n    testImplementation 'junit:junit:4.12'\r\n    androidTestImplementation 'androidx.test.ext:junit:1.1.2'\r\n    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'\r\n\r\n    implementation 'com.github.donkingliang:ConsecutiveScroller:4.6.1'\r\n\r\n    implementation \"androidx.swiperefreshlayout:swiperefreshlayout:1.1.0\"\r\n\r\n    implementation \"androidx.recyclerview:recyclerview:1.2.1\"\r\n    // For control over item selection of both touch and mouse driven selection\r\n    implementation \"androidx.recyclerview:recyclerview-selection:1.1.0\"\r\n\r\n    implementation 'androidx.appcompat:appcompat:1.0.0'                 //必须 1.0.0 以上\r\n    implementation  'com.scwang.smart:refresh-layout-kernel:2.0.1'      //核心必须依赖\r\n    implementation  'com.scwang.smart:refresh-header-classics:2.0.1'    //经典刷新头\r\n    implementation  'com.scwang.smart:refresh-header-radar:2.0.1'       //雷达刷新头\r\n    implementation  'com.scwang.smart:refresh-header-falsify:2.0.1'     //虚拟刷新头\r\n    implementation  'com.scwang.smart:refresh-header-material:2.0.1'    //谷歌刷新头\r\n    implementation  'com.scwang.smart:refresh-header-two-level:2.0.1'   //二级刷新头\r\n    implementation  'com.scwang.smart:refresh-footer-ball:2.0.1'        //球脉冲加载\r\n    implementation  'com.scwang.smart:refresh-footer-classics:2.0.1'    //经典加载\r\n\r\n    implementation 'com.squareup.okhttp3:okhttp:4.9.3'\r\n\r\n    implementation 'com.google.code.gson:gson:2.9.0'\r\n\r\n    implementation 'com.nostra13.universalimageloader:universal-image-loader:1.9.5' //加载图片开源库\r\n//    implementation (\"com.github.bumptech.glide:glide:4.11.0\") {\r\n//        exclude group: \"com.android.support\"\r\n//    }\r\n//    implementation \"com.android.support:support-fragment:26.1.0\"\r\n    // debugImplementation because LeakCanary should only run in debug builds.\r\n//    debugImplementation 'com.squareup.leakcanary:leakcanary-android:2.8.1'\r\n    implementation 'com.orhanobut:dialogplus:1.11@aar'\r\n\r\n    implementation 'com.google.android.flexbox:flexbox:3.0.0'\r\n\r\n    implementation('com.fasterxml.jackson.core:jackson-core:2.11.1')\r\n    implementation('com.fasterxml.jackson.core:jackson-annotations:2.11.1')\r\n    implementation('com.fasterxml.jackson.core:jackson-databind:2.11.1')\r\n\r\n    //更好用的EditText\r\n    implementation('com.github.chaychan:PowerfulViewLibrary:1.2.2')\r\n    //简单的底部栏\r\n//    implementation('com.github.chaychan:BottomBarLayout:2.0.2')\r\n    //更好的spinner\r\n    implementation('com.github.arcadefire:nice-spinner:1.4.4')\r\n    //更好的radiobutton\r\n    implementation('com.zaaach:tabradiobutton:1.0.2')\r\n    //ios风日期选择器\r\n    implementation('com.contrarywind:Android-PickerView:4.1.9')\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/build.gradle b/app/build.gradle
--- a/app/build.gradle	
+++ b/app/build.gradle	
@@ -1,5 +1,6 @@
 apply plugin: 'com.android.application'
 apply plugin: 'kotlin-android'
+apply plugin: 'com.google.gms.google-services'
 
 android {
     compileSdkVersion 30
@@ -10,8 +11,8 @@
         minSdkVersion 25
         //noinspection ExpiredTargetSdkVersion
         targetSdkVersion 25
-        versionCode 120
-        versionName "1.2.0"
+        versionCode 121
+        versionName "1.2.1"
 
         testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
 
@@ -45,10 +46,12 @@
     androidTestImplementation 'androidx.test.ext:junit:1.1.2'
     androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
 
-    implementation 'com.github.donkingliang:ConsecutiveScroller:4.6.1'
+//    implementation 'com.github.donkingliang:ConsecutiveScroller:4.6.1'
 
     implementation "androidx.swiperefreshlayout:swiperefreshlayout:1.1.0"
 
+    implementation 'com.google.firebase:firebase-analytics:20.1.2'
+
     implementation "androidx.recyclerview:recyclerview:1.2.1"
     // For control over item selection of both touch and mouse driven selection
     implementation "androidx.recyclerview:recyclerview-selection:1.1.0"
@@ -56,11 +59,11 @@
     implementation 'androidx.appcompat:appcompat:1.0.0'                 //必须 1.0.0 以上
     implementation  'com.scwang.smart:refresh-layout-kernel:2.0.1'      //核心必须依赖
     implementation  'com.scwang.smart:refresh-header-classics:2.0.1'    //经典刷新头
-    implementation  'com.scwang.smart:refresh-header-radar:2.0.1'       //雷达刷新头
-    implementation  'com.scwang.smart:refresh-header-falsify:2.0.1'     //虚拟刷新头
+//    implementation  'com.scwang.smart:refresh-header-radar:2.0.1'       //雷达刷新头
+//    implementation  'com.scwang.smart:refresh-header-falsify:2.0.1'     //虚拟刷新头
     implementation  'com.scwang.smart:refresh-header-material:2.0.1'    //谷歌刷新头
-    implementation  'com.scwang.smart:refresh-header-two-level:2.0.1'   //二级刷新头
-    implementation  'com.scwang.smart:refresh-footer-ball:2.0.1'        //球脉冲加载
+//    implementation  'com.scwang.smart:refresh-header-two-level:2.0.1'   //二级刷新头
+//    implementation  'com.scwang.smart:refresh-footer-ball:2.0.1'        //球脉冲加载
     implementation  'com.scwang.smart:refresh-footer-classics:2.0.1'    //经典加载
 
     implementation 'com.squareup.okhttp3:okhttp:4.9.3'
@@ -78,9 +81,9 @@
 
     implementation 'com.google.android.flexbox:flexbox:3.0.0'
 
-    implementation('com.fasterxml.jackson.core:jackson-core:2.11.1')
-    implementation('com.fasterxml.jackson.core:jackson-annotations:2.11.1')
-    implementation('com.fasterxml.jackson.core:jackson-databind:2.11.1')
+//    implementation('com.fasterxml.jackson.core:jackson-core:2.11.1')
+//    implementation('com.fasterxml.jackson.core:jackson-annotations:2.11.1')
+//    implementation('com.fasterxml.jackson.core:jackson-databind:2.11.1')
 
     //更好用的EditText
     implementation('com.github.chaychan:PowerfulViewLibrary:1.2.2')
@@ -92,5 +95,7 @@
     implementation('com.zaaach:tabradiobutton:1.0.2')
     //ios风日期选择器
     implementation('com.contrarywind:Android-PickerView:4.1.9')
+    //悬浮球
+    implementation 'com.alonsol:floatserver:1.0.0'
 
 }
\ No newline at end of file
Index: app/src/main/AndroidManifest.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    package=\"com.example.asasfans\">\r\n\r\n    <uses-permission android:name=\"android.permission.INTERNET\" />\r\n    <uses-permission android:name=\"android.permission.WRITE_EXTERNAL_STORAGE\" />\r\n    <uses-permission android:name=\"android.permission.READ_EXTERNAL_STORAGE\" />\r\n    <uses-permission android:name=\"android.permission.ACCESS_NETWORK_STATE\" />\r\n\r\n    <application\r\n        android:name=\".AsApplication\"\r\n        android:allowBackup=\"true\"\r\n        android:icon=\"@mipmap/icon_asasfan_logo\"\r\n        android:label=\"@string/app_name\"\r\n        android:roundIcon=\"@mipmap/icon_asasfan_round_logo\"\r\n        android:supportsRtl=\"true\"\r\n        android:theme=\"@style/AppTheme.NoActionBar\"\r\n        android:usesCleartextTraffic=\"true\">\r\n\r\n        <activity\r\n            android:name=\".LaunchActivity\"\r\n            android:label=\"@string/app_name\"\r\n            android:theme=\"@style/AppTheme.NoActionBar\">\r\n            <intent-filter>\r\n                <action android:name=\"android.intent.action.MAIN\" />\r\n\r\n                <category android:name=\"android.intent.category.LAUNCHER\" />\r\n            </intent-filter>\r\n        </activity>\r\n        <activity\r\n            android:name=\".TestActivity\"\r\n            android:label=\"@string/app_name\"\r\n            android:theme=\"@style/MainTheme\"></activity>\r\n        <activity\r\n            android:name=\".ui.main.AdvancedSearchActivity\"\r\n            android:label=\"@string/app_name\"\r\n            android:theme=\"@style/MainTheme\"></activity>\r\n        <activity\r\n            android:name=\".ui.main.ClickJumpActivity\"\r\n            android:label=\"@string/app_name\"\r\n            android:theme=\"@style/MainTheme\"></activity>\r\n        <activity\r\n            android:name=\".ui.main.BlackListActivity\"\r\n            android:label=\"@string/app_name\"\r\n            android:theme=\"@style/MainTheme\"></activity>\r\n        <activity\r\n            android:name=\".ui.main.ConfigActivity\"\r\n            android:label=\"@string/app_name\"\r\n            android:theme=\"@style/MainTheme\"></activity>\r\n\r\n        <receiver\r\n            android:name=\".receiver.XMPlayerReceiver\"\r\n            android:exported=\"true\"\r\n            android:process=\":player\">\r\n            <intent-filter>\r\n                <action android:name=\"play_pre\" />\r\n                <action android:name=\"play_next\" />\r\n                <action android:name=\"play_pause\" />\r\n                <action android:name=\"play_play\" />\r\n            </intent-filter>\r\n        </receiver>\r\n    </application>\r\n\r\n</manifest>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/AndroidManifest.xml b/app/src/main/AndroidManifest.xml
--- a/app/src/main/AndroidManifest.xml	
+++ b/app/src/main/AndroidManifest.xml	
@@ -7,6 +7,7 @@
     <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" />
     <uses-permission android:name="android.permission.READ_EXTERNAL_STORAGE" />
     <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />
+    <uses-permission android:name="android.permission.SYSTEM_ALERT_WINDOW" />
 
     <application
         android:name=".AsApplication"
Index: app/src/main/res/drawable/ic_refresh.xml
===================================================================
diff --git a/app/src/main/res/drawable/ic_refresh.xml b/app/src/main/res/drawable/ic_refresh.xml
new file mode 100644
--- /dev/null	
+++ b/app/src/main/res/drawable/ic_refresh.xml	
@@ -0,0 +1,9 @@
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+    android:width="200dp"
+    android:height="200dp"
+    android:viewportWidth="1024"
+    android:viewportHeight="1024">
+  <path
+      android:fillColor="@color/cardWhite"
+      android:pathData="M960,416V192l-73.06,73.06a447.71,447.71 0,0 0,-373.6 -201.09C265.92,63.97 65.31,264.54 65.31,512S265.92,960.03 513.34,960.03a448.06,448.06 0,0 0,415.23 -279.49,38.37 38.37,0 1,0 -71.14,-28.9 371.36,371.36 0,0 1,-344.1 231.58C308.32,883.23 142.11,717.02 142.11,512S308.32,140.77 513.34,140.77c132.45,0 251.94,70.08 318.02,179.84L736,416h224z"/>
+</vector>
Index: app/src/main/java/com/example/asasfans/ui/main/fragment/NewToolsFragment.java
===================================================================
diff --git a/app/src/main/java/com/example/asasfans/ui/main/fragment/NewToolsFragment.java b/app/src/main/java/com/example/asasfans/ui/main/fragment/NewToolsFragment.java
new file mode 100644
--- /dev/null	
+++ b/app/src/main/java/com/example/asasfans/ui/main/fragment/NewToolsFragment.java	
@@ -0,0 +1,360 @@
+package com.example.asasfans.ui.main.fragment;
+
+import static com.example.asasfans.util.ViewUtilsKt.setMargin;
+
+import android.content.Context;
+import android.content.Intent;
+import android.net.Uri;
+import android.os.Bundle;
+import android.os.Handler;
+import android.util.Log;
+import android.view.Gravity;
+import android.view.LayoutInflater;
+import android.view.View;
+import android.view.ViewGroup;
+import android.view.animation.Animation;
+import android.view.animation.RotateAnimation;
+import android.widget.FrameLayout;
+import android.widget.ImageView;
+import android.widget.TextView;
+
+import androidx.annotation.NonNull;
+import androidx.annotation.Nullable;
+import androidx.coordinatorlayout.widget.CoordinatorLayout;
+import androidx.fragment.app.Fragment;
+import androidx.fragment.app.FragmentManager;
+import androidx.fragment.app.FragmentTransaction;
+import androidx.recyclerview.widget.RecyclerView;
+import androidx.recyclerview.widget.StaggeredGridLayoutManager;
+
+import com.example.asasfans.AsApplication;
+import com.example.asasfans.R;
+import com.example.asasfans.util.ACache;
+import com.google.android.material.appbar.AppBarLayout;
+import com.orhanobut.dialogplus.DialogPlus;
+import com.orhanobut.dialogplus.ViewHolder;
+
+import java.util.ArrayList;
+import java.util.Arrays;
+import java.util.List;
+import java.util.Random;
+
+/**
+ * @author akarinini
+ * @description:
+ * @date :2022/4/13 15:46
+ */
+public class NewToolsFragment extends Fragment {
+    private ImageView drop;
+    private ImageView icon;
+    private TextView title;
+    private ImageView refresh;
+    private ImageView browser;
+    private RecyclerView recyclerView;
+    private DialogPlus dialog;
+    private View dialogView;
+    private TextView tips;
+    private List<WebInfo> webInfos = new ArrayList<>();
+    private int currentIndex;
+
+    public FrameLayout frameLayout;
+
+    private RotateAnimation mRotateAnimation;
+    private Handler mHandler = new Handler();
+
+    private List<String> tipList = Arrays.asList(
+            "ASDB:能在线查看ASOUL所有录播的时间轴，五人的服饰，出场的场景；有字幕库，能在线搜索AS成员在直播中说过的每一句话，以及出自于哪场录播的几分几秒；内置切片工具，能精准的只下载一整场录播需要的那一小部分",
+            "录音棚:收录A-SOUL几乎全部Solo以及合唱歌曲，并可在线播放并缓存，有搜索及标签筛选功能，手机端电脑端皆可使用",
+            "AU都在溜:A-SOUL相关投稿播放排行，展示了B站ASOUL相关视频在线观看人数前百的稿件",
+            "二创搜图:A-SOUL二创图片原动态出处搜索",
+            "tips:性能问题，有些web第一次加载会很慢，出现ERR_TIMED_OUT请尝试刷新或右上角浏览器打开哦",
+            "直播搜图:能根据一张图片，在线搜索到这张图片是出自于哪场录播的几分几秒",
+            "枝网查重:提供ASoul评论区小作文查重、检索功能。还有其他小工具：粉丝编号释义(对应的小行星编号)，枝网年度报告，阿草的太极教室(模拟和羊驼私信)等。枝网，用了都说好！另外还为开发者提供查重和OAuth接口。",
+            "魂维基:这里记录了最详细的关于虚拟偶像团体A-SOUL及其相关的内容！",
+            "小作文:收集AU小作文的网站，有直接搜索和标签筛选功能",
+            "方言词典:收录A-SOUL直播及二创产生的衍生梗或偷来的梗，可以进行方便的检索，方便新来的AU快速了解AU话术！",
+            "聊天公示:随时能实时查看各大论坛的管理群的聊天记录, 还有能查看五人粉丝量变化",
+            "AS抖音:A-SOUL 抖音视频 All in one ！展示了ASOUL所有抖音视频投稿",
+            "嘉然音声:收录了嘉然的各种各样的萌萌的声音的按钮站，点击按钮就能发出声音",
+            "向晚音声:收录了向晚的各种各样的萌萌的声音的按钮站，点击按钮就能发出声音",
+            "作文生成:使用GPT-2模型训练的小作文生成器，可以根据你的输入自动补(feng)写(he)出生草的小作文。（提示：输入越长越有意义补全效果越好）",
+            "录播站:在OneDrive，GoogleDrive，百度云盘，阿里云盘，夸克云盘内存放了：ASOUL出道到现在所有的原画录播和配套弹幕及字幕库；录播的音频流文件；4K超分辨率的直播切片；出道到现在唱过的所有歌的MP3歌曲切片；能带弹幕在线观看高码率ASOUL录播"
+    );
+
+    public static NewToolsFragment newInstance() {
+
+        Bundle args = new Bundle();
+
+        NewToolsFragment fragment = new NewToolsFragment();
+        fragment.setArguments(args);
+        return fragment;
+    }
+
+    private void randomText(){
+        int min = 0;
+        int max = tipList.size();
+        Random random = new Random();
+        int num = random.nextInt(max)%(max-min+1) + min;
+        tips.setText(tipList.get(num));
+    }
+
+    @Override
+    public void onCreate(@Nullable Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+        dialog = DialogPlus.newDialog(getActivity())
+                .setContentHolder(new ViewHolder(R.layout.dialog_web_list))
+                .setContentHeight(ViewGroup.LayoutParams.WRAP_CONTENT)
+                .setContentWidth(ViewGroup.LayoutParams.MATCH_PARENT)
+                .setPadding(0,AsApplication.Companion.getStatusBarHeight(),0,0)
+                .setCancelable(true)
+                .setGravity(Gravity.TOP)
+                .create();
+        dialogView = dialog.getHolderView();
+    }
+
+    public WebFragment current(){
+        return (WebFragment) getChildFragmentManager().findFragmentById(R.id.frameLayout);
+    }
+
+    @Override
+    public void onDestroy() {
+        super.onDestroy();
+        Log.i("onDestroy", String.valueOf(currentIndex));
+        ACache aCache = ACache.get(getActivity());
+        aCache.put("toolsFragmentWebUrl", String.valueOf(currentIndex));
+    }
+
+    @Nullable
+    @Override
+    public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {
+        View view = inflater.inflate(R.layout.new_fragment_tools, container, false);
+
+        drop = view.findViewById(R.id.drop);
+        icon = view.findViewById(R.id.icon);
+        title = view.findViewById(R.id.title);
+        refresh = view.findViewById(R.id.refresh);
+        browser = view.findViewById(R.id.browser);
+        frameLayout = view.findViewById(R.id.frameLayout);
+        tips = view.findViewById(R.id.tips);
+
+        frameLayout.setFocusableInTouchMode(true);
+        frameLayout.requestFocus();
+
+        initWebInfo();
+
+        refresh.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View view) {
+                if (mRotateAnimation == null) {
+                    mRotateAnimation = new RotateAnimation(0, 360,
+                            Animation.RELATIVE_TO_SELF, 0.5f, Animation.RELATIVE_TO_SELF,
+                            0.5f);
+                    mRotateAnimation.setDuration(800);
+                    mRotateAnimation.setRepeatCount(-1);
+                }
+                refresh.setAnimation(mRotateAnimation);
+                refresh.startAnimation(mRotateAnimation);
+                mHandler.postDelayed(new Runnable() {
+                    @Override
+                    public void run() {
+                        refresh.clearAnimation();
+                    }
+                },800);
+                updateFragment(currentIndex);
+            }
+        });
+
+        browser.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View view) {
+                Intent intent= new Intent();
+                intent.setAction("android.intent.action.VIEW");
+                Uri content_url = Uri.parse(webInfos.get(currentIndex).getWebUrl());
+                intent.setData(content_url);
+                getActivity().startActivity(intent);
+            }
+        });
+
+        drop.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View view) {
+                dropDown();
+            }
+        });
+        icon.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View view) {
+                dropDown();
+            }
+        });
+        title.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View view) {
+                dropDown();
+            }
+        });
+
+        ACache aCache = ACache.get(getActivity());
+        String tmpACache =  aCache.getAsString("toolsFragmentWebUrl");
+        if (tmpACache == null){
+            currentIndex = 0;
+        }else {
+            currentIndex = Integer.valueOf(tmpACache);
+        }
+        updateFragment(currentIndex);
+
+        View emptyView = view.findViewById(R.id.emptyViewTools);
+        CoordinatorLayout.LayoutParams layoutParams = new CoordinatorLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, AsApplication.Companion.getStatusBarHeight());
+        emptyView.setLayoutParams(layoutParams);
+        AppBarLayout appBarLayout = view.findViewById(R.id.appBar);
+        appBarLayout.setPadding(0, AsApplication.Companion.getStatusBarHeight(),0,0);
+        return view;
+    }
+
+    private void dropDown(){
+        recyclerView = dialogView.findViewById(R.id.tools_recyclerview);
+        tips = dialogView.findViewById(R.id.tips);
+        NewToolsAdapter toolsAdapter = new NewToolsAdapter(getActivity(), webInfos);
+        toolsAdapter.setHasStableIds(true);
+        setMargin(recyclerView, 0, 0, 0, AsApplication.Companion.getStatusBarHeight());
+        recyclerView.setLayoutManager(new StaggeredGridLayoutManager(4, StaggeredGridLayoutManager.VERTICAL));
+        recyclerView.setAdapter(toolsAdapter);
+        randomText();
+        dialog.show();
+    }
+
+    private void initWebInfo(){
+        webInfos.clear();
+        webInfos.add(new WebInfo("https://asoulcnki.asia", "icon_zwcc", "枝网查重", "枝网查重"));
+        webInfos.add(new WebInfo("https://tools.asoulfan.com/zhijiangDict", "icon_zhijiang_book", "方言词典", "方言词典"));
+        webInfos.add(new WebInfo("https://asoul.icu/", "icon_long_comment", "小作文", "小作文"));
+        webInfos.add(new WebInfo("https://asoul.asia/", "icon_asoul", "管理群聊天记录公示", "聊天公示"));
+        webInfos.add(new WebInfo("https://asoulwiki.com/", "icon_asoul", "一个魂维基", "魂维基"));
+        webInfos.add(new WebInfo("http://asoul.infedg.xyz/", "icon_asoul", "小作文生成器", "作文生成"));
+        webInfos.add(new WebInfo("https://nf.asoul-rec.com", "icon_asoul", "A-SOUL原画录播站", "录播站"));
+        webInfos.add(new WebInfo("https://tools.asoulfan.com/ingredientChecking", "icon_asf_bak", "成分姬", "成分姬"));
+        webInfos.add(new WebInfo("http://asoulfan.xyz/", "icon_asf_bak", "羊驼打过的太极/QA查询", "查QA"));
+        webInfos.add(new WebInfo("https://jiaranjintianchishen.me/", "icon_eat_what", "今天吃什么捏", "吃什么"));
+        webInfos.add(new WebInfo("https://bili-url-1251468786.cos-website.ap-shanghai.myqcloud.com/", "icon_url_cos", "黄嘉琪诈骗链接制作工具", "诈骗链接"));
+        webInfos.add(new WebInfo("https://pic.asoulfan.com/", "icon_asf_bak", "搜图姬-二创图片搜索", "二创搜图"));
+        webInfos.add(new WebInfo("https://vtbkeyboard.moe/672328094", "icon_diana_keyboard", "Keyboard 嘉然", "嘉然音声"));
+        webInfos.add(new WebInfo("https://vtbkeyboard.moe/672346917", "icon_ava_keyboard", "Keyboard 向晚", "向晚音声"));
+        webInfos.add(new WebInfo("https://asoul.video/#/", "icon_asoul", "A-SOUL 抖音视频 All in one!", "AS抖音"));
+        webInfos.add(new WebInfo("https://livedb.asoulfan.com/PhotoSearch/index.html", "icon_asoul", "A-Soul 直播图片搜索", "直播搜图"));
+        webInfos.add(new WebInfo("https://online.asoulfan.com/", "icon_asoul", "AU都在溜什么？", "AU都在溜"));
+        webInfos.add(new WebInfo("http://asdb.live", "icon_asoul", "Asoul二创切片的有力助手", "ASDB"));
+    }
+
+    public void updateFragment(int index){
+        FragmentManager fragmentManager = getChildFragmentManager();
+        FragmentTransaction transaction = fragmentManager.beginTransaction();;
+        transaction.replace(R.id.frameLayout, WebFragment.newInstance(webInfos.get(index).getWebUrl(), false));
+        currentIndex = index;
+        title.setText(webInfos.get(index).getWebDesc());
+        icon.setImageResource(getResource(webInfos.get(index).getWebIconFileName(), getActivity()));
+        transaction.commit();
+    }
+
+    public void dialog(){
+        dialog.show();
+    }
+
+    public class NewToolsAdapter extends RecyclerView.Adapter<NewToolsAdapter.NewToolsViewHolder>{
+        private Context context;
+        private List<WebInfo> webInfos;
+
+        public NewToolsAdapter(Context context, List<WebInfo> webInfos) {
+            this.context = context;
+            this.webInfos = webInfos;
+        }
+
+        @NonNull
+        @Override
+        public NewToolsAdapter.NewToolsViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {
+            View view = LayoutInflater.from(context).inflate(R.layout.tools_recyclerview, parent,false);
+            NewToolsAdapter.NewToolsViewHolder newToolsViewHolder = new NewToolsViewHolder(view);
+            view.setOnClickListener(new View.OnClickListener() {
+                @Override
+                public void onClick(View v) {
+                    updateFragment(newToolsViewHolder.getBindingAdapterPosition());
+                    dialog.dismiss();
+                }
+            });
+            return newToolsViewHolder;
+        }
+
+        @Override
+        public void onBindViewHolder(@NonNull NewToolsViewHolder holder, int position) {
+            holder.imageView.setImageResource(getResource(webInfos.get(position).getWebIconFileName(), context));
+            holder.textView.setText(webInfos.get(position).getWebName());
+        }
+
+
+
+        @Override
+        public int getItemCount() {
+            return webInfos.size();
+        }
+
+        public class NewToolsViewHolder extends RecyclerView.ViewHolder {
+            private TextView textView;
+            private ImageView imageView;
+
+            public NewToolsViewHolder(@NonNull View itemView) {
+                super(itemView);
+                textView = itemView.findViewById(R.id.web_desc);
+                imageView = itemView.findViewById(R.id.web_icon);
+            }
+        }
+    }
+    public class WebInfo{
+        private String webUrl;
+        private String WebIconFileName;
+        private String webDesc;
+        private String webName;
+
+        public WebInfo(String webUrl, String webIconFileName, String webDesc, String webName) {
+            this.webUrl = webUrl;
+            WebIconFileName = webIconFileName;
+            this.webDesc = webDesc;
+            this.webName = webName;
+        }
+
+        public String getWebUrl() {
+            return webUrl;
+        }
+
+        public void setWebUrl(String webUrl) {
+            this.webUrl = webUrl;
+        }
+
+        public String getWebIconFileName() {
+            return WebIconFileName;
+        }
+
+        public void setWebIconFileName(String webIconFileName) {
+            WebIconFileName = webIconFileName;
+        }
+
+        public String getWebDesc() {
+            return webDesc;
+        }
+
+        public void setWebDesc(String webDesc) {
+            this.webDesc = webDesc;
+        }
+
+        public String getWebName() {
+            return webName;
+        }
+
+        public void setWebName(String webName) {
+            this.webName = webName;
+        }
+    }
+    public static int getResource(String imageName, Context c) {
+        int resId = c.getResources().getIdentifier(imageName, "drawable", c.getPackageName());
+        return resId;
+    }
+
+}
Index: app/src/main/res/drawable/ic_jump_to.xml
===================================================================
diff --git a/app/src/main/res/drawable/ic_jump_to.xml b/app/src/main/res/drawable/ic_jump_to.xml
new file mode 100644
--- /dev/null	
+++ b/app/src/main/res/drawable/ic_jump_to.xml	
@@ -0,0 +1,12 @@
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+    android:width="200dp"
+    android:height="200dp"
+    android:viewportWidth="1024"
+    android:viewportHeight="1024">
+  <path
+      android:fillColor="@color/cardWhite"
+      android:pathData="M892,928.1H134c-19.9,0 -36,-16.1 -36,-36v-758c0,-19.9 16.1,-36 36,-36h314.1c19.9,0 36,16.1 36,36s-16.1,36 -36,36H170v686h686V579.6c0,-19.9 16.1,-36 36,-36s36,16.1 36,36v312.5c0,19.9 -16.1,36 -36,36z"/>
+  <path
+      android:fillColor="@color/cardWhite"
+      android:pathData="M927.9,131.6v-0.5c-0.1,-1.7 -0.4,-3.3 -0.7,-4.9 0,-0.1 0,-0.2 -0.1,-0.3 -0.4,-1.7 -0.9,-3.3 -1.5,-4.9v-0.1c-0.6,-1.6 -1.4,-3.1 -2.2,-4.6 0,-0.1 -0.1,-0.1 -0.1,-0.2 -0.8,-1.4 -1.7,-2.8 -2.7,-4.1 -0.1,-0.1 -0.2,-0.3 -0.3,-0.4 -0.5,-0.6 -0.9,-1.1 -1.4,-1.7 0,-0.1 -0.1,-0.1 -0.1,-0.2 -0.5,-0.6 -1,-1.1 -1.6,-1.6l-0.4,-0.4c-0.5,-0.5 -1.1,-1 -1.6,-1.5l-0.1,-0.1c-0.6,-0.5 -1.2,-1 -1.9,-1.4 -0.1,-0.1 -0.3,-0.2 -0.4,-0.3 -1.4,-1 -2.8,-1.8 -4.3,-2.6l-0.1,-0.1c-1.6,-0.8 -3.2,-1.5 -4.9,-2 -1.6,-0.5 -3.3,-1 -5,-1.2 -0.1,0 -0.2,0 -0.3,-0.1l-2.4,-0.3h-0.3c-0.7,-0.1 -1.3,-0.1 -2,-0.1H640.1c-19.9,0 -36,16.1 -36,36s16.1,36 36,36h165L487.6,487.6c-14.1,14.1 -14.1,36.9 0,50.9 7,7 16.2,10.5 25.5,10.5 9.2,0 18.4,-3.5 25.5,-10.5L856,221v162.8c0,19.9 16.1,36 36,36s36,-16.1 36,-36V134.1c0,-0.8 0,-1.7 -0.1,-2.5z"/>
+</vector>
Index: app/src/main/java/com/example/asasfans/util/BlurImageView.java
===================================================================
diff --git a/app/src/main/java/com/example/asasfans/util/BlurImageView.java b/app/src/main/java/com/example/asasfans/util/BlurImageView.java
new file mode 100644
--- /dev/null	
+++ b/app/src/main/java/com/example/asasfans/util/BlurImageView.java	
@@ -0,0 +1,337 @@
+package com.example.asasfans.util;
+
+import android.content.Context;
+import android.graphics.Bitmap;
+import android.graphics.BitmapFactory;
+import android.graphics.drawable.BitmapDrawable;
+import android.graphics.drawable.Drawable;
+import android.widget.ImageView;
+
+/**
+ * @author akarinini
+ * @description: https://blog.csdn.net/weixin_31849853/article/details/117723048
+ * @date :2022/4/14 11:03
+ */
+public class BlurImageView {
+
+    /** 水平方向模糊度 */
+
+    public static float HRADIUS = 5;
+
+    /** 竖直方向模糊度 */
+
+    public static float VRADIUS = 5;
+
+    /** 模糊迭代度 */
+
+    public static int ITERATIONS = 5;
+
+    /**
+
+     * 根据bitmap设置高斯模糊
+
+     * @param bmp:bitmap参数
+
+     * @return
+
+     */
+
+    public static Drawable BoxBlurFilter(Bitmap bmp) {
+
+        int width = bmp.getWidth();
+
+        int height = bmp.getHeight();
+
+        int[] inPixels = new int[width * height];
+
+        int[] outPixels = new int[width * height];
+
+        Bitmap bitmap = Bitmap.createBitmap(width, height,Bitmap.Config.ARGB_8888);
+
+        bmp.getPixels(inPixels, 0, width, 0, 0, width, height);
+
+        for (int i = 0; i < ITERATIONS; i++) {
+
+            blur(inPixels, outPixels, width, height, HRADIUS);
+
+            blur(outPixels, inPixels, height, width, VRADIUS);
+
+        }
+
+        blurFractional(inPixels, outPixels, width, height, HRADIUS);
+
+        blurFractional(outPixels, inPixels, height, width, VRADIUS);
+
+        bitmap.setPixels(inPixels, 0, width, 0, 0, width, height);
+
+        Drawable drawable = new BitmapDrawable(bitmap);
+
+        return drawable;
+
+    }
+
+    /**
+
+     * 根据ImageView设置高斯模糊
+
+     * @param img:ImageView
+
+     * @return
+
+     */
+
+    public static void BoxBlurFilter(ImageView img) {
+
+        Bitmap bmp =((BitmapDrawable)img.getDrawable()).getBitmap();
+
+        int width = bmp.getWidth();
+
+        int height = bmp.getHeight();
+
+        int[] inPixels = new int[width * height];
+
+        int[] outPixels = new int[width * height];
+
+        Bitmap bitmap = Bitmap.createBitmap(width, height,Bitmap.Config.ARGB_8888);
+
+        bmp.getPixels(inPixels, 0, width, 0, 0, width, height);
+
+        for (int i = 0; i < ITERATIONS; i++) {
+
+            blur(inPixels, outPixels, width, height, HRADIUS);
+
+            blur(outPixels, inPixels, height, width, VRADIUS);
+
+        }
+
+        blurFractional(inPixels, outPixels, width, height, HRADIUS);
+
+        blurFractional(outPixels, inPixels, height, width, VRADIUS);
+
+        bitmap.setPixels(inPixels, 0, width, 0, 0, width, height);
+
+        Drawable drawable = new BitmapDrawable(bitmap);
+
+        img.setImageDrawable(drawable);
+
+    }
+
+    /**
+
+     * 根据项目资源文件图片返回高斯模糊drawable
+
+     * @param context:上下文
+
+     * @param res:资源id
+
+     */
+
+    public static Drawable BoxBlurFilter(Context context, int res) {
+
+        Bitmap bmp= BitmapFactory.decodeResource(context.getResources(), res);
+
+        return BoxBlurFilter(bmp);
+
+    }
+
+    /**
+
+     * 根据drawable返回高斯模糊
+
+     * @param drawable
+
+     * @return
+
+     */
+
+    public static Drawable BoxBlurFilter(Drawable drawable) {
+
+        Bitmap bitmap = ((BitmapDrawable)drawable).getBitmap();
+
+        return BoxBlurFilter(bitmap);
+
+    }
+
+    /**
+
+     * 核心代码
+
+     * @param in
+
+     * @param out
+
+     * @param width
+
+     * @param height
+
+     * @param radius
+
+     */
+
+    public static void blur(int[] in, int[] out, int width, int height,
+
+                            float radius) {
+
+        int widthMinus1 = width - 1;
+
+        int r = (int) radius;
+
+        int tableSize = 2 * r + 1;
+
+        int divide[] = new int[256 * tableSize];
+
+        for (int i = 0; i < 256 * tableSize; i++)
+
+            divide[i] = i / tableSize;
+
+        int inIndex = 0;
+
+        for (int y = 0; y < height; y++) {
+
+            int outIndex = y;
+
+            int ta = 0, tr = 0, tg = 0, tb = 0;
+
+            for (int i = -r; i <= r; i++) {
+
+                int rgb = in[inIndex + clamp(i, 0, width - 1)];
+
+                ta += (rgb >> 24) & 0xff;
+
+                tr += (rgb >> 16) & 0xff;
+
+                tg += (rgb >> 8) & 0xff;
+
+                tb += rgb & 0xff;
+
+            }
+
+            for (int x = 0; x < width; x++) {
+
+                out[outIndex] = (divide[ta] << 24) | (divide[tr] << 16)
+
+                        | (divide[tg] << 8) | divide[tb];
+
+                int i1 = x + r + 1;
+
+                if (i1 > widthMinus1)
+
+                    i1 = widthMinus1;
+
+                int i2 = x - r;
+
+                if (i2 < 0)
+
+                    i2 = 0;
+
+                int rgb1 = in[inIndex + i1];
+
+                int rgb2 = in[inIndex + i2];
+
+                ta += ((rgb1 >> 24) & 0xff) - ((rgb2 >> 24) & 0xff);
+
+                tr += ((rgb1 & 0xff0000) - (rgb2 & 0xff0000)) >> 16;
+
+                tg += ((rgb1 & 0xff00) - (rgb2 & 0xff00)) >> 8;
+
+                tb += (rgb1 & 0xff) - (rgb2 & 0xff);
+
+                outIndex += height;
+
+            }
+
+            inIndex += width;
+
+        }
+
+    }
+
+    public static void blurFractional(int[] in, int[] out, int width,
+
+                                      int height, float radius) {
+
+        radius -= (int) radius;
+
+        float f = 1.0f / (1 + 2 * radius);
+
+        int inIndex = 0;
+
+        for (int y = 0; y < height; y++) {
+
+            int outIndex = y;
+
+            out[outIndex] = in[0];
+
+            outIndex += height;
+
+            for (int x = 1; x < width - 1; x++) {
+
+                int i = inIndex + x;
+
+                int rgb1 = in[i - 1];
+
+                int rgb2 = in[i];
+
+                int rgb3 = in[i + 1];
+
+                int a1 = (rgb1 >> 24) & 0xff;
+
+                int r1 = (rgb1 >> 16) & 0xff;
+
+                int g1 = (rgb1 >> 8) & 0xff;
+
+                int b1 = rgb1 & 0xff;
+
+                int a2 = (rgb2 >> 24) & 0xff;
+
+                int r2 = (rgb2 >> 16) & 0xff;
+
+                int g2 = (rgb2 >> 8) & 0xff;
+
+                int b2 = rgb2 & 0xff;
+
+                int a3 = (rgb3 >> 24) & 0xff;
+
+                int r3 = (rgb3 >> 16) & 0xff;
+
+                int g3 = (rgb3 >> 8) & 0xff;
+
+                int b3 = rgb3 & 0xff;
+
+                a1 = a2 + (int) ((a1 + a3) * radius);
+
+                r1 = r2 + (int) ((r1 + r3) * radius);
+
+                g1 = g2 + (int) ((g1 + g3) * radius);
+
+                b1 = b2 + (int) ((b1 + b3) * radius);
+
+                a1 *= f;
+
+                r1 *= f;
+
+                g1 *= f;
+
+                b1 *= f;
+
+                out[outIndex] = (a1 << 24) | (r1 << 16) | (g1 << 8) | b1;
+
+                outIndex += height;
+
+            }
+
+            out[outIndex] = in[width - 1];
+
+            inIndex += width;
+
+        }
+
+    }
+
+    public static int clamp(int x, int a, int b) {
+
+        return (x < a) ? a : (x > b) ? b : x;
+
+    }
+
+}
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"DesignSurface\">\r\n    <option name=\"filePathToZoomLevelMap\">\r\n      <map>\r\n        <entry key=\"..\\:/GitHub/as-as-fans/app/src/main/res/drawable-v24/ic_reset_pressed.xml\" value=\"0.1385\" />\r\n        <entry key=\"..\\:/GitHub/as-as-fans/app/src/main/res/drawable-v24/ic_reset_time_pressed.xml\" value=\"0.1385\" />\r\n        <entry key=\"..\\:/GitHub/as-as-fans/app/src/main/res/drawable/b_nothing.xml\" value=\"0.2255\" />\r\n        <entry key=\"..\\:/GitHub/as-as-fans/app/src/main/res/drawable/bg_select_default.xml\" value=\"0.138\" />\r\n        <entry key=\"..\\:/GitHub/as-as-fans/app/src/main/res/drawable/bg_select_pressed.xml\" value=\"0.138\" />\r\n        <entry key=\"..\\:/GitHub/as-as-fans/app/src/main/res/drawable/ic___.xml\" value=\"0.184\" />\r\n        <entry key=\"..\\:/GitHub/as-as-fans/app/src/main/res/drawable/ic_add.xml\" value=\"0.138\" />\r\n        <entry key=\"..\\:/GitHub/as-as-fans/app/src/main/res/drawable/ic_add_pressed.xml\" value=\"0.138\" />\r\n        <entry key=\"..\\:/GitHub/as-as-fans/app/src/main/res/drawable/ic_add_selector.xml\" value=\"0.2215\" />\r\n        <entry key=\"..\\:/GitHub/as-as-fans/app/src/main/res/drawable/ic_bili_part.xml\" value=\"0.209\" />\r\n        <entry key=\"..\\:/GitHub/as-as-fans/app/src/main/res/drawable/ic_bili_up.xml\" value=\"0.209\" />\r\n        <entry key=\"..\\:/GitHub/as-as-fans/app/src/main/res/drawable/ic_bili_video_play.xml\" value=\"0.209\" />\r\n        <entry key=\"..\\:/GitHub/as-as-fans/app/src/main/res/drawable/ic_close.xml\" value=\"0.288\" />\r\n        <entry key=\"..\\:/GitHub/as-as-fans/app/src/main/res/drawable/ic_fab_add.xml\" value=\"0.147\" />\r\n        <entry key=\"..\\:/GitHub/as-as-fans/app/src/main/res/drawable/ic_launcher_background.xml\" value=\"0.2255\" />\r\n        <entry key=\"..\\:/GitHub/as-as-fans/app/src/main/res/drawable/ic_like.xml\" value=\"0.209\" />\r\n        <entry key=\"..\\:/GitHub/as-as-fans/app/src/main/res/drawable/ic_loading.xml\" value=\"0.134\" />\r\n        <entry key=\"..\\:/GitHub/as-as-fans/app/src/main/res/drawable/ic_music.xml\" value=\"0.2205\" />\r\n        <entry key=\"..\\:/GitHub/as-as-fans/app/src/main/res/drawable/ic_music_dark.xml\" value=\"0.2205\" />\r\n        <entry key=\"..\\:/GitHub/as-as-fans/app/src/main/res/drawable/ic_music_light.xml\" value=\"0.138\" />\r\n        <entry key=\"..\\:/GitHub/as-as-fans/app/src/main/res/drawable/ic_new_music.xml\" value=\"0.2035\" />\r\n        <entry key=\"..\\:/GitHub/as-as-fans/app/src/main/res/drawable/ic_new_music_pressed.xml\" value=\"0.2035\" />\r\n        <entry key=\"..\\:/GitHub/as-as-fans/app/src/main/res/drawable/ic_new_other_tools.xml\" value=\"0.2035\" />\r\n        <entry key=\"..\\:/GitHub/as-as-fans/app/src/main/res/drawable/ic_new_other_tools_pressed.xml\" value=\"0.2035\" />\r\n        <entry key=\"..\\:/GitHub/as-as-fans/app/src/main/res/drawable/ic_new_pic.xml\" value=\"0.2\" />\r\n        <entry key=\"..\\:/GitHub/as-as-fans/app/src/main/res/drawable/ic_new_pic_pressed.xml\" value=\"0.193\" />\r\n        <entry key=\"..\\:/GitHub/as-as-fans/app/src/main/res/drawable/ic_new_video.xml\" value=\"0.2035\" />\r\n        <entry key=\"..\\:/GitHub/as-as-fans/app/src/main/res/drawable/ic_new_video_pressed.xml\" value=\"0.2035\" />\r\n        <entry key=\"..\\:/GitHub/as-as-fans/app/src/main/res/drawable/ic_other_tools_dark.xml\" value=\"0.2205\" />\r\n        <entry key=\"..\\:/GitHub/as-as-fans/app/src/main/res/drawable/ic_other_tools_light.xml\" value=\"0.2205\" />\r\n        <entry key=\"..\\:/GitHub/as-as-fans/app/src/main/res/drawable/ic_picture_dark.xml\" value=\"0.2205\" />\r\n        <entry key=\"..\\:/GitHub/as-as-fans/app/src/main/res/drawable/ic_picture_light.xml\" value=\"0.2205\" />\r\n        <entry key=\"..\\:/GitHub/as-as-fans/app/src/main/res/drawable/ic_reset.xml\" value=\"0.138\" />\r\n        <entry key=\"..\\:/GitHub/as-as-fans/app/src/main/res/drawable/ic_reset_selector.xml\" value=\"0.1385\" />\r\n        <entry key=\"..\\:/GitHub/as-as-fans/app/src/main/res/drawable/ic_reset_time.xml\" value=\"0.138\" />\r\n        <entry key=\"..\\:/GitHub/as-as-fans/app/src/main/res/drawable/ic_reset_time_selector.xml\" value=\"0.1385\" />\r\n        <entry key=\"..\\:/GitHub/as-as-fans/app/src/main/res/drawable/ic_search.xml\" value=\"0.138\" />\r\n        <entry key=\"..\\:/GitHub/as-as-fans/app/src/main/res/drawable/ic_to_top.xml\" value=\"0.1735\" />\r\n        <entry key=\"..\\:/GitHub/as-as-fans/app/src/main/res/drawable/ic_top.xml\" value=\"0.2415\" />\r\n        <entry key=\"..\\:/GitHub/as-as-fans/app/src/main/res/drawable/ic_video_dark.xml\" value=\"0.2205\" />\r\n        <entry key=\"..\\:/GitHub/as-as-fans/app/src/main/res/drawable/ic_video_light.xml\" value=\"0.2205\" />\r\n        <entry key=\"..\\:/GitHub/as-as-fans/app/src/main/res/drawable/icon__asasf_black_logo.xml\" value=\"0.2255\" />\r\n        <entry key=\"..\\:/GitHub/as-as-fans/app/src/main/res/drawable/icon_asasf_blue_logo.xml\" value=\"0.2255\" />\r\n        <entry key=\"..\\:/GitHub/as-as-fans/app/src/main/res/drawable/icon_asasf_colorful_logo.xml\" value=\"0.2255\" />\r\n        <entry key=\"..\\:/GitHub/as-as-fans/app/src/main/res/drawable/icon_asasf_white_logo.xml\" value=\"0.2255\" />\r\n        <entry key=\"..\\:/GitHub/as-as-fans/app/src/main/res/drawable/select_selector.xml\" value=\"0.138\" />\r\n        <entry key=\"..\\:/GitHub/as-as-fans/app/src/main/res/drawable/shape_for_custom_spinner.xml\" value=\"0.208\" />\r\n        <entry key=\"..\\:/GitHub/as-as-fans/app/src/main/res/drawable/txt_select_selector.xml\" value=\"0.2205\" />\r\n        <entry key=\"..\\:/GitHub/as-as-fans/app/src/main/res/drawable/upgrade_button_shape.xml\" value=\"0.288\" />\r\n        <entry key=\"..\\:/GitHub/as-as-fans/app/src/main/res/drawable/upgrade_placeholder.xml\" value=\"0.288\" />\r\n        <entry key=\"..\\:/GitHub/as-as-fans/app/src/main/res/layout/activity_advanced_search.xml\" value=\"0.5\" />\r\n        <entry key=\"..\\:/GitHub/as-as-fans/app/src/main/res/layout/activity_black_list.xml\" value=\"0.3151041666666667\" />\r\n        <entry key=\"..\\:/GitHub/as-as-fans/app/src/main/res/layout/activity_bottom_main.xml\" value=\"0.360054347826087\" />\r\n        <entry key=\"..\\:/GitHub/as-as-fans/app/src/main/res/layout/activity_config.xml\" value=\"0.2201114488348531\" />\r\n        <entry key=\"..\\:/GitHub/as-as-fans/app/src/main/res/layout/activity_lanch.xml\" value=\"0.33697916666666666\" />\r\n        <entry key=\"..\\:/GitHub/as-as-fans/app/src/main/res/layout/activity_main.xml\" value=\"0.3104166666666667\" />\r\n        <entry key=\"..\\:/GitHub/as-as-fans/app/src/main/res/layout/blacklist_recyclerview.xml\" value=\"0.21175278622087132\" />\r\n        <entry key=\"..\\:/GitHub/as-as-fans/app/src/main/res/layout/checkbox_tag.xml\" value=\"0.19883485309017224\" />\r\n        <entry key=\"..\\:/GitHub/as-as-fans/app/src/main/res/layout/dialog_black_list_more.xml\" value=\"0.360054347826087\" />\r\n        <entry key=\"..\\:/GitHub/as-as-fans/app/src/main/res/layout/dialog_blacklist_copy_export.xml\" value=\"0.3605072463768116\" />\r\n        <entry key=\"..\\:/GitHub/as-as-fans/app/src/main/res/layout/dialog_upgrade.xml\" value=\"0.33\" />\r\n        <entry key=\"..\\:/GitHub/as-as-fans/app/src/main/res/layout/dialog_video_more.xml\" value=\"0.360054347826087\" />\r\n        <entry key=\"..\\:/GitHub/as-as-fans/app/src/main/res/layout/dialog_why.xml\" value=\"0.45260416666666664\" />\r\n        <entry key=\"..\\:/GitHub/as-as-fans/app/src/main/res/layout/fragment_advanced_search_option.xml\" value=\"0.33\" />\r\n        <entry key=\"..\\:/GitHub/as-as-fans/app/src/main/res/layout/fragment_blacklist.xml\" value=\"0.18888888888888888\" />\r\n        <entry key=\"..\\:/GitHub/as-as-fans/app/src/main/res/layout/fragment_click_jump.xml\" value=\"0.360054347826087\" />\r\n        <entry key=\"..\\:/GitHub/as-as-fans/app/src/main/res/layout/fragment_fan_art_image.xml\" value=\"0.360054347826087\" />\r\n        <entry key=\"..\\:/GitHub/as-as-fans/app/src/main/res/layout/fragment_main.xml\" value=\"0.41632088520055327\" />\r\n        <entry key=\"..\\:/GitHub/as-as-fans/app/src/main/res/layout/fragment_pubdate_video.xml\" value=\"0.360054347826087\" />\r\n        <entry key=\"..\\:/GitHub/as-as-fans/app/src/main/res/layout/fragment_test.xml\" value=\"0.360054347826087\" />\r\n        <entry key=\"..\\:/GitHub/as-as-fans/app/src/main/res/layout/fragment_tools.xml\" value=\"0.45260416666666664\" />\r\n        <entry key=\"..\\:/GitHub/as-as-fans/app/src/main/res/layout/fragment_web.xml\" value=\"0.360054347826087\" />\r\n        <entry key=\"..\\:/GitHub/as-as-fans/app/src/main/res/layout/image_recyclerview.xml\" value=\"0.360054347826087\" />\r\n        <entry key=\"..\\:/GitHub/as-as-fans/app/src/main/res/layout/item_for_custom_spinner.xml\" value=\"0.360054347826087\" />\r\n        <entry key=\"..\\:/GitHub/as-as-fans/app/src/main/res/layout/my_dialog.xml\" value=\"0.360054347826087\" />\r\n        <entry key=\"..\\:/GitHub/as-as-fans/app/src/main/res/layout/new_activity_bottom_main.xml\" value=\"0.33\" />\r\n        <entry key=\"..\\:/GitHub/as-as-fans/app/src/main/res/layout/song_player.xml\" value=\"0.360054347826087\" />\r\n        <entry key=\"..\\:/GitHub/as-as-fans/app/src/main/res/layout/tools_recyclerview.xml\" value=\"0.360054347826087\" />\r\n        <entry key=\"..\\:/GitHub/as-as-fans/app/src/main/res/layout/video_recyclerview.xml\" value=\"0.67\" />\r\n        <entry key=\"..\\:/Users/wrzg8/AndroidStudioProjects/as-as-fans/app/src/main/res/drawable/four_round_stroke_grey.xml\" value=\"0.137\" />\r\n        <entry key=\"..\\:/Users/wrzg8/AndroidStudioProjects/as-as-fans/app/src/main/res/drawable/ic_baseline_play_circle_outline_24.xml\" value=\"0.137\" />\r\n        <entry key=\"..\\:/Users/wrzg8/AndroidStudioProjects/as-as-fans/app/src/main/res/layout/activity_black_list.xml\" value=\"0.3\" />\r\n        <entry key=\"..\\:/Users/wrzg8/AndroidStudioProjects/as-as-fans/app/src/main/res/layout/activity_bottom_main.xml\" value=\"0.2\" />\r\n        <entry key=\"..\\:/Users/wrzg8/AndroidStudioProjects/as-as-fans/app/src/main/res/layout/activity_config.xml\" value=\"0.22826086956521738\" />\r\n        <entry key=\"..\\:/Users/wrzg8/AndroidStudioProjects/as-as-fans/app/src/main/res/layout/activity_lanch.xml\" value=\"0.22826086956521738\" />\r\n        <entry key=\"..\\:/Users/wrzg8/AndroidStudioProjects/as-as-fans/app/src/main/res/layout/activity_main.xml\" value=\"0.1\" />\r\n        <entry key=\"..\\:/Users/wrzg8/AndroidStudioProjects/as-as-fans/app/src/main/res/layout/dialog_black_list_more.xml\" value=\"0.2\" />\r\n        <entry key=\"..\\:/Users/wrzg8/AndroidStudioProjects/as-as-fans/app/src/main/res/layout/dialog_video_more.xml\" value=\"0.36\" />\r\n        <entry key=\"..\\:/Users/wrzg8/AndroidStudioProjects/as-as-fans/app/src/main/res/layout/dialog_why.xml\" value=\"0.36\" />\r\n        <entry key=\"..\\:/Users/wrzg8/AndroidStudioProjects/as-as-fans/app/src/main/res/layout/fragment_click_jump.xml\" value=\"0.1265625\" />\r\n        <entry key=\"..\\:/Users/wrzg8/AndroidStudioProjects/as-as-fans/app/src/main/res/layout/fragment_fan_art_image.xml\" value=\"0.3\" />\r\n        <entry key=\"..\\:/Users/wrzg8/AndroidStudioProjects/as-as-fans/app/src/main/res/layout/fragment_main.xml\" value=\"0.22826086956521738\" />\r\n        <entry key=\"..\\:/Users/wrzg8/AndroidStudioProjects/as-as-fans/app/src/main/res/layout/fragment_pubdate_video.xml\" value=\"0.1265625\" />\r\n        <entry key=\"..\\:/Users/wrzg8/AndroidStudioProjects/as-as-fans/app/src/main/res/layout/fragment_test.xml\" value=\"0.1265625\" />\r\n        <entry key=\"..\\:/Users/wrzg8/AndroidStudioProjects/as-as-fans/app/src/main/res/layout/fragment_tools.xml\" value=\"0.268\" />\r\n        <entry key=\"..\\:/Users/wrzg8/AndroidStudioProjects/as-as-fans/app/src/main/res/layout/fragment_web.xml\" value=\"0.1265625\" />\r\n        <entry key=\"..\\:/Users/wrzg8/AndroidStudioProjects/as-as-fans/app/src/main/res/layout/image_recyclerview.xml\" value=\"0.22826086956521738\" />\r\n        <entry key=\"..\\:/Users/wrzg8/AndroidStudioProjects/as-as-fans/app/src/main/res/layout/item_for_custom_spinner.xml\" value=\"0.22826086956521738\" />\r\n        <entry key=\"..\\:/Users/wrzg8/AndroidStudioProjects/as-as-fans/app/src/main/res/layout/song_player.xml\" value=\"0.1265625\" />\r\n        <entry key=\"..\\:/Users/wrzg8/AndroidStudioProjects/as-as-fans/app/src/main/res/layout/tools_recyclerview.xml\" value=\"0.22826086956521738\" />\r\n        <entry key=\"..\\:/Users/wrzg8/AndroidStudioProjects/as-as-fans/app/src/main/res/layout/video_recyclerview.xml\" value=\"0.36\" />\r\n        <entry key=\"..\\:/as-as-fans/app/src/main/res/drawable/all_fragment_button_shape.xml\" value=\"0.2145\" />\r\n        <entry key=\"..\\:/as-as-fans/app/src/main/res/drawable/all_fragment_button_shape_selected.xml\" value=\"0.2145\" />\r\n        <entry key=\"..\\:/as-as-fans/app/src/main/res/drawable/edit_text_shape.xml\" value=\"0.2145\" />\r\n        <entry key=\"..\\:/as-as-fans/app/src/main/res/drawable/selector_for_custom_spinner.xml\" value=\"0.1755\" />\r\n        <entry key=\"..\\:/as-as-fans/app/src/main/res/drawable/shape_for_custom_spinner.xml\" value=\"0.1755\" />\r\n        <entry key=\"..\\:/as-as-fans/app/src/main/res/layout/activity_black_list.xml\" value=\"0.38177083333333334\" />\r\n        <entry key=\"..\\:/as-as-fans/app/src/main/res/layout/activity_bottom_main.xml\" value=\"0.401268115942029\" />\r\n        <entry key=\"..\\:/as-as-fans/app/src/main/res/layout/activity_config.xml\" value=\"0.3333333333333333\" />\r\n        <entry key=\"..\\:/as-as-fans/app/src/main/res/layout/activity_lanch.xml\" value=\"0.3651041666666667\" />\r\n        <entry key=\"..\\:/as-as-fans/app/src/main/res/layout/activity_main.xml\" value=\"0.39028475711892796\" />\r\n        <entry key=\"..\\:/as-as-fans/app/src/main/res/layout/dialog_black_list_more.xml\" value=\"0.3859375\" />\r\n        <entry key=\"..\\:/as-as-fans/app/src/main/res/layout/dialog_new_version.xml\" value=\"0.3\" />\r\n        <entry key=\"..\\:/as-as-fans/app/src/main/res/layout/dialog_video_more.xml\" value=\"0.38177083333333334\" />\r\n        <entry key=\"..\\:/as-as-fans/app/src/main/res/layout/dialog_why.xml\" value=\"0.2617801047120419\" />\r\n        <entry key=\"..\\:/as-as-fans/app/src/main/res/layout/fragment_bari.xml\" value=\"0.3609375\" />\r\n        <entry key=\"..\\:/as-as-fans/app/src/main/res/layout/fragment_click_jump.xml\" value=\"0.5536458333333333\" />\r\n        <entry key=\"..\\:/as-as-fans/app/src/main/res/layout/fragment_fan_art_image.xml\" value=\"0.4954710144927536\" />\r\n        <entry key=\"..\\:/as-as-fans/app/src/main/res/layout/fragment_main.xml\" value=\"0.4954710144927536\" />\r\n        <entry key=\"..\\:/as-as-fans/app/src/main/res/layout/fragment_test.xml\" value=\"0.4954710144927536\" />\r\n        <entry key=\"..\\:/as-as-fans/app/src/main/res/layout/fragment_tools.xml\" value=\"0.4140625\" />\r\n        <entry key=\"..\\:/as-as-fans/app/src/main/res/layout/fragment_web.xml\" value=\"0.5494791666666666\" />\r\n        <entry key=\"..\\:/as-as-fans/app/src/main/res/layout/image_recyclerview.xml\" value=\"0.5494791666666666\" />\r\n        <entry key=\"..\\:/as-as-fans/app/src/main/res/layout/item_for_custom_spinner.xml\" value=\"0.3609375\" />\r\n        <entry key=\"..\\:/as-as-fans/app/src/main/res/layout/my_dialog.xml\" value=\"0.3333333333333333\" />\r\n        <entry key=\"..\\:/as-as-fans/app/src/main/res/layout/song_player.xml\" value=\"0.33489583333333334\" />\r\n        <entry key=\"..\\:/as-as-fans/app/src/main/res/layout/tools_recyclerview.xml\" value=\"0.3104166666666667\" />\r\n        <entry key=\"..\\:/as-as-fans/app/src/main/res/layout/video_recyclerview.xml\" value=\"0.38177083333333334\" />\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_1_8\" default=\"true\" project-jdk-name=\"1.8\" project-jdk-type=\"JavaSDK\">\r\n    <output url=\"file://$PROJECT_DIR$/build/classes\" />\r\n  </component>\r\n  <component name=\"ProjectType\">\r\n    <option name=\"id\" value=\"Android\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/misc.xml b/.idea/misc.xml
--- a/.idea/misc.xml	
+++ b/.idea/misc.xml	
@@ -16,7 +16,9 @@
         <entry key="..\:/GitHub/as-as-fans/app/src/main/res/drawable/ic_bili_up.xml" value="0.209" />
         <entry key="..\:/GitHub/as-as-fans/app/src/main/res/drawable/ic_bili_video_play.xml" value="0.209" />
         <entry key="..\:/GitHub/as-as-fans/app/src/main/res/drawable/ic_close.xml" value="0.288" />
+        <entry key="..\:/GitHub/as-as-fans/app/src/main/res/drawable/ic_drop_down.xml" value="0.2445" />
         <entry key="..\:/GitHub/as-as-fans/app/src/main/res/drawable/ic_fab_add.xml" value="0.147" />
+        <entry key="..\:/GitHub/as-as-fans/app/src/main/res/drawable/ic_jump_to.xml" value="0.2445" />
         <entry key="..\:/GitHub/as-as-fans/app/src/main/res/drawable/ic_launcher_background.xml" value="0.2255" />
         <entry key="..\:/GitHub/as-as-fans/app/src/main/res/drawable/ic_like.xml" value="0.209" />
         <entry key="..\:/GitHub/as-as-fans/app/src/main/res/drawable/ic_loading.xml" value="0.134" />
@@ -35,6 +37,7 @@
         <entry key="..\:/GitHub/as-as-fans/app/src/main/res/drawable/ic_other_tools_light.xml" value="0.2205" />
         <entry key="..\:/GitHub/as-as-fans/app/src/main/res/drawable/ic_picture_dark.xml" value="0.2205" />
         <entry key="..\:/GitHub/as-as-fans/app/src/main/res/drawable/ic_picture_light.xml" value="0.2205" />
+        <entry key="..\:/GitHub/as-as-fans/app/src/main/res/drawable/ic_refresh.xml" value="0.2445" />
         <entry key="..\:/GitHub/as-as-fans/app/src/main/res/drawable/ic_reset.xml" value="0.138" />
         <entry key="..\:/GitHub/as-as-fans/app/src/main/res/drawable/ic_reset_selector.xml" value="0.1385" />
         <entry key="..\:/GitHub/as-as-fans/app/src/main/res/drawable/ic_reset_time.xml" value="0.138" />
@@ -48,11 +51,13 @@
         <entry key="..\:/GitHub/as-as-fans/app/src/main/res/drawable/icon_asasf_blue_logo.xml" value="0.2255" />
         <entry key="..\:/GitHub/as-as-fans/app/src/main/res/drawable/icon_asasf_colorful_logo.xml" value="0.2255" />
         <entry key="..\:/GitHub/as-as-fans/app/src/main/res/drawable/icon_asasf_white_logo.xml" value="0.2255" />
+        <entry key="..\:/GitHub/as-as-fans/app/src/main/res/drawable/recycler_view_card.xml" value="0.2445" />
         <entry key="..\:/GitHub/as-as-fans/app/src/main/res/drawable/select_selector.xml" value="0.138" />
         <entry key="..\:/GitHub/as-as-fans/app/src/main/res/drawable/shape_for_custom_spinner.xml" value="0.208" />
         <entry key="..\:/GitHub/as-as-fans/app/src/main/res/drawable/txt_select_selector.xml" value="0.2205" />
         <entry key="..\:/GitHub/as-as-fans/app/src/main/res/drawable/upgrade_button_shape.xml" value="0.288" />
         <entry key="..\:/GitHub/as-as-fans/app/src/main/res/drawable/upgrade_placeholder.xml" value="0.288" />
+        <entry key="..\:/GitHub/as-as-fans/app/src/main/res/drawable/web_recyclerview_card.xml" value="0.2445" />
         <entry key="..\:/GitHub/as-as-fans/app/src/main/res/layout/activity_advanced_search.xml" value="0.5" />
         <entry key="..\:/GitHub/as-as-fans/app/src/main/res/layout/activity_black_list.xml" value="0.3151041666666667" />
         <entry key="..\:/GitHub/as-as-fans/app/src/main/res/layout/activity_bottom_main.xml" value="0.360054347826087" />
@@ -65,6 +70,7 @@
         <entry key="..\:/GitHub/as-as-fans/app/src/main/res/layout/dialog_blacklist_copy_export.xml" value="0.3605072463768116" />
         <entry key="..\:/GitHub/as-as-fans/app/src/main/res/layout/dialog_upgrade.xml" value="0.33" />
         <entry key="..\:/GitHub/as-as-fans/app/src/main/res/layout/dialog_video_more.xml" value="0.360054347826087" />
+        <entry key="..\:/GitHub/as-as-fans/app/src/main/res/layout/dialog_web_list.xml" value="0.39114583333333336" />
         <entry key="..\:/GitHub/as-as-fans/app/src/main/res/layout/dialog_why.xml" value="0.45260416666666664" />
         <entry key="..\:/GitHub/as-as-fans/app/src/main/res/layout/fragment_advanced_search_option.xml" value="0.33" />
         <entry key="..\:/GitHub/as-as-fans/app/src/main/res/layout/fragment_blacklist.xml" value="0.18888888888888888" />
@@ -74,14 +80,18 @@
         <entry key="..\:/GitHub/as-as-fans/app/src/main/res/layout/fragment_pubdate_video.xml" value="0.360054347826087" />
         <entry key="..\:/GitHub/as-as-fans/app/src/main/res/layout/fragment_test.xml" value="0.360054347826087" />
         <entry key="..\:/GitHub/as-as-fans/app/src/main/res/layout/fragment_tools.xml" value="0.45260416666666664" />
+        <entry key="..\:/GitHub/as-as-fans/app/src/main/res/layout/fragment_tools_web.xml" value="0.3759057971014493" />
         <entry key="..\:/GitHub/as-as-fans/app/src/main/res/layout/fragment_web.xml" value="0.360054347826087" />
         <entry key="..\:/GitHub/as-as-fans/app/src/main/res/layout/image_recyclerview.xml" value="0.360054347826087" />
         <entry key="..\:/GitHub/as-as-fans/app/src/main/res/layout/item_for_custom_spinner.xml" value="0.360054347826087" />
         <entry key="..\:/GitHub/as-as-fans/app/src/main/res/layout/my_dialog.xml" value="0.360054347826087" />
         <entry key="..\:/GitHub/as-as-fans/app/src/main/res/layout/new_activity_bottom_main.xml" value="0.33" />
+        <entry key="..\:/GitHub/as-as-fans/app/src/main/res/layout/new_fragment_tools.xml" value="0.25" />
         <entry key="..\:/GitHub/as-as-fans/app/src/main/res/layout/song_player.xml" value="0.360054347826087" />
         <entry key="..\:/GitHub/as-as-fans/app/src/main/res/layout/tools_recyclerview.xml" value="0.360054347826087" />
         <entry key="..\:/GitHub/as-as-fans/app/src/main/res/layout/video_recyclerview.xml" value="0.67" />
+        <entry key="..\:/GitHub/as-as-fans/app/src/main/res/layout/view_float.xml" value="0.2256838905775076" />
+        <entry key="..\:/GitHub/as-as-fans/app/src/main/res/layout/view_floating_ball.xml" value="0.3423913043478261" />
         <entry key="..\:/Users/wrzg8/AndroidStudioProjects/as-as-fans/app/src/main/res/drawable/four_round_stroke_grey.xml" value="0.137" />
         <entry key="..\:/Users/wrzg8/AndroidStudioProjects/as-as-fans/app/src/main/res/drawable/ic_baseline_play_circle_outline_24.xml" value="0.137" />
         <entry key="..\:/Users/wrzg8/AndroidStudioProjects/as-as-fans/app/src/main/res/layout/activity_black_list.xml" value="0.3" />
Index: app/src/main/res/layout/view_floating_ball.xml
===================================================================
diff --git a/app/src/main/res/layout/view_floating_ball.xml b/app/src/main/res/layout/view_floating_ball.xml
new file mode 100644
--- /dev/null	
+++ b/app/src/main/res/layout/view_floating_ball.xml	
@@ -0,0 +1,12 @@
+<?xml version="1.0" encoding="utf-8"?>
+<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:orientation="vertical"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent">
+    <ImageView
+        android:layout_width="32dp"
+        android:layout_height="32dp"
+        android:src="@mipmap/icon_asasfan_round_logo"
+        />
+
+</LinearLayout>
\ No newline at end of file
Index: app/src/main/res/drawable/ic_drop_down.xml
===================================================================
diff --git a/app/src/main/res/drawable/ic_drop_down.xml b/app/src/main/res/drawable/ic_drop_down.xml
new file mode 100644
--- /dev/null	
+++ b/app/src/main/res/drawable/ic_drop_down.xml	
@@ -0,0 +1,9 @@
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+    android:width="200dp"
+    android:height="200dp"
+    android:viewportWidth="1024"
+    android:viewportHeight="1024">
+  <path
+      android:fillColor="@color/cardWhite"
+      android:pathData="M512.73,675.32c-8.06,0 -15.79,-3.25 -21.44,-9.01L231.18,400.91c-11.6,-11.84 -11.41,-30.84 0.43,-42.44 11.84,-11.6 30.84,-11.41 42.44,0.43l238.68,243.53L751.41,358.89c11.6,-11.84 30.6,-12.03 42.44,-0.43 11.84,11.6 12.03,30.61 0.43,42.44L534.16,666.31C528.52,672.07 520.79,675.32 512.73,675.32z"/>
+</vector>
Index: .idea/deploymentTargetDropDown.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"deploymentTargetDropDown\">\r\n    <targetSelectedWithDropDown>\r\n      <Target>\r\n        <type value=\"QUICK_BOOT_TARGET\" />\r\n        <deviceKey>\r\n          <Key>\r\n            <type value=\"VIRTUAL_DEVICE_PATH\" />\r\n            <value value=\"C:\\Users\\akari\\.android\\avd\\Pixel_4_API_25.avd\" />\r\n          </Key>\r\n        </deviceKey>\r\n      </Target>\r\n    </targetSelectedWithDropDown>\r\n    <timeTargetWasSelectedWithDropDown value=\"2022-04-11T09:06:28.673777100Z\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/deploymentTargetDropDown.xml b/.idea/deploymentTargetDropDown.xml
--- a/.idea/deploymentTargetDropDown.xml	
+++ b/.idea/deploymentTargetDropDown.xml	
@@ -7,11 +7,11 @@
         <deviceKey>
           <Key>
             <type value="VIRTUAL_DEVICE_PATH" />
-            <value value="C:\Users\akari\.android\avd\Pixel_4_API_25.avd" />
+            <value value="C:\Users\akari\.android\avd\Pixel_4_API_32.avd" />
           </Key>
         </deviceKey>
       </Target>
     </targetSelectedWithDropDown>
-    <timeTargetWasSelectedWithDropDown value="2022-04-11T09:06:28.673777100Z" />
+    <timeTargetWasSelectedWithDropDown value="2022-04-15T08:33:11.203087Z" />
   </component>
 </project>
\ No newline at end of file
Index: app/src/main/res/drawable/web_recyclerview_card.xml
===================================================================
diff --git a/app/src/main/res/drawable/web_recyclerview_card.xml b/app/src/main/res/drawable/web_recyclerview_card.xml
new file mode 100644
--- /dev/null	
+++ b/app/src/main/res/drawable/web_recyclerview_card.xml	
@@ -0,0 +1,18 @@
+<?xml version="1.0" encoding="utf-8"?>
+<shape xmlns:android="http://schemas.android.com/apk/res/android">
+    <!-- 背景颜色 -->
+    <solid android:color="@color/transparent" />
+
+    <!-- 边框的宽度和颜色颜色 -->
+    <stroke android:width="1dip" android:color="@color/transparent" />
+
+    <!-- android:radius 弧形的半径 -->
+    <corners android:radius="10dp"/>
+
+    <!-- padding：Button里面的文字与Button边界的间隔 -->
+    <padding
+        android:left="10dp"
+        android:top="10dp"
+        android:right="10dp"
+        android:bottom="10dp"/>
+</shape>
\ No newline at end of file
Index: app/src/main/res/layout/dialog_web_list.xml
===================================================================
diff --git a/app/src/main/res/layout/dialog_web_list.xml b/app/src/main/res/layout/dialog_web_list.xml
new file mode 100644
--- /dev/null	
+++ b/app/src/main/res/layout/dialog_web_list.xml	
@@ -0,0 +1,33 @@
+<?xml version="1.0" encoding="utf-8"?>
+<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="match_parent"
+    android:orientation="vertical"
+    android:background="@color/tab_text_normal"
+    android:layout_height="match_parent">
+    <TextView
+        android:textSize="20dp"
+        android:gravity="center"
+        android:textColor="@color/cardWhite"
+        android:text="AU的工具箱"
+        android:layout_margin="8dp"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"/>
+    <androidx.recyclerview.widget.RecyclerView
+        android:id="@+id/tools_recyclerview"
+        android:layout_width="match_parent"
+        android:clipToPadding="false"
+        android:layout_height="wrap_content" />
+    <TextView
+        android:id="@+id/tips"
+        android:textSize="12dp"
+        android:gravity="center"
+        android:textColor="@color/cardWhite"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:text="Tips：NP"
+        android:layout_marginLeft="8dp"
+        android:layout_marginRight="8dp"
+        android:layout_marginBottom="8dp"
+        />
+
+</LinearLayout>
\ No newline at end of file
Index: app/src/main/res/layout/video_recyclerview.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<!--RecyclerView滚动布局每个item的布局设计-->\r\n<androidx.constraintlayout.widget.ConstraintLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:layout_marginLeft=\"10dp\"\r\n    android:layout_marginRight=\"10dp\"\r\n    android:layout_width=\"match_parent\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    android:id=\"@+id/videoLayout\"\r\n    android:background=\"@drawable/recycler_view_card\"\r\n    android:layout_height=\"110dp\">\r\n\r\n    <ImageView\r\n        android:layout_width=\"160dp\"\r\n        android:layout_height=\"100dp\"\r\n        android:scaleType=\"fitCenter\"\r\n        android:id=\"@+id/videoPic\"\r\n        android:adjustViewBounds=\"true\"\r\n        app:layout_constraintLeft_toLeftOf=\"parent\"\r\n        app:layout_constraintTop_toTopOf=\"parent\"\r\n        app:layout_constraintBottom_toBottomOf=\"parent\"\r\n        app:layout_constraintRight_toLeftOf=\"@+id/everyVideoData\"/>\r\n    <TextView\r\n        android:id=\"@+id/videoDuration\"\r\n        android:text=\"时长\"\r\n        android:textSize=\"12dp\"\r\n        android:textColor=\"@color/cardWhite\"\r\n        android:background=\"@color/cardGray\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:paddingLeft=\"3dp\"\r\n        android:paddingRight=\"3dp\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_marginRight=\"8dp\"\r\n        android:layout_marginBottom=\"8dp\"\r\n        app:layout_constraintRight_toRightOf=\"@+id/videoPic\"\r\n        app:layout_constraintBottom_toBottomOf=\"@+id/videoPic\"/>\r\n\r\n    <androidx.constraintlayout.widget.ConstraintLayout\r\n        android:id=\"@+id/everyVideoData\"\r\n        android:orientation=\"vertical\"\r\n        android:layout_width=\"0dp\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:paddingLeft=\"10dp\"\r\n        app:layout_constraintLeft_toRightOf=\"@+id/videoPic\"\r\n        app:layout_constraintRight_toRightOf=\"parent\"\r\n        app:layout_constraintTop_toTopOf=\"parent\"\r\n        app:layout_constraintBottom_toBottomOf=\"parent\">\r\n        <TextView\r\n            android:id=\"@+id/videoTitle\"\r\n            android:text=\"标题\"\r\n            android:textStyle=\"bold\"\r\n            android:textColor=\"@color/cardBlack\"\r\n            android:textSize=\"14dp\"\r\n            android:lines=\"2\"\r\n            app:layout_constraintHorizontal_bias=\"0.05\"\r\n            android:ellipsize=\"end\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            app:layout_constraintTop_toTopOf=\"parent\"\r\n            app:layout_constraintBottom_toTopOf=\"@+id/videoTname\"\r\n            app:layout_constraintLeft_toLeftOf=\"parent\"\r\n            app:layout_constraintRight_toRightOf=\"parent\"/>\r\n        <ImageView\r\n            android:id=\"@+id/part\"\r\n            android:src=\"@drawable/ic_bili_part\"\r\n            app:layout_constraintTop_toBottomOf=\"@+id/videoTitle\"\r\n            app:layout_constraintBottom_toTopOf=\"@+id/videoAuthor\"\r\n            app:layout_constraintRight_toRightOf=\"parent\"\r\n            app:layout_constraintLeft_toLeftOf=\"parent\"\r\n            app:layout_constraintHorizontal_bias=\"0.05\"\r\n            android:layout_width=\"16dp\"\r\n            android:layout_height=\"16dp\"/>\r\n        <TextView\r\n            android:id=\"@+id/videoTname\"\r\n            android:text=\"分区\"\r\n            android:textSize=\"12dp\"\r\n            android:paddingLeft=\"1dp\"\r\n            app:layout_constraintHorizontal_bias=\"0\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            app:layout_constraintTop_toBottomOf=\"@+id/videoTitle\"\r\n            app:layout_constraintBottom_toTopOf=\"@+id/videoAuthor\"\r\n            app:layout_constraintLeft_toRightOf=\"@+id/part\"\r\n            app:layout_constraintRight_toRightOf=\"parent\"/>\r\n<!--        <TextView-->\r\n<!--            android:id=\"@+id/videoDuration\"-->\r\n<!--            android:text=\"时长\"-->\r\n<!--            android:textSize=\"12sp\"-->\r\n<!--            android:textColor=\"@color/cardWhite\"-->\r\n<!--            android:background=\"@color/cardGray\"-->\r\n<!--            app:layout_constraintHorizontal_bias=\"0.5\"-->\r\n<!--            android:layout_width=\"wrap_content\"-->\r\n<!--            android:layout_height=\"wrap_content\"-->\r\n<!--            app:layout_constraintTop_toBottomOf=\"@+id/videoTname\"-->\r\n<!--            app:layout_constraintBottom_toTopOf=\"@+id/videoLike\"-->\r\n<!--            app:layout_constraintLeft_toLeftOf=\"parent\"-->\r\n<!--            app:layout_constraintRight_toRightOf=\"parent\"/>-->\r\n        <ImageView\r\n            android:id=\"@+id/like\"\r\n            android:src=\"@drawable/ic_like\"\r\n            android:layout_marginTop=\"2dp\"\r\n            app:layout_constraintHorizontal_bias=\"0.6\"\r\n            app:layout_constraintBottom_toBottomOf=\"parent\"\r\n            app:layout_constraintLeft_toLeftOf=\"parent\"\r\n            app:layout_constraintRight_toRightOf=\"parent\"\r\n            app:layout_constraintTop_toBottomOf=\"@+id/videoAuthor\"\r\n            android:layout_width=\"16dp\"\r\n            android:layout_height=\"16dp\"/>\r\n        <TextView\r\n            android:id=\"@+id/videoLike\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:text=\"点赞\"\r\n            android:textSize=\"12dp\"\r\n            android:paddingLeft=\"1dp\"\r\n            app:layout_constraintHorizontal_bias=\"0\"\r\n            app:layout_constraintBottom_toBottomOf=\"parent\"\r\n            app:layout_constraintLeft_toRightOf=\"@+id/like\"\r\n            app:layout_constraintRight_toRightOf=\"parent\"\r\n            app:layout_constraintTop_toBottomOf=\"@+id/videoAuthor\" />\r\n        <ImageView\r\n            android:id=\"@+id/up\"\r\n            android:src=\"@drawable/ic_bili_up\"\r\n            app:layout_constraintTop_toBottomOf=\"@+id/videoTname\"\r\n            app:layout_constraintBottom_toTopOf=\"@+id/videoView\"\r\n            app:layout_constraintLeft_toLeftOf=\"parent\"\r\n            app:layout_constraintRight_toRightOf=\"parent\"\r\n            app:layout_constraintHorizontal_bias=\"0.05\"\r\n            android:layout_width=\"16dp\"\r\n            android:layout_height=\"16dp\"/>\r\n        <TextView\r\n            android:id=\"@+id/videoAuthor\"\r\n            android:text=\"作者\"\r\n            android:textSize=\"12dp\"\r\n            android:paddingLeft=\"1dp\"\r\n            app:layout_constraintHorizontal_bias=\"0\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            app:layout_constraintTop_toBottomOf=\"@+id/videoTname\"\r\n            app:layout_constraintBottom_toTopOf=\"@+id/videoView\"\r\n            app:layout_constraintLeft_toRightOf=\"@+id/up\"\r\n            app:layout_constraintRight_toRightOf=\"parent\"/>\r\n        <ImageView\r\n            android:id=\"@+id/play\"\r\n            android:src=\"@drawable/ic_bili_video_play\"\r\n            app:layout_constraintBottom_toBottomOf=\"parent\"\r\n            app:layout_constraintLeft_toLeftOf=\"parent\"\r\n            app:layout_constraintTop_toBottomOf=\"@+id/videoAuthor\"\r\n            app:layout_constraintRight_toRightOf=\"parent\"\r\n            app:layout_constraintHorizontal_bias=\"0.05\"\r\n            android:layout_width=\"16dp\"\r\n            android:layout_height=\"16dp\"/>\r\n        <TextView\r\n            android:id=\"@+id/videoView\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:paddingLeft=\"1dp\"\r\n            android:text=\"播放\"\r\n            android:textSize=\"12dp\"\r\n            app:layout_constraintHorizontal_bias=\"0\"\r\n            app:layout_constraintBottom_toBottomOf=\"parent\"\r\n            app:layout_constraintLeft_toRightOf=\"@+id/play\"\r\n            app:layout_constraintTop_toBottomOf=\"@+id/videoAuthor\"\r\n            app:layout_constraintRight_toRightOf=\"parent\"/>\r\n        \r\n        <ImageView\r\n            android:id=\"@+id/video_more\"\r\n            android:layout_width=\"24dp\"\r\n            android:layout_height=\"24dp\"\r\n            app:layout_constraintRight_toRightOf=\"parent\"\r\n            app:layout_constraintBottom_toBottomOf=\"parent\"\r\n            android:src=\"@drawable/more_three_pot\"\r\n            android:scaleType=\"fitCenter\"/>\r\n\r\n\r\n    </androidx.constraintlayout.widget.ConstraintLayout>\r\n\r\n\r\n</androidx.constraintlayout.widget.ConstraintLayout>\r\n\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/video_recyclerview.xml b/app/src/main/res/layout/video_recyclerview.xml
--- a/app/src/main/res/layout/video_recyclerview.xml	
+++ b/app/src/main/res/layout/video_recyclerview.xml	
@@ -133,6 +133,8 @@
             android:text="作者"
             android:textSize="12dp"
             android:paddingLeft="1dp"
+            android:lines="1"
+            android:ellipsize="end"
             app:layout_constraintHorizontal_bias="0"
             android:layout_width="wrap_content"
             android:layout_height="wrap_content"
Index: app/src/main/res/layout/activity_main.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<!--视频页面Fragment-->\r\n<androidx.coordinatorlayout.widget.CoordinatorLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:layout_width=\"match_parent\"\r\n    android:background=\"@color/lightGray\"\r\n    android:layout_height=\"match_parent\">\r\n\r\n    <View\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"0dp\"\r\n        android:id=\"@+id/emptyViewMain\"\r\n        android:elevation=\"5dp\"\r\n        android:outlineProvider=\"none\"\r\n        android:background=\"@color/tab_text_normal\"/>\r\n\r\n    <com.google.android.material.appbar.AppBarLayout\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:id=\"@+id/appBar\"\r\n        android:theme=\"@style/AppTheme\">\r\n\r\n        <androidx.constraintlayout.widget.ConstraintLayout\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_marginTop=\"8dp\"\r\n            app:layout_scrollFlags=\"scroll|enterAlways\"\r\n            android:layout_height=\"wrap_content\">\r\n            <ImageView\r\n                android:id=\"@+id/title\"\r\n                android:layout_width=\"wrap_content\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:maxHeight=\"40dp\"\r\n                android:layout_marginStart=\"16dp\"\r\n                android:gravity=\"center\"\r\n                app:layout_scrollFlags=\"scroll|enterAlways\"\r\n                android:minHeight=\"?actionBarSize\"\r\n                android:textColor=\"@color/cardWhite\"\r\n                android:background=\"@color/tab_text_normal\"\r\n                android:text=\"@string/app_name\"\r\n                android:scaleType=\"fitStart\"\r\n                android:src=\"@drawable/icon_asasf_white_logo\"\r\n                android:adjustViewBounds=\"true\"\r\n                app:layout_constraintTop_toTopOf=\"parent\"\r\n                app:layout_constraintBottom_toBottomOf=\"parent\"\r\n                app:layout_constraintLeft_toLeftOf=\"parent\"\r\n                android:textAppearance=\"@style/TextAppearance.Widget.AppCompat.Toolbar.Title\" />\r\n            <ImageView\r\n                app:layout_constraintTop_toTopOf=\"parent\"\r\n                app:layout_constraintBottom_toBottomOf=\"parent\"\r\n                app:layout_constraintLeft_toLeftOf=\"@+id/video_edittext\"\r\n                android:src=\"@drawable/ic_search\"\r\n                android:layout_width=\"30dp\"\r\n                android:layout_height=\"30dp\"/>\r\n            <androidx.appcompat.widget.AppCompatTextView\r\n                app:layout_constraintLeft_toRightOf=\"@+id/title\"\r\n                app:layout_constraintRight_toLeftOf=\"@+id/video_config\"\r\n                app:layout_constraintTop_toTopOf=\"parent\"\r\n                app:layout_constraintBottom_toBottomOf=\"parent\"\r\n                android:background=\"@drawable/edit_text_shape\"\r\n                android:layout_marginRight=\"8dp\"\r\n                android:hint=\"仅用来高级搜索哦\"\r\n                android:textSize=\"12dp\"\r\n                android:gravity=\"left\"\r\n                app:layout_scrollFlags=\"scroll|enterAlways\"\r\n                android:id=\"@+id/video_edittext\"\r\n                android:layout_width=\"0dp\"\r\n                android:layout_height=\"35dp\"/>\r\n            <ImageView\r\n                android:layout_width=\"28dp\"\r\n                android:layout_height=\"28dp\"\r\n                app:layout_scrollFlags=\"scroll|enterAlways\"\r\n                android:id=\"@+id/video_config\"\r\n                android:src=\"@drawable/icon_config\"\r\n                app:layout_constraintLeft_toRightOf=\"@+id/video_edittext\"\r\n                app:layout_constraintRight_toRightOf=\"parent\"\r\n                app:layout_constraintTop_toTopOf=\"parent\"\r\n                app:layout_constraintBottom_toBottomOf=\"parent\"\r\n                android:layout_marginEnd=\"16dp\"\r\n                />\r\n\r\n        </androidx.constraintlayout.widget.ConstraintLayout>\r\n\r\n        <com.google.android.material.tabs.TabLayout\r\n            android:id=\"@+id/tabs\"\r\n            app:tabRippleColor=\"@android:color/transparent\"\r\n            android:background=\"@color/tab_text_normal\"\r\n            app:tabSelectedTextColor=\"@color/cardWhite\"\r\n            app:tabIndicatorColor=\"@color/cardWhite\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"wrap_content\" />\r\n    </com.google.android.material.appbar.AppBarLayout>\r\n\r\n\r\n\r\n\r\n    <androidx.viewpager.widget.ViewPager\r\n        android:id=\"@+id/view_pager\"\r\n        android:background=\"@color/lightGray\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n\r\n        app:layout_behavior=\"@string/appbar_scrolling_view_behavior\" />\r\n\r\n\r\n<!--    <com.google.android.material.floatingactionbutton.FloatingActionButton-->\r\n<!--        android:id=\"@+id/fab\"-->\r\n<!--        android:layout_width=\"wrap_content\"-->\r\n<!--        android:layout_height=\"wrap_content\"-->\r\n<!--        android:layout_gravity=\"bottom|end\"-->\r\n<!--        android:layout_margin=\"@dimen/fab_margin\"-->\r\n<!--        app:srcCompat=\"@android:drawable/ic_dialog_email\" />-->\r\n\r\n\r\n</androidx.coordinatorlayout.widget.CoordinatorLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/activity_main.xml b/app/src/main/res/layout/activity_main.xml
--- a/app/src/main/res/layout/activity_main.xml	
+++ b/app/src/main/res/layout/activity_main.xml	
@@ -91,15 +91,11 @@
             android:layout_height="wrap_content" />
     </com.google.android.material.appbar.AppBarLayout>
 
-
-
-
     <androidx.viewpager.widget.ViewPager
         android:id="@+id/view_pager"
         android:background="@color/lightGray"
         android:layout_width="match_parent"
         android:layout_height="wrap_content"
-
         app:layout_behavior="@string/appbar_scrolling_view_behavior" />
 
 
Index: app/src/main/java/com/example/asasfans/ui/main/ConfigActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.asasfans.ui.main;\r\n\r\nimport static com.example.asasfans.TestActivity.getVersionCode;\r\nimport static com.example.asasfans.ui.main.adapter.PubdateVideoAdapter.GET_DATA_SUCCESS;\r\nimport static com.example.asasfans.ui.main.adapter.PubdateVideoAdapter.NETWORK_ERROR;\r\n\r\nimport android.content.Context;\r\nimport android.content.Intent;\r\nimport android.content.pm.PackageInfo;\r\nimport android.content.pm.PackageManager;\r\nimport android.net.Uri;\r\nimport android.os.Bundle;\r\nimport android.os.Handler;\r\nimport android.os.Message;\r\nimport android.util.Log;\r\nimport android.view.Gravity;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.webkit.WebView;\r\nimport android.widget.LinearLayout;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.annotation.Nullable;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.appcompat.widget.LinearLayoutCompat;\r\nimport androidx.constraintlayout.widget.ConstraintLayout;\r\n\r\nimport com.example.asasfans.AsApplication;\r\nimport com.example.asasfans.R;\r\nimport com.example.asasfans.data.GithubVersionBean;\r\nimport com.google.gson.Gson;\r\nimport com.nostra13.universalimageloader.core.ImageLoader;\r\nimport com.orhanobut.dialogplus.DialogPlus;\r\nimport com.orhanobut.dialogplus.ViewHolder;\r\n\r\nimport java.io.IOException;\r\nimport java.util.concurrent.TimeUnit;\r\n\r\nimport okhttp3.Call;\r\nimport okhttp3.OkHttpClient;\r\nimport okhttp3.Request;\r\nimport okhttp3.Response;\r\n\r\npublic class ConfigActivity extends AppCompatActivity implements View.OnClickListener{\r\n    private ConstraintLayout config_blacklist;\r\n    private ConstraintLayout config_check_version;\r\n    private ConstraintLayout config_contract_us;\r\n    private ConstraintLayout config_clear_pic_cache;\r\n    private ConstraintLayout config_clear_web_cache;\r\n    private LinearLayout config;\r\n    private TextView config_check_version_number;\r\n    private View emptyView;\r\n    private String latestVersion = \"https://api.github.com/repos/A-SoulFan/as-as-fans/releases/latest\";\r\n    @Override\r\n    protected void onCreate(@Nullable Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_config);\r\n        config_blacklist = findViewById(R.id.config_blacklist);\r\n        config_check_version = findViewById(R.id.config_check_version);\r\n        config_contract_us = findViewById(R.id.config_contract_us);\r\n        config_clear_pic_cache = findViewById(R.id.config_clear_pic_cache);\r\n        config_clear_web_cache = findViewById(R.id.config_clear_web_cache);\r\n        config = findViewById(R.id.config);\r\n        emptyView = findViewById(R.id.emptyViewConfig);\r\n\r\n        config_check_version_number = findViewById(R.id.config_check_version_number);\r\n\r\n        config_check_version_number.setText(\"当前版本号:\" + getVersionName(ConfigActivity.this));\r\n\r\n        config_blacklist.setOnClickListener(this::onClick);\r\n        config_check_version.setOnClickListener(this::onClick);\r\n        config_contract_us.setOnClickListener(this::onClick);\r\n        config_clear_pic_cache.setOnClickListener(this::onClick);\r\n        config_clear_web_cache.setOnClickListener(this::onClick);\r\n        config.setOnClickListener(this::onClick);\r\n        LinearLayoutCompat.LayoutParams layoutParams = new LinearLayoutCompat.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, AsApplication.Companion.getStatusBarHeight());\r\n        emptyView.setLayoutParams(layoutParams);\r\n\r\n    }\r\n\r\n    @Override\r\n    public void onClick(View view) {\r\n        switch (view.getId()){\r\n            case R.id.config_blacklist:\r\n                Bundle data = new Bundle();\r\n                data.putBoolean(\"isBlacklist\", true);\r\n                Intent intentBlacklist = new Intent(ConfigActivity.this, ClickJumpActivity.class);\r\n                intentBlacklist.putExtras(data);\r\n                startActivity(intentBlacklist);\r\n                break;\r\n            case R.id.config_check_version:\r\n                new Thread(networkTask).start();\r\n                break;\r\n            case R.id.config:\r\n                ConfigActivity.this.finish();\r\n                break;\r\n            case R.id.config_contract_us:\r\n                Intent intentContractUs = new Intent();\r\n                intentContractUs.setAction(\"android.intent.action.VIEW\");\r\n                Uri content_url = Uri.parse(\"https://git.asf.ink/A-SoulFan/as-as-fans/issues\");\r\n                intentContractUs.setData(content_url);\r\n                startActivity(intentContractUs);\r\n                break;\r\n            case R.id.config_clear_pic_cache:\r\n                ImageLoader.getInstance().clearDiskCache();//清除磁盘缓存\r\n                ImageLoader.getInstance().clearMemoryCache();//清除内存缓存\r\n                Toast.makeText(this, \"清除图片缓存成功\", Toast.LENGTH_SHORT).show();\r\n                break;\r\n            case R.id.config_clear_web_cache:\r\n                new WebView(ConfigActivity.this).clearCache(true);\r\n                Toast.makeText(this, \"清除WEB缓存成功\", Toast.LENGTH_SHORT).show();\r\n                break;\r\n        }\r\n    }\r\n    /**\r\n     * get App versionName\r\n     * @param context\r\n     * @return\r\n     */\r\n    public String getVersionName(Context context){\r\n        PackageManager packageManager=context.getPackageManager();\r\n        PackageInfo packageInfo;\r\n        String versionName=\"\";\r\n        try {\r\n            packageInfo=packageManager.getPackageInfo(context.getPackageName(),0);\r\n            versionName=packageInfo.versionName;\r\n        } catch (PackageManager.NameNotFoundException e) {\r\n            e.printStackTrace();\r\n        }\r\n        return versionName;\r\n    }\r\n    Handler handler = new Handler() {\r\n        @Override\r\n        public void handleMessage(Message msg) {\r\n            super.handleMessage(msg);\r\n            Bundle data = msg.getData();\r\n            String val = data.getString(\"latestVersion\");\r\n            Log.i(\"latestVersion\", \"请求结果为-->\" + val);\r\n            Gson gson = new Gson();\r\n            if (msg.what == GET_DATA_SUCCESS){\r\n                if (val.startsWith(\"{\\\"url\\\"\")) {\r\n                    GithubVersionBean githubVersionBean = gson.fromJson(val, GithubVersionBean.class);\r\n                    String versionName = githubVersionBean.getTag_name();\r\n\r\n                    String[] tmp3 = versionName.split(\"v\");\r\n                    String[] versionCodeString = tmp3[1].split(\"\\\\.\");\r\n                    int versionCode = Integer.valueOf(versionCodeString[0]) * 100 + Integer.valueOf(versionCodeString[1]) * 10 + Integer.valueOf(versionCodeString[2]) * 1;\r\n                    if (versionCode > getVersionCode(ConfigActivity.this)) {\r\n                        DialogPlus dialog = DialogPlus.newDialog(ConfigActivity.this)\r\n                                .setContentHolder(new ViewHolder(R.layout.dialog_upgrade))\r\n                                .setContentHeight(ViewGroup.LayoutParams.WRAP_CONTENT)\r\n                                .setContentWidth(ViewGroup.LayoutParams.MATCH_PARENT)\r\n                                .setCancelable(true)\r\n                                .setContentBackgroundResource(R.color.transparent)\r\n                                .setGravity(Gravity.CENTER)\r\n                                .create();\r\n                        View dialogView = dialog.getHolderView();\r\n                        TextView title = dialogView.findViewById(R.id.title);\r\n                        TextView content = dialogView.findViewById(R.id.upgrade_content);\r\n                        TextView cancel = dialogView.findViewById(R.id.close);\r\n                        TextView confirm = dialogView.findViewById(R.id.upgrade);\r\n\r\n                        content.setText(githubVersionBean.getBody());\r\n\r\n                        confirm.setOnClickListener(new View.OnClickListener() {\r\n                            @Override\r\n                            public void onClick(View view) {\r\n                                Intent intent = new Intent(Intent.ACTION_VIEW, Uri.parse(\"https://app.asf.ink/\"));\r\n                                startActivity(intent);\r\n                                dialog.dismiss();\r\n                            }\r\n                        });\r\n                        cancel.setOnClickListener(new View.OnClickListener() {\r\n                            @Override\r\n                            public void onClick(View view) {\r\n                                dialog.dismiss();\r\n                            }\r\n                        });\r\n                        dialog.show();\r\n                    } else {\r\n                        Toast.makeText(ConfigActivity.this, \"已是最新版本\", Toast.LENGTH_SHORT).show();\r\n                    }\r\n                }else {\r\n                    Toast.makeText(ConfigActivity.this, \"403，请手动对比当前与最新版本号\", Toast.LENGTH_SHORT).show();\r\n                    Intent intent = new Intent(Intent.ACTION_VIEW, Uri.parse(\"https://app.asf.ink/\"));\r\n                    startActivity(intent);\r\n                }\r\n            }else {\r\n                Toast.makeText(ConfigActivity.this, \"网络错误，版本号获取失败\", Toast.LENGTH_SHORT).show();\r\n            }\r\n        }\r\n    };\r\n\r\n    Runnable networkTask = new Runnable() {\r\n        @Override\r\n        public void run() {\r\n            Message msg = new Message();\r\n            Bundle data = new Bundle();\r\n            // TODO\r\n            // 在这里进行 http request.网络请求相关操作\r\n            OkHttpClient client = new OkHttpClient.Builder().readTimeout(5, TimeUnit.SECONDS).build();\r\n            Request request = new Request.Builder().url(latestVersion)\r\n                    .get().build();\r\n            Call call = client.newCall(request);\r\n            Response response = null;\r\n            String tmp;\r\n            try {\r\n                response = call.execute();\r\n                tmp = response.body().string();\r\n                msg.what = GET_DATA_SUCCESS;\r\n                data.putString(\"latestVersion\", tmp);\r\n\r\n            } catch (IOException e) {\r\n                e.printStackTrace();\r\n                data.putString(\"latestVersion\", \"\");\r\n                handler.sendEmptyMessage(NETWORK_ERROR);\r\n            }\r\n            msg.setData(data);\r\n            handler.sendMessage(msg);\r\n        }\r\n    };\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/asasfans/ui/main/ConfigActivity.java b/app/src/main/java/com/example/asasfans/ui/main/ConfigActivity.java
--- a/app/src/main/java/com/example/asasfans/ui/main/ConfigActivity.java	
+++ b/app/src/main/java/com/example/asasfans/ui/main/ConfigActivity.java	
@@ -16,7 +16,10 @@
 import android.view.Gravity;
 import android.view.View;
 import android.view.ViewGroup;
+import android.view.animation.Animation;
+import android.view.animation.RotateAnimation;
 import android.webkit.WebView;
+import android.widget.ImageView;
 import android.widget.LinearLayout;
 import android.widget.TextView;
 import android.widget.Toast;
@@ -45,6 +48,7 @@
 public class ConfigActivity extends AppCompatActivity implements View.OnClickListener{
     private ConstraintLayout config_blacklist;
     private ConstraintLayout config_check_version;
+    private ImageView config_check_version_icon;
     private ConstraintLayout config_contract_us;
     private ConstraintLayout config_clear_pic_cache;
     private ConstraintLayout config_clear_web_cache;
@@ -52,12 +56,15 @@
     private TextView config_check_version_number;
     private View emptyView;
     private String latestVersion = "https://api.github.com/repos/A-SoulFan/as-as-fans/releases/latest";
+    private RotateAnimation mRotateAnimation;
+    private Handler mHandler = new Handler();
     @Override
     protected void onCreate(@Nullable Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
         setContentView(R.layout.activity_config);
         config_blacklist = findViewById(R.id.config_blacklist);
         config_check_version = findViewById(R.id.config_check_version);
+        config_check_version_icon = findViewById(R.id.config_check_version_icon);
         config_contract_us = findViewById(R.id.config_contract_us);
         config_clear_pic_cache = findViewById(R.id.config_clear_pic_cache);
         config_clear_web_cache = findViewById(R.id.config_clear_web_cache);
@@ -90,6 +97,15 @@
                 startActivity(intentBlacklist);
                 break;
             case R.id.config_check_version:
+                if (mRotateAnimation == null) {
+                    mRotateAnimation = new RotateAnimation(0, 360,
+                            Animation.RELATIVE_TO_SELF, 0.5f, Animation.RELATIVE_TO_SELF,
+                            0.5f);
+                    mRotateAnimation.setDuration(800);
+                    mRotateAnimation.setRepeatCount(-1);
+                }
+                config_check_version_icon.setAnimation(mRotateAnimation);
+                config_check_version_icon.startAnimation(mRotateAnimation);
                 new Thread(networkTask).start();
                 break;
             case R.id.config:
@@ -189,6 +205,7 @@
             }else {
                 Toast.makeText(ConfigActivity.this, "网络错误，版本号获取失败", Toast.LENGTH_SHORT).show();
             }
+            config_check_version_icon.clearAnimation();
         }
     };
 
Index: app/src/main/res/layout/fragment_web.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<!--webview，app调用网页-->\r\n<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    android:layout_width=\"match_parent\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    android:orientation=\"vertical\"\r\n    android:fitsSystemWindows=\"true\"\r\n    android:layout_height=\"match_parent\">\r\n\r\n    <View\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"0dp\"\r\n        android:id=\"@+id/emptyViewWeb\"\r\n        android:elevation=\"5dp\"\r\n        android:outlineProvider=\"none\"\r\n        android:background=\"@color/cardWhite\"/>\r\n\r\n    <ProgressBar\r\n        android:id=\"@+id/pb\"\r\n        android:indeterminateTintMode=\"src_atop\"\r\n        android:indeterminateTint=\"@color/tab_text_selected\"\r\n        style=\"@style/Widget.AppCompat.ProgressBar.Horizontal\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"4dp\"\r\n        android:max=\"100\"\r\n        android:progress=\"50\"\r\n        android:visibility=\"gone\" />\r\n    <com.scwang.smart.refresh.layout.SmartRefreshLayout\r\n        android:id=\"@+id/web_refreshLayout\"\r\n        app:srlPrimaryColor=\"@color/lightGray\"\r\n        app:srlAccentColor=\"@color/tab_text_normal\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"match_parent\">\r\n\r\n        <com.scwang.smart.refresh.header.BezierRadarHeader\r\n            app:srlPrimaryColor=\"@color/lightGray\"\r\n            app:srlAccentColor=\"@color/tab_text_normal\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"wrap_content\"/>\r\n        <WebView\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"match_parent\"\r\n            android:id=\"@+id/webView\"/>\r\n\r\n    </com.scwang.smart.refresh.layout.SmartRefreshLayout>\r\n\r\n</LinearLayout>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/fragment_web.xml b/app/src/main/res/layout/fragment_web.xml
--- a/app/src/main/res/layout/fragment_web.xml	
+++ b/app/src/main/res/layout/fragment_web.xml	
@@ -13,35 +13,24 @@
         android:id="@+id/emptyViewWeb"
         android:elevation="5dp"
         android:outlineProvider="none"
-        android:background="@color/cardWhite"/>
+        android:background="@color/tab_text_normal"/>
 
     <ProgressBar
         android:id="@+id/pb"
         android:indeterminateTintMode="src_atop"
-        android:indeterminateTint="@color/tab_text_selected"
+        android:indeterminateTint="@color/bella"
         style="@style/Widget.AppCompat.ProgressBar.Horizontal"
         android:layout_width="match_parent"
         android:layout_height="4dp"
         android:max="100"
         android:progress="50"
         android:visibility="gone" />
-    <com.scwang.smart.refresh.layout.SmartRefreshLayout
-        android:id="@+id/web_refreshLayout"
-        app:srlPrimaryColor="@color/lightGray"
-        app:srlAccentColor="@color/tab_text_normal"
-        android:layout_width="match_parent"
-        android:layout_height="match_parent">
 
-        <com.scwang.smart.refresh.header.BezierRadarHeader
-            app:srlPrimaryColor="@color/lightGray"
-            app:srlAccentColor="@color/tab_text_normal"
-            android:layout_width="match_parent"
-            android:layout_height="wrap_content"/>
-        <WebView
-            android:layout_width="match_parent"
-            android:layout_height="match_parent"
-            android:id="@+id/webView"/>
+    <WebView
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"
+        android:id="@+id/webView"/>
 
-    </com.scwang.smart.refresh.layout.SmartRefreshLayout>
+
 
 </LinearLayout>
Index: app/src/main/res/layout/fragment_fan_art_image.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<androidx.coordinatorlayout.widget.CoordinatorLayout\r\n    xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\">\r\n\r\n    <View\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"0dp\"\r\n        android:id=\"@+id/emptyViewFanArt\"\r\n        android:elevation=\"5dp\"\r\n        android:outlineProvider=\"none\"\r\n        android:background=\"@color/tab_text_normal\"/>\r\n\r\n    <com.google.android.material.appbar.AppBarLayout\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"?attr/actionBarSize\"\r\n        android:id=\"@+id/appBar\"\r\n        android:theme=\"@style/AppTheme.PopupOverlay\">\r\n        <LinearLayout\r\n            android:layout_marginLeft=\"1dp\"\r\n            android:layout_marginRight=\"1dp\"\r\n            app:layout_scrollFlags=\"scroll|enterAlways\"\r\n            android:orientation=\"horizontal\"\r\n            android:background=\"@color/tab_text_normal\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"match_parent\">\r\n\r\n            <Spinner\r\n                android:layout_weight=\"1\"\r\n                android:id=\"@+id/fragment_fan_art_spinner_order\"\r\n                android:layout_width=\"wrap_content\"\r\n                android:gravity=\"center\"\r\n                android:layout_gravity=\"center\"\r\n                android:popupBackground=\"@drawable/shape_for_custom_spinner\"\r\n                android:background=\"@drawable/selector_for_custom_spinner\"\r\n                android:layout_height=\"40dp\"\r\n                android:dropDownVerticalOffset=\"45dp\"\r\n                android:spinnerMode=\"dropdown\"\r\n                android:entries=\"@array/image_order\"\r\n                />\r\n            <View\r\n                android:layout_width=\"1dp\"\r\n                android:layout_height=\"match_parent\"\r\n                android:background=\"@color/tab_text_normal\" />\r\n            <Spinner\r\n                android:layout_weight=\"1\"\r\n                android:id=\"@+id/fragment_fan_art_spinner_date\"\r\n                android:layout_width=\"wrap_content\"\r\n                android:layout_height=\"40dp\"\r\n                android:layout_gravity=\"center\"\r\n                android:dropDownVerticalOffset=\"45dp\"\r\n                android:popupBackground=\"@drawable/shape_for_custom_spinner\"\r\n                android:background=\"@drawable/selector_for_custom_spinner\"\r\n                android:spinnerMode=\"dropdown\"\r\n                android:entries=\"@array/image_order\"\r\n                />\r\n            <View\r\n                android:layout_width=\"1dp\"\r\n                android:layout_height=\"match_parent\"\r\n                android:background=\"@color/tab_text_normal\" />\r\n            <Spinner\r\n                android:layout_weight=\"1\"\r\n                android:id=\"@+id/fragment_fan_art_spinner_tag\"\r\n                android:layout_width=\"wrap_content\"\r\n                android:layout_gravity=\"center\"\r\n                android:popupBackground=\"@drawable/shape_for_custom_spinner\"\r\n                android:background=\"@drawable/selector_for_custom_spinner\"\r\n                android:layout_height=\"40dp\"\r\n                android:dropDownVerticalOffset=\"45dp\"\r\n                android:spinnerMode=\"dropdown\"\r\n                android:entries=\"@array/image_tag\"\r\n                />\r\n        </LinearLayout>\r\n\r\n\r\n    </com.google.android.material.appbar.AppBarLayout>\r\n\r\n    <androidx.core.widget.NestedScrollView\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:background=\"@color/backgroundGray\"\r\n        app:layout_behavior=\"@string/appbar_scrolling_view_behavior\">\r\n        <com.scwang.smart.refresh.layout.SmartRefreshLayout\r\n            app:srlPrimaryColor=\"@color/lightGray\"\r\n            app:srlAccentColor=\"@color/tab_text_normal\"\r\n            android:id=\"@+id/fan_art_image_refreshLayout\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"wrap_content\">\r\n\r\n            <androidx.recyclerview.widget.RecyclerView\r\n                android:id=\"@+id/fan_art_image_recyclerview\"\r\n                android:background=\"@color/backgroundGray\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"match_parent\" />\r\n\r\n        </com.scwang.smart.refresh.layout.SmartRefreshLayout>\r\n    </androidx.core.widget.NestedScrollView>\r\n\r\n\r\n\r\n</androidx.coordinatorlayout.widget.CoordinatorLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/fragment_fan_art_image.xml b/app/src/main/res/layout/fragment_fan_art_image.xml
--- a/app/src/main/res/layout/fragment_fan_art_image.xml	
+++ b/app/src/main/res/layout/fragment_fan_art_image.xml	
@@ -15,9 +15,9 @@
 
     <com.google.android.material.appbar.AppBarLayout
         android:layout_width="match_parent"
-        android:layout_height="?attr/actionBarSize"
+        android:layout_height="wrap_content"
         android:id="@+id/appBar"
-        android:theme="@style/AppTheme.PopupOverlay">
+        android:theme="@style/AppTheme">
         <LinearLayout
             android:layout_marginLeft="1dp"
             android:layout_marginRight="1dp"
Index: app/src/main/res/layout/new_fragment_tools.xml
===================================================================
diff --git a/app/src/main/res/layout/new_fragment_tools.xml b/app/src/main/res/layout/new_fragment_tools.xml
new file mode 100644
--- /dev/null	
+++ b/app/src/main/res/layout/new_fragment_tools.xml	
@@ -0,0 +1,85 @@
+<?xml version="1.0" encoding="utf-8"?>
+<androidx.coordinatorlayout.widget.CoordinatorLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    xmlns:app="http://schemas.android.com/apk/res-auto">
+    <View
+        android:layout_width="match_parent"
+        android:layout_height="0dp"
+        android:id="@+id/emptyViewTools"
+        android:elevation="5dp"
+        android:outlineProvider="none"
+        android:background="@color/tab_text_normal"/>
+    <com.google.android.material.appbar.AppBarLayout
+        android:id="@+id/appBar"
+        android:theme="@style/AppTheme"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content">
+        <androidx.constraintlayout.widget.ConstraintLayout
+            android:layout_margin="10dp"
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content">
+            <ImageView
+                android:id="@+id/drop"
+                android:layout_width="28dp"
+                android:layout_height="28dp"
+                app:layout_constraintTop_toTopOf="parent"
+                app:layout_constraintBottom_toBottomOf="parent"
+                app:layout_constraintLeft_toLeftOf="parent"
+                android:src="@drawable/ic_drop_down"
+                />
+            <ImageView
+                android:id="@+id/icon"
+                android:layout_width="28dp"
+                android:layout_height="28dp"
+                android:src="@drawable/icon_zwcc"
+                app:layout_constraintTop_toTopOf="parent"
+                app:layout_constraintBottom_toBottomOf="parent"
+                app:layout_constraintLeft_toRightOf="@+id/drop"
+                />
+            <TextView
+                android:id="@+id/title"
+                android:text="标题"
+                android:textSize="18dp"
+                android:textColor="@color/cardWhite"
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:layout_marginLeft="4dp"
+                app:layout_constraintLeft_toRightOf="@+id/icon"
+                app:layout_constraintTop_toTopOf="parent"
+                app:layout_constraintBottom_toBottomOf="parent"
+                android:lines="1"
+                android:ellipsize="end"
+                />
+            <ImageView
+                android:id="@+id/refresh"
+                android:src="@drawable/ic_refresh"
+                android:layout_width="28dp"
+                android:layout_height="28dp"
+                android:layout_marginRight="8dp"
+                app:layout_constraintTop_toTopOf="parent"
+                app:layout_constraintBottom_toBottomOf="parent"
+                app:layout_constraintRight_toLeftOf="@+id/browser"
+                />
+            <ImageView
+                android:id="@+id/browser"
+                android:src="@drawable/ic_jump_to"
+                android:layout_width="28dp"
+                android:layout_height="28dp"
+                app:layout_constraintTop_toTopOf="parent"
+                app:layout_constraintBottom_toBottomOf="parent"
+                app:layout_constraintRight_toRightOf="parent"
+                />
+        </androidx.constraintlayout.widget.ConstraintLayout>
+    </com.google.android.material.appbar.AppBarLayout>
+
+
+    <FrameLayout
+        android:id="@+id/frameLayout"
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"
+        app:layout_behavior="@string/appbar_scrolling_view_behavior"
+        />
+
+
+</androidx.coordinatorlayout.widget.CoordinatorLayout>
\ No newline at end of file
Index: app/src/main/java/com/example/asasfans/ui/main/ClickJumpActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.asasfans.ui.main;\r\n\r\nimport android.content.Intent;\r\nimport android.os.Bundle;\r\nimport android.util.Log;\r\nimport android.view.KeyEvent;\r\n\r\nimport androidx.annotation.Nullable;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.fragment.app.Fragment;\r\nimport androidx.fragment.app.FragmentManager;\r\nimport androidx.fragment.app.FragmentTransaction;\r\n\r\nimport com.example.asasfans.R;\r\nimport com.example.asasfans.ui.main.adapter.ToolsAdapter;\r\nimport com.example.asasfans.ui.main.fragment.BlacklistFragment;\r\nimport com.example.asasfans.ui.main.fragment.ImageFanArtFragment;\r\nimport com.example.asasfans.ui.main.fragment.WebFragment;\r\n\r\npublic class ClickJumpActivity extends AppCompatActivity {\r\n    FragmentManager fragmentManager;\r\n    FragmentTransaction transaction;\r\n    /** 上次点击返回键的时间 */\r\n    private long lastBackPressed;\r\n    /** 两次点击的间隔时间 */\r\n    private static final int QUIT_INTERVAL = 3000;\r\n\r\n    @Override\r\n    protected void onCreate(@Nullable Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.fragment_click_jump);\r\n\r\n        Intent intent = getIntent();\r\n        Bundle data = intent.getExtras();\r\n//        Log.i(\"WebUrl\", data.getString(\"WebUrl\"));\r\n        fragmentManager = getSupportFragmentManager();\r\n        transaction = fragmentManager.beginTransaction();\r\n        if (data.getBoolean(\"isBlacklist\")){\r\n            transaction.replace(R.id.click_jump, BlacklistFragment.newInstance());\r\n        } else if (data.getString(\"WebUrl\").equals(ToolsAdapter.iconUrl.get(0))){\r\n            transaction.replace(R.id.click_jump, ImageFanArtFragment.newInstance());\r\n        }else {\r\n            transaction.replace(R.id.click_jump, WebFragment.newInstance(data.getString(\"WebUrl\")));\r\n        }\r\n//        transaction.replace(R.id.click_jump, WebFragment.newInstance(data.getString(\"WebUrl\")));\r\n        transaction.commit();\r\n    }\r\n\r\n    @Override\r\n    public boolean onKeyDown(int keyCode, KeyEvent event) {\r\n        Fragment fragment = getSupportFragmentManager().findFragmentById(R.id.click_jump);\r\n        Log.i(\"instanceof\", String.valueOf(fragment instanceof WebFragment));\r\n        //解决音量键的监听被webview劫持无法使用的问题\r\n        if (!(keyCode==KeyEvent.KEYCODE_BACK)){\r\n            return super.onKeyDown(keyCode, event);\r\n        }\r\n        if(fragment instanceof WebFragment){\r\n            ((WebFragment)fragment).onKeyDownInClick(keyCode, event);\r\n            return true;\r\n        }\r\n        return super.onKeyDown(keyCode, event);\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/asasfans/ui/main/ClickJumpActivity.java b/app/src/main/java/com/example/asasfans/ui/main/ClickJumpActivity.java
--- a/app/src/main/java/com/example/asasfans/ui/main/ClickJumpActivity.java	
+++ b/app/src/main/java/com/example/asasfans/ui/main/ClickJumpActivity.java	
@@ -40,7 +40,7 @@
         } else if (data.getString("WebUrl").equals(ToolsAdapter.iconUrl.get(0))){
             transaction.replace(R.id.click_jump, ImageFanArtFragment.newInstance());
         }else {
-            transaction.replace(R.id.click_jump, WebFragment.newInstance(data.getString("WebUrl")));
+            transaction.replace(R.id.click_jump, WebFragment.newInstance(data.getString("WebUrl"), false));
         }
 //        transaction.replace(R.id.click_jump, WebFragment.newInstance(data.getString("WebUrl")));
         transaction.commit();
Index: app/src/main/java/com/example/asasfans/ui/main/adapter/ImageAdapter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.asasfans.ui.main.adapter;\r\n\r\nimport android.content.Context;\r\nimport android.content.Intent;\r\nimport android.net.Uri;\r\nimport android.util.DisplayMetrics;\r\nimport android.util.Log;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.view.WindowManager;\r\nimport android.widget.ImageView;\r\nimport android.widget.TextView;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\n\r\nimport com.example.asasfans.R;\r\nimport com.example.asasfans.data.ImageDataBean;\r\nimport com.example.asasfans.ui.main.fragment.ImageFanArtFragment;\r\nimport com.nostra13.universalimageloader.core.ImageLoader;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\n/**\r\n * @author: akari\r\n * @date: 2022/3/8\r\n * @description $\r\n */\r\npublic class ImageAdapter extends RecyclerView.Adapter<ImageAdapter.ImageViewHolder> {\r\n    private Context context;\r\n    private int pageSize;\r\n    private List<ImageDataBean> imageDataBean = new ArrayList<>();\r\n\r\n    public ImageAdapter(Context context, int pageSize, List<ImageDataBean> imageDataBean){\r\n        this.context = context;\r\n        this.pageSize = pageSize;\r\n        this.imageDataBean = imageDataBean;\r\n    }\r\n\r\n    @NonNull\r\n    @Override\r\n    public ImageViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {\r\n        View view = LayoutInflater.from(context).inflate(R.layout.image_recyclerview, parent,false);\r\n        ImageViewHolder imageViewHolder = new ImageViewHolder(view);\r\n        view.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                Uri uri = Uri.parse(\"bilibili://following/detail/\" + imageDataBean.get(imageViewHolder.getBindingAdapterPosition()).getDy_id());\r\n                Intent intent = new Intent(Intent.ACTION_VIEW, uri);\r\n                context.startActivity(intent);\r\n            }\r\n        });\r\n        return imageViewHolder;\r\n    }\r\n\r\n    @Override\r\n    public void onBindViewHolder(@NonNull ImageViewHolder holder, int position) {\r\n//        Animation fadeIn = AnimationUtils.loadAnimation(context, R.anim.fadein);\r\n//        holder.fan_art_image.startAnimation(fadeIn);\r\n//        holder.fan_art_author.startAnimation(fadeIn);\r\n\r\n        ImageLoader.getInstance().displayImage(imageDataBean.get(position).getFace() + \"@64w_64h_1e_1c.jpg\", holder.fan_art_author);\r\n        holder.fan_art_author_name.setText(imageDataBean.get(position).getName());\r\n        double widthImage, heightImage;\r\n        if (imageDataBean.get(position).getPic_url().get(0).getImg_width() >= 480){\r\n            widthImage = 480;\r\n            heightImage = widthImage*imageDataBean.get(position).getPic_url().get(0).getImg_height()/imageDataBean.get(position).getPic_url().get(0).getImg_width();\r\n\r\n        }else {\r\n            widthImage = imageDataBean.get(position).getPic_url().get(0).getImg_width();\r\n            heightImage = imageDataBean.get(position).getPic_url().get(0).getImg_height();\r\n        }\r\n        ImageLoader.getInstance().displayImage(imageDataBean.get(position).getPic_url().get(0).getImg_src() + \"@\"+(int)widthImage+\"w_\"+(int)heightImage+\"h_1e_1c.jpg\", holder.fan_art_image);\r\n        holder.fan_art_image_num.setText(String.valueOf(imageDataBean.get(position).getPic_url().size()));\r\n        ViewGroup.LayoutParams layoutParams = holder.fan_art_image.getLayoutParams();\r\n\r\n        WindowManager wm = (WindowManager) context.getSystemService(Context.WINDOW_SERVICE);\r\n        DisplayMetrics dm = new DisplayMetrics();\r\n        wm.getDefaultDisplay().getMetrics(dm);\r\n        int width = dm.widthPixels;         // 屏幕宽度（像素）\r\n        int height = dm.heightPixels;       // 屏幕高度（像素）\r\n        float density = dm.density;         // 屏幕密度（0.75 / 1.0 / 1.5）\r\n        int densityDpi = dm.densityDpi;     // 屏幕密度dpi（120 / 160 / 240）\r\n        // 屏幕宽度算法:屏幕宽度（像素）/屏幕密度\r\n        int screenWidth = width;  // 屏幕宽度(dp)\r\n//        screenWidth = 600;\r\n        Log.i(\"widthdp\", String.valueOf(screenWidth));\r\n        Log.i(\"dm.density\", String.valueOf(density));\r\n\r\n        layoutParams.width = (int) ((screenWidth - ImageFanArtFragment.divider*density)/2);//(imageDataBean.get(position).getPic_url().get(0).getImg_width()/density);\r\n        layoutParams.height = (int) ((imageDataBean.get(position).getPic_url().get(0).getImg_height() /imageDataBean.get(position).getPic_url().get(0).getImg_width())*layoutParams.width);\r\n        holder.fan_art_image.setLayoutParams(layoutParams);\r\n        Log.i(\"onBindViewHolder\", String.valueOf(position));\r\n    }\r\n\r\n    @Override\r\n    public int getItemCount() {\r\n        return imageDataBean.size();\r\n    }\r\n    @Override\r\n    public int getItemViewType(int position) {\r\n        return position;\r\n    }\r\n\r\n\r\n    public class ImageViewHolder extends RecyclerView.ViewHolder{\r\n        private ImageView fan_art_image;\r\n        private ImageView fan_art_author;\r\n        private TextView fan_art_author_name;\r\n        private TextView fan_art_image_num;\r\n\r\n        public ImageViewHolder(@NonNull View itemView) {\r\n            super(itemView);\r\n            fan_art_image = itemView.findViewById(R.id.fan_art_image);\r\n            fan_art_author = itemView.findViewById(R.id.fan_art_author);\r\n            fan_art_author_name = itemView.findViewById(R.id.fan_art_author_name);\r\n            fan_art_image_num = itemView.findViewById(R.id.fan_art_image_num);\r\n        }\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/asasfans/ui/main/adapter/ImageAdapter.java b/app/src/main/java/com/example/asasfans/ui/main/adapter/ImageAdapter.java
--- a/app/src/main/java/com/example/asasfans/ui/main/adapter/ImageAdapter.java	
+++ b/app/src/main/java/com/example/asasfans/ui/main/adapter/ImageAdapter.java	
@@ -4,13 +4,13 @@
 import android.content.Intent;
 import android.net.Uri;
 import android.util.DisplayMetrics;
-import android.util.Log;
 import android.view.LayoutInflater;
 import android.view.View;
 import android.view.ViewGroup;
 import android.view.WindowManager;
 import android.widget.ImageView;
 import android.widget.TextView;
+import android.widget.Toast;
 
 import androidx.annotation.NonNull;
 import androidx.recyclerview.widget.RecyclerView;
@@ -47,9 +47,20 @@
         view.setOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View v) {
-                Uri uri = Uri.parse("bilibili://following/detail/" + imageDataBean.get(imageViewHolder.getBindingAdapterPosition()).getDy_id());
-                Intent intent = new Intent(Intent.ACTION_VIEW, uri);
-                context.startActivity(intent);
+                try {
+                    Uri uri = Uri.parse("bilibili://following/detail/" + imageDataBean.get(imageViewHolder.getBindingAdapterPosition()).getDy_id());
+                    Intent intent = new Intent(Intent.ACTION_VIEW, uri);
+                    context.startActivity(intent);
+                }catch (Exception e){
+                    e.printStackTrace();
+                    Toast.makeText(context,"没有找到或无法用bilibili打开，尝试采用浏览器打开", Toast.LENGTH_LONG).show();
+                    Intent intent= new Intent();
+                    intent.setAction("android.intent.action.VIEW");
+                    Uri content_url = Uri.parse("https://t.bilibili.com/" + imageDataBean.get(imageViewHolder.getBindingAdapterPosition()).getDy_id());
+                    intent.setData(content_url);
+                    context.startActivity(intent);
+                }
+
             }
         });
         return imageViewHolder;
@@ -86,13 +97,13 @@
         // 屏幕宽度算法:屏幕宽度（像素）/屏幕密度
         int screenWidth = width;  // 屏幕宽度(dp)
 //        screenWidth = 600;
-        Log.i("widthdp", String.valueOf(screenWidth));
-        Log.i("dm.density", String.valueOf(density));
+//        Log.i("widthdp", String.valueOf(screenWidth));
+//        Log.i("dm.density", String.valueOf(density));
 
         layoutParams.width = (int) ((screenWidth - ImageFanArtFragment.divider*density)/2);//(imageDataBean.get(position).getPic_url().get(0).getImg_width()/density);
         layoutParams.height = (int) ((imageDataBean.get(position).getPic_url().get(0).getImg_height() /imageDataBean.get(position).getPic_url().get(0).getImg_width())*layoutParams.width);
         holder.fan_art_image.setLayoutParams(layoutParams);
-        Log.i("onBindViewHolder", String.valueOf(position));
+//        Log.i("onBindViewHolder", String.valueOf(position));
     }
 
     @Override
Index: app/src/main/java/com/example/asasfans/ui/main/adapter/ToolsAdapter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.asasfans.ui.main.adapter;\r\n\r\nimport static android.content.Context.MODE_PRIVATE;\r\n\r\nimport android.annotation.SuppressLint;\r\nimport android.content.ClipData;\r\nimport android.content.ClipboardManager;\r\nimport android.content.Context;\r\nimport android.content.Intent;\r\nimport android.content.SharedPreferences;\r\nimport android.os.Bundle;\r\nimport android.util.Log;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.CheckBox;\r\nimport android.widget.CompoundButton;\r\nimport android.widget.ImageView;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\n\r\nimport com.example.asasfans.R;\r\nimport com.example.asasfans.ui.main.ClickJumpActivity;\r\n\r\nimport java.util.Arrays;\r\nimport java.util.HashMap;\r\nimport java.util.List;\r\nimport java.util.Map;\r\n\r\n/**\r\n * @author: akari\r\n * @date: 2022/3/4\r\n * @description Tools适配器\r\n */\r\npublic class ToolsAdapter extends RecyclerView.Adapter<ToolsAdapter.ToolsViewHolder> {\r\n    private final int CHECK_MAX_LIMIT = 3;\r\n    public static final List<String> iconUrl\r\n            = Arrays.asList(\"https://asoul.cloud\",\r\n                            \"https://asoulcnki.asia\",\r\n                            \"https://tools.asoulfan.com/zhijiangDict\",\r\n                            \"https://asoul.icu/\",\r\n                            \"https://asoul.asia/\",\r\n                            \"https://asoulwiki.com/\",\r\n                            \"http://asoul.infedg.xyz/\",\r\n                            \"https://studio.asf.ink\",\r\n                            \"https://nf.asoul-rec.com\",\r\n                            \"https://tools.asoulfan.com/ingredientChecking\",\r\n                            \"http://asoulfan.xyz/\"\r\n            );\r\n    public static final List<String> iconFileName\r\n            = Arrays.asList(\"icon_asoul_cloud\",\r\n                            \"icon_zwcc\",\r\n                            \"icon_zhijiang_book\",\r\n                            \"icon_long_comment\",\r\n                            \"icon_asoul\",\r\n                            \"icon_asoul\",\r\n                            \"icon_asoul\",\r\n                            \"icon_asoul_studio\",\r\n                            \"icon_asoul\",\r\n                            \"icon_asf_bak\",\r\n                            \"icon_asf_bak\"\r\n            );\r\n    public static final List<String> desc\r\n            = Arrays.asList(\"A-SOUL Fans Art - 一个魂的二创\",\r\n                            \"枝网查重\",\r\n                            \"方言词典\",\r\n                            \"小作文\",\r\n                            \"论坛管理群聊天记录公示\",\r\n                            \"一个魂维基 A-SOUL WIKI\",\r\n                            \"使用GPT-2模型训练的小作文生成器\",\r\n                            \"收录A-SOUL几乎全部Solo以及合唱歌曲\",\r\n                            \"A-SOUL原画录播站\",\r\n                            \"成分姬\",\r\n                            \"羊驼打过的太极/QA查询\"\r\n            );\r\n    public static final List<String> name\r\n            = Arrays.asList(\"图片\",\r\n                            \"枝网查重\",\r\n                            \"方言词典\",\r\n                            \"小作文\",\r\n                            \"聊天公示\",\r\n                            \"魂维基\",\r\n                            \"作文生成\",\r\n                            \"录音棚\",\r\n                            \"录播站\",\r\n                            \"成分姬\",\r\n                            \"查QA\"\r\n            );\r\n    //是否显示选框,默认false\r\n    private boolean isShowBox = false;\r\n    // 存储勾选框状态的map集合\r\n    private Map<Integer, Boolean> map = new HashMap<>();\r\n    private Context context;\r\n    private SharedPreferences userInfo;\r\n    private SharedPreferences.Editor editor;//获取Editor\r\n    private Map<String, ?> tmp;\r\n\r\n\r\n    public ToolsAdapter(Context context){\r\n        this.context = context;\r\n        initMapAndCheckBox();\r\n    }\r\n\r\n    //初始化map集合,默认为不选中\r\n    private void initMapAndCheckBox() {\r\n\r\n        userInfo = context.getSharedPreferences(\"ToolsData\", MODE_PRIVATE);\r\n        editor = userInfo.edit();\r\n        tmp = userInfo.getAll();\r\n        Log.i(\"initMapAndCheckBox\", tmp.toString());\r\n        for (int i = 0; i < iconUrl.size(); i++) {\r\n            map.put(i, userInfo.getBoolean(iconUrl.get(i), false));\r\n        }\r\n\r\n    }\r\n\r\n    @NonNull\r\n    @Override\r\n    public ToolsViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {\r\n        View view = LayoutInflater.from(context).inflate(R.layout.tools_recyclerview, parent,false);\r\n        final ToolsViewHolder toolsViewHolder = new ToolsViewHolder(view);\r\n        view.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                Bundle data = new Bundle();\r\n                data.putString(\"WebUrl\", iconUrl.get(toolsViewHolder.getBindingAdapterPosition()));\r\n                Intent intent = new Intent(context, ClickJumpActivity.class);\r\n                intent.putExtras(data);\r\n                context.startActivity(intent);\r\n            }\r\n        });\r\n        view.setOnLongClickListener(new View.OnLongClickListener() {\r\n            @Override\r\n            public boolean onLongClick(View view) {\r\n                Toast.makeText(context,\"网址 \" + iconUrl.get(toolsViewHolder.getBindingAdapterPosition()) + \" 复制好了\",Toast.LENGTH_SHORT).show();\r\n                //获取剪贴板管理器：\r\n                ClipboardManager cm = (ClipboardManager) context.getSystemService(Context.CLIPBOARD_SERVICE);\r\n                ClipData mClipData = ClipData.newPlainText(\"Url\", iconUrl.get(toolsViewHolder.getBindingAdapterPosition()));\r\n                cm.setPrimaryClip(mClipData);\r\n                return true;\r\n            }\r\n        });\r\n        return toolsViewHolder;\r\n    }\r\n\r\n\r\n    @Override\r\n    public void onBindViewHolder(@NonNull ToolsViewHolder holder, @SuppressLint(\"RecyclerView\") int position) {\r\n        holder.imageView.setImageResource(getResource(iconFileName.get(position)));\r\n        holder.textView.setText(desc.get(position));\r\n        if (isShowBox) {\r\n            holder.checkBox.setVisibility(View.VISIBLE);\r\n        } else {\r\n            holder.checkBox.setVisibility(View.INVISIBLE);\r\n        }\r\n//        Animation animation = AnimationUtils.loadAnimation(context, R.anim.list_anim);\r\n//        //设置checkBox显示的动画\r\n//        if (isShowBox)\r\n//            holder.checkBox.startAnimation(animation);\r\n        //设置checkBox改变监听\r\n        holder.checkBox.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener() {\r\n            @Override\r\n            public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {\r\n                //用map集合保存\r\n                for (int i = 0; i < iconUrl.size(); i++) {\r\n//                    System.out.println(userInfo.getBoolean(iconUrl.get(i), false));\r\n                }\r\n                map.put(position, isChecked);\r\n                editor.putBoolean(iconUrl.get(position), isChecked);\r\n                editor.commit();\r\n                int count = 0;\r\n                for (int i = 0; i < iconUrl.size(); i++) {\r\n//                    System.out.println(userInfo.getBoolean(iconUrl.get(i), false));\r\n                    if (userInfo.getBoolean(iconUrl.get(i), false))\r\n                        count++;\r\n                }\r\n//                System.out.println(count);\r\n                if (count == CHECK_MAX_LIMIT){\r\n                    Toast.makeText(context, \"已达到选择上限\", Toast.LENGTH_SHORT).show();\r\n                    buttonView.setChecked(false);\r\n                    map.put(position, false);\r\n                    editor.putBoolean(iconUrl.get(position), false);\r\n                    editor.commit();\r\n                }\r\n//                System.out.println(\"---------------------\");\r\n//                for (int i = 0; i < iconUrl.size(); i++) {\r\n//                    System.out.println(userInfo.getBoolean(iconUrl.get(i), false));\r\n//                }\r\n            }\r\n        });\r\n        // 设置CheckBox的状态\r\n        if (map.get(position) == null) {\r\n            map.put(position, false);\r\n            editor.putBoolean(iconUrl.get(position), false);\r\n            editor.commit();\r\n        }\r\n        Boolean initState = userInfo.getBoolean(iconUrl.get(position), false);\r\n        holder.checkBox.setChecked(initState);\r\n\r\n    }\r\n\r\n\r\n    @Override\r\n    public int getItemCount() {\r\n        return iconUrl.size();\r\n    }\r\n\r\n    public int  getResource(String imageName) {\r\n        int resId = context.getResources().getIdentifier(imageName, \"drawable\", context.getPackageName());\r\n        return resId;\r\n    }\r\n\r\n    public boolean isShowBox() {\r\n        return isShowBox;\r\n    }\r\n\r\n    public void setShowBox() {\r\n        //取反\r\n        isShowBox = !isShowBox;\r\n    }\r\n    //点击item选中CheckBox\r\n    public void setSelectItem(int position) {\r\n        //对当前状态取反\r\n        if (map.get(position)) {\r\n            map.put(position, false);\r\n        } else {\r\n            map.put(position, true);\r\n        }\r\n        notifyItemChanged(position);\r\n    }\r\n\r\n    //视图管理\r\n    public class ToolsViewHolder extends RecyclerView.ViewHolder {\r\n        private TextView textView;\r\n        private CheckBox checkBox;\r\n        private ImageView imageView;\r\n\r\n        public ToolsViewHolder(@NonNull View itemView) {\r\n            super(itemView);\r\n            textView = itemView.findViewById(R.id.web_desc);\r\n            checkBox = itemView.findViewById(R.id.web_check_box);\r\n            imageView = itemView.findViewById(R.id.web_icon);\r\n        }\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/asasfans/ui/main/adapter/ToolsAdapter.java b/app/src/main/java/com/example/asasfans/ui/main/adapter/ToolsAdapter.java
--- a/app/src/main/java/com/example/asasfans/ui/main/adapter/ToolsAdapter.java	
+++ b/app/src/main/java/com/example/asasfans/ui/main/adapter/ToolsAdapter.java	
@@ -1,20 +1,12 @@
 package com.example.asasfans.ui.main.adapter;
 
-import static android.content.Context.MODE_PRIVATE;
-
 import android.annotation.SuppressLint;
 import android.content.ClipData;
 import android.content.ClipboardManager;
 import android.content.Context;
-import android.content.Intent;
-import android.content.SharedPreferences;
-import android.os.Bundle;
-import android.util.Log;
 import android.view.LayoutInflater;
 import android.view.View;
 import android.view.ViewGroup;
-import android.widget.CheckBox;
-import android.widget.CompoundButton;
 import android.widget.ImageView;
 import android.widget.TextView;
 import android.widget.Toast;
@@ -23,10 +15,8 @@
 import androidx.recyclerview.widget.RecyclerView;
 
 import com.example.asasfans.R;
-import com.example.asasfans.ui.main.ClickJumpActivity;
 
 import java.util.Arrays;
-import java.util.HashMap;
 import java.util.List;
 import java.util.Map;
 
@@ -38,84 +28,78 @@
 public class ToolsAdapter extends RecyclerView.Adapter<ToolsAdapter.ToolsViewHolder> {
     private final int CHECK_MAX_LIMIT = 3;
     public static final List<String> iconUrl
-            = Arrays.asList("https://asoul.cloud",
+            = Arrays.asList(
                             "https://asoulcnki.asia",
                             "https://tools.asoulfan.com/zhijiangDict",
                             "https://asoul.icu/",
                             "https://asoul.asia/",
                             "https://asoulwiki.com/",
                             "http://asoul.infedg.xyz/",
-                            "https://studio.asf.ink",
+
                             "https://nf.asoul-rec.com",
                             "https://tools.asoulfan.com/ingredientChecking",
                             "http://asoulfan.xyz/"
             );
     public static final List<String> iconFileName
-            = Arrays.asList("icon_asoul_cloud",
+            = Arrays.asList(
                             "icon_zwcc",
                             "icon_zhijiang_book",
                             "icon_long_comment",
                             "icon_asoul",
                             "icon_asoul",
                             "icon_asoul",
-                            "icon_asoul_studio",
                             "icon_asoul",
                             "icon_asf_bak",
                             "icon_asf_bak"
             );
     public static final List<String> desc
-            = Arrays.asList("A-SOUL Fans Art - 一个魂的二创",
+            = Arrays.asList(
                             "枝网查重",
                             "方言词典",
                             "小作文",
                             "论坛管理群聊天记录公示",
                             "一个魂维基 A-SOUL WIKI",
                             "使用GPT-2模型训练的小作文生成器",
-                            "收录A-SOUL几乎全部Solo以及合唱歌曲",
                             "A-SOUL原画录播站",
                             "成分姬",
                             "羊驼打过的太极/QA查询"
             );
     public static final List<String> name
-            = Arrays.asList("图片",
+            = Arrays.asList(
                             "枝网查重",
                             "方言词典",
                             "小作文",
                             "聊天公示",
                             "魂维基",
                             "作文生成",
-                            "录音棚",
                             "录播站",
                             "成分姬",
                             "查QA"
             );
-    //是否显示选框,默认false
-    private boolean isShowBox = false;
-    // 存储勾选框状态的map集合
-    private Map<Integer, Boolean> map = new HashMap<>();
+
     private Context context;
-    private SharedPreferences userInfo;
-    private SharedPreferences.Editor editor;//获取Editor
+//    private SharedPreferences userInfo;
+//    private SharedPreferences.Editor editor;//获取Editor
     private Map<String, ?> tmp;
 
 
     public ToolsAdapter(Context context){
         this.context = context;
-        initMapAndCheckBox();
+
     }
 
     //初始化map集合,默认为不选中
-    private void initMapAndCheckBox() {
-
-        userInfo = context.getSharedPreferences("ToolsData", MODE_PRIVATE);
-        editor = userInfo.edit();
-        tmp = userInfo.getAll();
-        Log.i("initMapAndCheckBox", tmp.toString());
-        for (int i = 0; i < iconUrl.size(); i++) {
-            map.put(i, userInfo.getBoolean(iconUrl.get(i), false));
-        }
-
-    }
+//    private void initMapAndCheckBox() {
+//
+//        userInfo = context.getSharedPreferences("ToolsData", MODE_PRIVATE);
+//        editor = userInfo.edit();
+//        tmp = userInfo.getAll();
+//        Log.i("initMapAndCheckBox", tmp.toString());
+//        for (int i = 0; i < iconUrl.size(); i++) {
+//            map.put(i, userInfo.getBoolean(iconUrl.get(i), false));
+//        }
+//
+//    }
 
     @NonNull
     @Override
@@ -125,11 +109,12 @@
         view.setOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View v) {
-                Bundle data = new Bundle();
-                data.putString("WebUrl", iconUrl.get(toolsViewHolder.getBindingAdapterPosition()));
-                Intent intent = new Intent(context, ClickJumpActivity.class);
-                intent.putExtras(data);
-                context.startActivity(intent);
+//                Bundle data = new Bundle();
+//                data.putString("WebUrl", iconUrl.get(toolsViewHolder.getBindingAdapterPosition()));
+//                Intent intent = new Intent(context, ClickJumpActivity.class);
+//                intent.putExtras(data);
+//                context.startActivity(intent);
+                
             }
         });
         view.setOnLongClickListener(new View.OnLongClickListener() {
@@ -151,54 +136,15 @@
     public void onBindViewHolder(@NonNull ToolsViewHolder holder, @SuppressLint("RecyclerView") int position) {
         holder.imageView.setImageResource(getResource(iconFileName.get(position)));
         holder.textView.setText(desc.get(position));
-        if (isShowBox) {
-            holder.checkBox.setVisibility(View.VISIBLE);
-        } else {
-            holder.checkBox.setVisibility(View.INVISIBLE);
-        }
-//        Animation animation = AnimationUtils.loadAnimation(context, R.anim.list_anim);
-//        //设置checkBox显示的动画
-//        if (isShowBox)
-//            holder.checkBox.startAnimation(animation);
-        //设置checkBox改变监听
-        holder.checkBox.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener() {
-            @Override
-            public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {
-                //用map集合保存
-                for (int i = 0; i < iconUrl.size(); i++) {
-//                    System.out.println(userInfo.getBoolean(iconUrl.get(i), false));
-                }
-                map.put(position, isChecked);
-                editor.putBoolean(iconUrl.get(position), isChecked);
-                editor.commit();
-                int count = 0;
-                for (int i = 0; i < iconUrl.size(); i++) {
-//                    System.out.println(userInfo.getBoolean(iconUrl.get(i), false));
-                    if (userInfo.getBoolean(iconUrl.get(i), false))
-                        count++;
-                }
-//                System.out.println(count);
-                if (count == CHECK_MAX_LIMIT){
-                    Toast.makeText(context, "已达到选择上限", Toast.LENGTH_SHORT).show();
-                    buttonView.setChecked(false);
-                    map.put(position, false);
-                    editor.putBoolean(iconUrl.get(position), false);
-                    editor.commit();
-                }
-//                System.out.println("---------------------");
-//                for (int i = 0; i < iconUrl.size(); i++) {
-//                    System.out.println(userInfo.getBoolean(iconUrl.get(i), false));
-//                }
-            }
-        });
+
         // 设置CheckBox的状态
-        if (map.get(position) == null) {
-            map.put(position, false);
-            editor.putBoolean(iconUrl.get(position), false);
-            editor.commit();
-        }
-        Boolean initState = userInfo.getBoolean(iconUrl.get(position), false);
-        holder.checkBox.setChecked(initState);
+//        if (map.get(position) == null) {
+//            map.put(position, false);
+//            editor.putBoolean(iconUrl.get(position), false);
+//            editor.commit();
+//        }
+//        Boolean initState = userInfo.getBoolean(iconUrl.get(position), false);
+//        holder.checkBox.setChecked(initState);
 
     }
 
@@ -213,35 +159,34 @@
         return resId;
     }
 
-    public boolean isShowBox() {
-        return isShowBox;
-    }
-
-    public void setShowBox() {
-        //取反
-        isShowBox = !isShowBox;
-    }
-    //点击item选中CheckBox
-    public void setSelectItem(int position) {
-        //对当前状态取反
-        if (map.get(position)) {
-            map.put(position, false);
-        } else {
-            map.put(position, true);
-        }
-        notifyItemChanged(position);
-    }
+//    public boolean isShowBox() {
+//        return isShowBox;
+//    }
+//
+//    public void setShowBox() {
+//        //取反
+//        isShowBox = !isShowBox;
+//    }
+//    //点击item选中CheckBox
+//    public void setSelectItem(int position) {
+//        //对当前状态取反
+//        if (map.get(position)) {
+//            map.put(position, false);
+//        } else {
+//            map.put(position, true);
+//        }
+//        notifyItemChanged(position);
+//    }
 
     //视图管理
     public class ToolsViewHolder extends RecyclerView.ViewHolder {
         private TextView textView;
-        private CheckBox checkBox;
         private ImageView imageView;
 
         public ToolsViewHolder(@NonNull View itemView) {
             super(itemView);
             textView = itemView.findViewById(R.id.web_desc);
-            checkBox = itemView.findViewById(R.id.web_check_box);
+
             imageView = itemView.findViewById(R.id.web_icon);
         }
     }
Index: app/src/main/java/com/example/asasfans/ui/main/adapter/PubdateVideoAdapter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.asasfans.ui.main.adapter;\r\n\r\nimport static com.example.asasfans.util.ViewUtilsKt.dip2px;\r\nimport static com.example.asasfans.util.ViewUtilsKt.setMargin;\r\n\r\nimport android.annotation.SuppressLint;\r\nimport android.content.ClipData;\r\nimport android.content.ClipboardManager;\r\nimport android.content.ContentValues;\r\nimport android.content.Context;\r\nimport android.content.Intent;\r\nimport android.content.pm.PackageManager;\r\nimport android.database.sqlite.SQLiteDatabase;\r\nimport android.net.Uri;\r\nimport android.util.Log;\r\nimport android.view.Gravity;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.CheckBox;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.appcompat.widget.AppCompatButton;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\n\r\nimport com.example.asasfans.R;\r\nimport com.example.asasfans.data.AdvancedSearchDataBean;\r\nimport com.example.asasfans.data.DBOpenHelper;\r\nimport com.example.asasfans.data.VideoDataStoragedInMemory;\r\nimport com.google.android.flexbox.FlexboxLayout;\r\nimport com.nostra13.universalimageloader.core.ImageLoader;\r\nimport com.orhanobut.dialogplus.DialogPlus;\r\nimport com.orhanobut.dialogplus.OnClickListener;\r\nimport com.orhanobut.dialogplus.ViewHolder;\r\n\r\nimport java.text.SimpleDateFormat;\r\nimport java.util.ArrayList;\r\nimport java.util.Date;\r\nimport java.util.List;\r\nimport java.util.concurrent.ExecutorService;\r\nimport java.util.concurrent.Executors;\r\n\r\n/**\r\n * @author akarinini\r\n * @description 命名错误，这个类实际是真正的VideoAdapter，根据传入的bvid list调用BVID_SEARCH_URL api异步更新各个video item\r\n */\r\n\r\npublic class PubdateVideoAdapter extends RecyclerView.Adapter<VideoViewHolder> {\r\n    public static final int GET_DATA_SUCCESS = 1;\r\n    public static final int NETWORK_ERROR = 2;\r\n\r\n    private String BVID_SEARCH_URL = \"https://api.bilibili.com/x/web-interface/view?bvid=\";\r\n    private Context mContext;\r\n    private final String PackageName = \"tv.danmaku.bili\";\r\n    private final ExecutorService cachedThreadPool = Executors.newCachedThreadPool();\r\n    private List<VideoDataStoragedInMemory> videoDataStoragedInMemoryList = new ArrayList<>();\r\n    private List<AdvancedSearchDataBean.DataBean.ResultBean> resultBeans = new ArrayList<>();\r\n    private DialogPlus dialog;\r\n    private View dialogView;\r\n    private List<CheckBox> checkBoxs = new ArrayList<CheckBox>();\r\n    DBOpenHelper dbOpenHelper;\r\n    SQLiteDatabase db;\r\n\r\n    public PubdateVideoAdapter(Context context, List<VideoDataStoragedInMemory> videosBvid) {\r\n        this.mContext = context;\r\n        this.videoDataStoragedInMemoryList = videosBvid;\r\n        dbOpenHelper = new DBOpenHelper(context, \"blackList.db\", null, DBOpenHelper.DB_VERSION);\r\n        db = dbOpenHelper.getWritableDatabase();\r\n        initDialog();\r\n    }\r\n    public PubdateVideoAdapter(Context context, List<AdvancedSearchDataBean.DataBean.ResultBean> resultBeans, int pageNums) {\r\n        this.mContext = context;\r\n        this.resultBeans = resultBeans;\r\n        dbOpenHelper = new DBOpenHelper(context, \"blackList.db\", null, DBOpenHelper.DB_VERSION);\r\n        db = dbOpenHelper.getWritableDatabase();\r\n        initDialog();\r\n    }\r\n\r\n    public void closeSQL(){\r\n        db.close();\r\n        dbOpenHelper.close();\r\n    }\r\n\r\n    void initDialog(){\r\n        dialog = DialogPlus.newDialog(mContext)\r\n                .setContentHolder(new ViewHolder(R.layout.dialog_video_more))\r\n                .setContentHeight(ViewGroup.LayoutParams.WRAP_CONTENT)\r\n                .setContentWidth(ViewGroup.LayoutParams.MATCH_PARENT)\r\n                .setCancelable(true)\r\n                .setOnClickListener(new OnClickListener() {\r\n                    @Override\r\n                    public void onClick(DialogPlus dialog, View view) {\r\n                        dialog.dismiss();\r\n                    }\r\n                })\r\n                .setGravity(Gravity.BOTTOM)\r\n                .create();\r\n        dialogView = dialog.getHolderView();\r\n    }\r\n\r\n    public static String[] tagFormat(String tag){\r\n        return tag.replace(\"\\'\", \"\").replace(\" \", \"\").split(\",\");\r\n    }\r\n    public static String stampToDate(String s) {\r\n        if(s.length() == 10){\r\n            s=s+\"000\";\r\n        }\r\n        String res;\r\n        SimpleDateFormat simpleDateFormat = new SimpleDateFormat(\"yyyy-MM-dd\");\r\n        //如果它本来就是long类型的,则不用写这一步\r\n        long lt = new Long(s);\r\n//        Date date = new Date(lt * 1000);\r\n        Date date = new Date(lt );\r\n        res = simpleDateFormat.format(date);\r\n        return res;\r\n    }\r\n\r\n\r\n    @NonNull\r\n    @Override\r\n    public VideoViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {\r\n        View view = LayoutInflater.from(mContext).inflate(R.layout.video_recyclerview, parent,false);\r\n        final VideoViewHolder videoViewHolder = new VideoViewHolder(view);\r\n        videoViewHolder.videoMore.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                AppCompatButton blacklistVideo =  dialogView.findViewById(R.id.dialog_black_list);\r\n                AppCompatButton blacklistAuthor =  dialogView.findViewById(R.id.dialog_black_list_add_author);\r\n                AppCompatButton blacklistTag =  dialogView.findViewById(R.id.dialog_black_list_add_tag);\r\n                FlexboxLayout flexboxLayout = dialogView.findViewById(R.id.dialog_black_list_tag_flexbox);\r\n                TextView videoUpdateTime = dialogView.findViewById(R.id.video_update_time);\r\n                TextView dialog_black_list_video_desc = dialogView.findViewById(R.id.dialog_black_list_video_desc);\r\n\r\n                videoUpdateTime.setText(stampToDate(String.valueOf(resultBeans.get(videoViewHolder.getBindingAdapterPosition()).getPubdate())));\r\n                dialog_black_list_video_desc.setText(resultBeans.get(videoViewHolder.getBindingAdapterPosition()).getDesc());\r\n\r\n                flexboxLayout.removeAllViews();\r\n                checkBoxs.clear();\r\n                String[] tagList = tagFormat(resultBeans.get(videoViewHolder.getBindingAdapterPosition()).getTag());\r\n                for (int i = 0; i < tagList.length; i++){\r\n                    CheckBox checkBox = (CheckBox) LayoutInflater.from(mContext).inflate(R.layout.checkbox_tag, parent,false);\r\n\r\n                    checkBox.setText(tagList[i]);\r\n                    checkBoxs.add(checkBox);\r\n                    //有些tag是空格，不加入布局\r\n                    if (!checkBoxs.get(i).getText().equals(\"\")) {\r\n                        flexboxLayout.addView(checkBox);\r\n                    }\r\n                }\r\n                blacklistVideo.setOnClickListener(new View.OnClickListener() {\r\n                    @Override\r\n                    public void onClick(View view) {\r\n                        Log.i(\"appCompatButton\", \"onClick\");\r\n                        try {\r\n                            DBOpenHelper dbOpenHelper = new DBOpenHelper(mContext,\"blackList.db\",null,DBOpenHelper.DB_VERSION);\r\n                            SQLiteDatabase sqliteDatabase = dbOpenHelper.getWritableDatabase();\r\n                            ContentValues values = new ContentValues();\r\n//                            values.put(\"bvid\", videoDataStoragedInMemoryList.get(videoViewHolder.getBindingAdapterPosition()).getBvid());\r\n//                            values.put(\"PicUrl\", videoDataStoragedInMemoryList.get(videoViewHolder.getBindingAdapterPosition()).getPicUrl());\r\n//                            values.put(\"Title\", videoDataStoragedInMemoryList.get(videoViewHolder.getBindingAdapterPosition()).getTitle());\r\n//                            values.put(\"Duration\", videoDataStoragedInMemoryList.get(videoViewHolder.getBindingAdapterPosition()).getDuration());\r\n//                            values.put(\"Author\", videoDataStoragedInMemoryList.get(videoViewHolder.getBindingAdapterPosition()).getAuthor());\r\n//                            values.put(\"ViewNum\", videoDataStoragedInMemoryList.get(videoViewHolder.getBindingAdapterPosition()).getView());\r\n//                            values.put(\"LikeNum\", videoDataStoragedInMemoryList.get(videoViewHolder.getBindingAdapterPosition()).getLike());\r\n//                            values.put(\"Tname\", videoDataStoragedInMemoryList.get(videoViewHolder.getBindingAdapterPosition()).getTname());\r\n                            values.put(\"bvid\", resultBeans.get(videoViewHolder.getBindingAdapterPosition()).getBvid());\r\n                            values.put(\"PicUrl\", resultBeans.get(videoViewHolder.getBindingAdapterPosition()).getPic());\r\n                            values.put(\"Title\", resultBeans.get(videoViewHolder.getBindingAdapterPosition()).getTitle());\r\n                            values.put(\"Duration\", resultBeans.get(videoViewHolder.getBindingAdapterPosition()).getDuration());\r\n                            values.put(\"Author\", resultBeans.get(videoViewHolder.getBindingAdapterPosition()).getName());\r\n                            values.put(\"ViewNum\", resultBeans.get(videoViewHolder.getBindingAdapterPosition()).getView());\r\n                            values.put(\"LikeNum\", resultBeans.get(videoViewHolder.getBindingAdapterPosition()).getLike());\r\n                            values.put(\"Tname\", resultBeans.get(videoViewHolder.getBindingAdapterPosition()).getTname());\r\n                            sqliteDatabase.insert(\"blackBvid\", null, values);\r\n\r\n                            dbOpenHelper.close();\r\n                            sqliteDatabase.close();\r\n                        }catch (Exception e){\r\n                            e.printStackTrace();\r\n                            Toast.makeText(mContext, e.toString(), Toast.LENGTH_SHORT).show();\r\n                        }\r\n                        resultBeans.remove(videoViewHolder.getBindingAdapterPosition());\r\n                        notifyItemRemoved(videoViewHolder.getBindingAdapterPosition());\r\n                        notifyItemRangeChanged(videoViewHolder.getBindingAdapterPosition(), getItemCount());\r\n                        Toast.makeText(mContext,\"屏蔽视频成功\",Toast.LENGTH_SHORT).show();\r\n                        dialog.dismiss();\r\n                    }\r\n                });\r\n                blacklistAuthor.setOnClickListener(new View.OnClickListener() {\r\n                    @Override\r\n                    public void onClick(View view) {\r\n                        DBOpenHelper dbOpenHelper = new DBOpenHelper(mContext,\"blackList.db\",null,DBOpenHelper.DB_VERSION);\r\n                        SQLiteDatabase sqliteDatabase = dbOpenHelper.getWritableDatabase();\r\n                        ContentValues values = new ContentValues();\r\n                        values.put(\"mid\", resultBeans.get(videoViewHolder.getBindingAdapterPosition()).getMid());\r\n                        sqliteDatabase.insert(\"blackMid\", null, values);\r\n\r\n                        dbOpenHelper.close();\r\n                        sqliteDatabase.close();\r\n\r\n                        resultBeans.remove(videoViewHolder.getBindingAdapterPosition());\r\n                        notifyItemRemoved(videoViewHolder.getBindingAdapterPosition());\r\n                        notifyItemRangeChanged(videoViewHolder.getBindingAdapterPosition(), getItemCount());\r\n\r\n                        dialog.dismiss();\r\n                        Toast.makeText(mContext,\"屏蔽UP主成功\",Toast.LENGTH_SHORT).show();\r\n                    }\r\n                });\r\n                blacklistTag.setOnClickListener(new View.OnClickListener() {\r\n                    @Override\r\n                    public void onClick(View view) {\r\n                        DBOpenHelper dbOpenHelper = new DBOpenHelper(mContext,\"blackList.db\",null,DBOpenHelper.DB_VERSION);\r\n                        SQLiteDatabase sqliteDatabase = dbOpenHelper.getWritableDatabase();\r\n                        ContentValues values = new ContentValues();\r\n\r\n                        List<String> tags = new ArrayList<>();\r\n\r\n                        for (CheckBox checkBox : checkBoxs){\r\n                            if (checkBox.isChecked()){\r\n                                tags.add(checkBox.getText().toString());\r\n                            }\r\n                        }\r\n                        if (tags.size() == 0){\r\n                            Toast.makeText(mContext,\"请选择至少一个TAG\",Toast.LENGTH_SHORT).show();\r\n                        }else {\r\n\r\n                            for (String tmp : tags){\r\n                                values.put(\"tag\", tmp);\r\n                                sqliteDatabase.insert(\"blackTag\", null, values);\r\n                                Log.i(\"blacklistTag\", tmp);\r\n                            }\r\n\r\n                            Toast.makeText(mContext,\"屏蔽TAG成功\",Toast.LENGTH_SHORT).show();\r\n\r\n                            resultBeans.remove(videoViewHolder.getBindingAdapterPosition());\r\n                            notifyItemRemoved(videoViewHolder.getBindingAdapterPosition());\r\n                            notifyItemRangeChanged(videoViewHolder.getBindingAdapterPosition(), getItemCount());\r\n\r\n                            dialog.dismiss();\r\n                        }\r\n                        sqliteDatabase.close();\r\n                        dbOpenHelper.close();\r\n                        sqliteDatabase.close();\r\n                    }\r\n                });\r\n                dialog.show();\r\n            }\r\n        });\r\n\r\n        view.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n//                Toast.makeText(mContext,mResultBean.get(videoViewHolder.getBindingAdapterPosition()).getBvid(),Toast.LENGTH_SHORT).show();\r\n               //跳转到特定包名app\r\n//                PackageManager packageManager = mContext.getPackageManager();\r\n//                Intent intent = packageManager.getLaunchIntentForPackage(PackageName);\r\n//                if (intent != null) {\r\n                try {\r\n                    Intent it = new Intent();\r\n                    it.setAction(Intent.ACTION_VIEW);\r\n                    it.setData(Uri.parse(\"bilibili://video/\" + resultBeans.get(videoViewHolder.getBindingAdapterPosition()).getBvid()));\r\n                    mContext.startActivity(it);\r\n                }\r\n//                }else {\r\n                catch (Exception e){\r\n                    Toast.makeText(mContext,\"没有找到bilibili，已复制bv号\",Toast.LENGTH_SHORT).show();\r\n                    //获取剪贴板管理器：\r\n                    ClipboardManager cm = (ClipboardManager) mContext.getSystemService(Context.CLIPBOARD_SERVICE);\r\n                    ClipData mClipData = ClipData.newPlainText(\"bvid\", resultBeans.get(videoViewHolder.getBindingAdapterPosition()).getBvid());\r\n                    cm.setPrimaryClip(mClipData);\r\n                }\r\n\r\n            }\r\n        });\r\n        view.setOnLongClickListener(new View.OnLongClickListener() {\r\n            @Override\r\n            public boolean onLongClick(View v) {\r\n                Toast.makeText(mContext,resultBeans.get(videoViewHolder.getBindingAdapterPosition()).getBvid() + \"已复制到剪贴板\",Toast.LENGTH_SHORT).show();\r\n                //获取剪贴板管理器：\r\n                ClipboardManager cm = (ClipboardManager) mContext.getSystemService(Context.CLIPBOARD_SERVICE);\r\n                ClipData mClipData = ClipData.newPlainText(\"bvid\", resultBeans.get(videoViewHolder.getBindingAdapterPosition()).getBvid());\r\n                cm.setPrimaryClip(mClipData);\r\n                return true;\r\n            }\r\n        });\r\n\r\n        return videoViewHolder;\r\n    }\r\n\r\n    @Override\r\n    public void onBindViewHolder(@NonNull VideoViewHolder holder, @SuppressLint(\"RecyclerView\") int position) {\r\n//        Animation fadeIn = AnimationUtils.loadAnimation(mContext, R.anim.fadein);\r\n//        holder.imageView.startAnimation(fadeIn);\r\n\r\n        if (position == 0) {\r\n            setMargin(holder.videoLayout, dip2px(10), dip2px(5), dip2px(10), 0);\r\n        } else {\r\n            setMargin(holder.videoLayout, dip2px(10), 0, dip2px(10), 0);\r\n        }\r\n        Log.i(\"onBindViewHolder\", resultBeans.get(position).getTitle());\r\n        holder.videoTitle.setText(resultBeans.get(position).getTitle());\r\n        ImageLoader.getInstance().displayImage(resultBeans.get(position).getPic() + \"@480w_300h_1e_1c.jpg\", holder.imageView);\r\n        holder.videoAuthor.setText(resultBeans.get(position).getName());\r\n        holder.videoDuration.setText(secondsToTime(Integer.valueOf(resultBeans.get(position).getDuration())));\r\n        holder.videoLike.setText(viewNumFormat(resultBeans.get(position).getLike()));\r\n        holder.videoView.setText(viewNumFormat(resultBeans.get(position).getView()));\r\n        holder.videoTname.setText(resultBeans.get(position).getTname());\r\n        // 下面被成段注释掉的为传入bvid的item更新视频的机制，若\r\n        /*Handler handler = new Handler() {\r\n            @Override\r\n            public void handleMessage(Message msg) {\r\n                super.handleMessage(msg);\r\n                Bundle data = msg.getData();\r\n                String val = data.getString(\"singleVideoData\");\r\n//                Log.i(\"singleVideoData\", \"请求结果为-->\" + val);\r\n                Gson gson =new Gson();\r\n                SingleVideoBean singleVideoBean = gson.fromJson(val, SingleVideoBean.class);\r\n//                if (singleVideoBean.getCode() == 62002)\r\n                switch (msg.what){\r\n                    case GET_DATA_SUCCESS:\r\n                        if ((singleVideoBean.getData() != null)) {\r\n                            holder.videoTitle.setText(singleVideoBean.getData().getTitle());\r\n                            videoDataStoragedInMemoryList.get(position).setTitle(singleVideoBean.getData().getTitle());\r\n                            ImageLoader.getInstance().displayImage(singleVideoBean.getData().getPic() + \"@480w_300h_1e_1c.jpg\", holder.imageView);\r\n                            videoDataStoragedInMemoryList.get(position).setPicUrl(singleVideoBean.getData().getPic() + \"@480w_300h_1e_1c.jpg\");\r\n                            holder.videoAuthor.setText(singleVideoBean.getData().getOwner().getName());\r\n                            videoDataStoragedInMemoryList.get(position).setAuthor(singleVideoBean.getData().getOwner().getName());\r\n                            holder.videoDuration.setText(secondsToTime(singleVideoBean.getData().getDuration()));\r\n                            videoDataStoragedInMemoryList.get(position).setDuration(singleVideoBean.getData().getDuration());\r\n                            holder.videoLike.setText(viewNumFormat(singleVideoBean.getData().getStat().getLike()) + \" 点赞\");\r\n                            videoDataStoragedInMemoryList.get(position).setLike(singleVideoBean.getData().getStat().getLike());\r\n                            holder.videoView.setText(viewNumFormat(singleVideoBean.getData().getStat().getView()) + \" 播放\");\r\n                            videoDataStoragedInMemoryList.get(position).setView(singleVideoBean.getData().getStat().getView());\r\n                            holder.videoTname.setText(\"分区 \"+singleVideoBean.getData().getTname());\r\n                            videoDataStoragedInMemoryList.get(position).setTname(singleVideoBean.getData().getTname());\r\n                            videoDataStoragedInMemoryList.get(position).setFirstLoad(false);\r\n                        }else {\r\n                            holder.videoTitle.setText(val);\r\n//                            videoDataStoragedInMemoryList.remove(position);\r\n//                            notifyItemRemoved(position);\r\n//                            notifyDataSetChanged();\r\n//                            BiliVideoFragment.pubdateVideoAdapter.notifyItemRemoved(position);\r\n//                            BiliVideoFragment.pubdateVideoAdapter.notifyItemRangeChanged(position, BiliVideoFragment.pubdateVideoAdapter.getItemCount());\r\n                        }\r\n                        break;\r\n                    case NETWORK_ERROR:\r\n                        holder.videoTitle.setText(\"NETWORK_ERROR\");\r\n                }\r\n                // TODO\r\n                // UI界面的更新等相关操作\r\n            }\r\n        };\r\n\r\n        Runnable networkTask = new Runnable() {\r\n            @Override\r\n            public void run() {\r\n                Message msg = new Message();\r\n                Bundle data = new Bundle();\r\n                // TODO\r\n                // 在这里进行 http request.网络请求相关操作\r\n                OkHttpClient client = new OkHttpClient.Builder().readTimeout(5, TimeUnit.SECONDS).build();\r\n                Request request = new Request.Builder().url(BVID_SEARCH_URL + videoDataStoragedInMemoryList.get(position).getBvid())\r\n                        .get().build();\r\n                Call call = client.newCall(request);\r\n                Response response = null;\r\n                String tmp;\r\n                try {\r\n                    response = call.execute();\r\n                    tmp = response.body().string();\r\n                    msg.what = GET_DATA_SUCCESS;\r\n                    data.putString(\"singleVideoData\", tmp);\r\n\r\n                } catch (IOException e) {\r\n                    e.printStackTrace();\r\n                    handler.sendEmptyMessage(NETWORK_ERROR);\r\n                }\r\n                msg.setData(data);\r\n                handler.sendMessage(msg);\r\n            }\r\n        };\r\n\r\n//        new Thread(networkTask).start();\r\n        if ((videoDataStoragedInMemoryList.get(position).getFirstLoad())) {\r\n            cachedThreadPool.execute(networkTask);\r\n        }else {\r\n            holder.videoTitle.setText(videoDataStoragedInMemoryList.get(position).getTitle());\r\n            ImageLoader.getInstance().displayImage(videoDataStoragedInMemoryList.get(position).getPicUrl(), holder.imageView);\r\n            holder.videoAuthor.setText(videoDataStoragedInMemoryList.get(position).getAuthor());\r\n            holder.videoDuration.setText(secondsToTime(videoDataStoragedInMemoryList.get(position).getDuration()));\r\n            holder.videoLike.setText(viewNumFormat(videoDataStoragedInMemoryList.get(position).getLike()) + \" 点赞\");\r\n            holder.videoView.setText(viewNumFormat(videoDataStoragedInMemoryList.get(position).getView()) + \" 播放\");\r\n            holder.videoTname.setText(\"分区 \"+videoDataStoragedInMemoryList.get(position).getTname());\r\n//            Log.i(\"getFirstLoad:false\", String.valueOf(position));\r\n        }*/\r\n\r\n    }\r\n\r\n\r\n    @Override\r\n    public int getItemCount() {\r\n        return resultBeans.size();\r\n    }\r\n    @Override\r\n    public int getItemViewType(int position) {\r\n        return position;\r\n    }\r\n\r\n    @Override\r\n    public long getItemId(int position) {\r\n        return resultBeans.get(position).hashCode();\r\n    }\r\n\r\n\r\n\r\n\r\n    /**\r\n     * @description 视频时长为秒，更改显示\r\n     * @param\r\n     * @return\r\n     * @author akari\r\n     * @time 2022/2/27 10:39\r\n     */\r\n    private static String secondsToTime(int seconds){\r\n        int h=seconds/3600;\t\t\t//小时\r\n        int m=(seconds%3600)/60;\t\t//分钟\r\n        int s=(seconds%3600)%60;\t\t//秒\r\n        if(h>0){\r\n            return h + \":\" + m +\":\" + s;\r\n        }\r\n        if(m>0){\r\n            return m + \":\" + s;\r\n        }\r\n        return \"00:\" + s;\r\n    }\r\n\r\n    /**\r\n     * @description 更改播放量与点赞显示\r\n     * @param\r\n     * @return\r\n     * @author akari\r\n     * @time 2022/2/27 10:40\r\n     */\r\n    private static String viewNumFormat(int viewNum){\r\n        if ((viewNum - 10000) < 0){\r\n            return viewNum + \"\";\r\n        }else {\r\n            return viewNum/10000 +\"万\";\r\n        }\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/asasfans/ui/main/adapter/PubdateVideoAdapter.java b/app/src/main/java/com/example/asasfans/ui/main/adapter/PubdateVideoAdapter.java
--- a/app/src/main/java/com/example/asasfans/ui/main/adapter/PubdateVideoAdapter.java	
+++ b/app/src/main/java/com/example/asasfans/ui/main/adapter/PubdateVideoAdapter.java	
@@ -9,7 +9,6 @@
 import android.content.ContentValues;
 import android.content.Context;
 import android.content.Intent;
-import android.content.pm.PackageManager;
 import android.database.sqlite.SQLiteDatabase;
 import android.net.Uri;
 import android.util.Log;
@@ -265,11 +264,17 @@
                 }
 //                }else {
                 catch (Exception e){
-                    Toast.makeText(mContext,"没有找到bilibili，已复制bv号",Toast.LENGTH_SHORT).show();
+//                    Toast.makeText(mContext,"没有找到bilibili，已复制bv号",Toast.LENGTH_SHORT).show();
                     //获取剪贴板管理器：
                     ClipboardManager cm = (ClipboardManager) mContext.getSystemService(Context.CLIPBOARD_SERVICE);
                     ClipData mClipData = ClipData.newPlainText("bvid", resultBeans.get(videoViewHolder.getBindingAdapterPosition()).getBvid());
                     cm.setPrimaryClip(mClipData);
+                    Toast.makeText(mContext,"没有找到或无法用bilibili打开，尝试采用浏览器打开", Toast.LENGTH_LONG).show();
+                    Intent intent= new Intent();
+                    intent.setAction("android.intent.action.VIEW");
+                    Uri content_url = Uri.parse("https://www.bilibili.com/video/" + resultBeans.get(videoViewHolder.getBindingAdapterPosition()).getBvid());
+                    intent.setData(content_url);
+                    mContext.startActivity(intent);
                 }
 
             }
@@ -277,11 +282,12 @@
         view.setOnLongClickListener(new View.OnLongClickListener() {
             @Override
             public boolean onLongClick(View v) {
-                Toast.makeText(mContext,resultBeans.get(videoViewHolder.getBindingAdapterPosition()).getBvid() + "已复制到剪贴板",Toast.LENGTH_SHORT).show();
-                //获取剪贴板管理器：
-                ClipboardManager cm = (ClipboardManager) mContext.getSystemService(Context.CLIPBOARD_SERVICE);
-                ClipData mClipData = ClipData.newPlainText("bvid", resultBeans.get(videoViewHolder.getBindingAdapterPosition()).getBvid());
-                cm.setPrimaryClip(mClipData);
+//                Toast.makeText(mContext,resultBeans.get(videoViewHolder.getBindingAdapterPosition()).getBvid() + "已复制到剪贴板",Toast.LENGTH_SHORT).show();
+//                //获取剪贴板管理器：
+//                ClipboardManager cm = (ClipboardManager) mContext.getSystemService(Context.CLIPBOARD_SERVICE);
+//                ClipData mClipData = ClipData.newPlainText("bvid", resultBeans.get(videoViewHolder.getBindingAdapterPosition()).getBvid());
+//                cm.setPrimaryClip(mClipData);
+                dialog.show();
                 return true;
             }
         });
Index: build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>// Top-level build file where you can add configuration options common to all sub-projects/modules.\r\nbuildscript {\r\n    repositories {\r\n        google()\r\n        jcenter()\r\n    }\r\n    dependencies {\r\n        classpath \"com.android.tools.build:gradle:4.0.1\"\r\n        classpath \"org.jetbrains.kotlin:kotlin-gradle-plugin:1.6.10\"\r\n\r\n        // NOTE: Do not place your application dependencies here; they belong\r\n        // in the individual module build.gradle files\r\n    }\r\n}\r\n\r\nallprojects {\r\n    repositories {\r\n        google()\r\n        jcenter()\r\n        maven { url 'https://jitpack.io' }\r\n    }\r\n}\r\n\r\ntask clean(type: Delete) {\r\n    delete rootProject.buildDir\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/build.gradle b/build.gradle
--- a/build.gradle	
+++ b/build.gradle	
@@ -7,7 +7,7 @@
     dependencies {
         classpath "com.android.tools.build:gradle:4.0.1"
         classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:1.6.10"
-
+        classpath "com.google.gms:google-services:4.3.10"
         // NOTE: Do not place your application dependencies here; they belong
         // in the individual module build.gradle files
     }
Index: app/src/main/java/com/example/asasfans/ui/main/fragment/ToolsFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.asasfans.ui.main.fragment;\r\n\r\nimport static com.example.asasfans.util.ViewUtilsKt.setMargin;\r\n\r\nimport android.app.AlarmManager;\r\nimport android.app.PendingIntent;\r\nimport android.content.Context;\r\nimport android.content.Intent;\r\nimport android.net.Uri;\r\nimport android.os.Bundle;\r\nimport android.view.Gravity;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.ImageView;\r\nimport android.widget.TextView;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.annotation.Nullable;\r\nimport androidx.appcompat.widget.AppCompatTextView;\r\nimport androidx.coordinatorlayout.widget.CoordinatorLayout;\r\nimport androidx.fragment.app.Fragment;\r\nimport androidx.recyclerview.widget.LinearLayoutManager;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\n\r\nimport com.example.asasfans.AsApplication;\r\nimport com.example.asasfans.R;\r\nimport com.example.asasfans.ui.customcomponent.MyDialog;\r\nimport com.example.asasfans.ui.customcomponent.RecyclerViewDecoration;\r\nimport com.example.asasfans.ui.main.adapter.ToolsAdapter;\r\nimport com.google.android.material.appbar.AppBarLayout;\r\nimport com.orhanobut.dialogplus.DialogPlus;\r\nimport com.orhanobut.dialogplus.ViewHolder;\r\n\r\n/**\r\n * @author: akari\r\n * @date: 2022/3/4\r\n * @description 工具页面\r\n *              添加官网\r\n */\r\npublic class ToolsFragment extends Fragment {\r\n    private DialogPlus dialog;\r\n    private View dialogView;\r\n\r\n    public static ToolsFragment newInstance() {\r\n//        Bundle args = new Bundle();\r\n\r\n        ToolsFragment fragment = new ToolsFragment();\r\n//        fragment.setArguments(args);\r\n        return fragment;\r\n    }\r\n\r\n    @Override\r\n    public void onCreate(@Nullable Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        dialog = DialogPlus.newDialog(getActivity())\r\n                .setContentHolder(new ViewHolder(R.layout.dialog_why))\r\n                .setContentHeight(ViewGroup.LayoutParams.WRAP_CONTENT)\r\n                .setContentWidth(ViewGroup.LayoutParams.MATCH_PARENT)\r\n                .setPadding(0,AsApplication.Companion.getStatusBarHeight(),0,0)\r\n                .setCancelable(true)\r\n                .setGravity(Gravity.TOP)\r\n                .create();\r\n        dialogView = dialog.getHolderView();\r\n    }\r\n\r\n    @Nullable\r\n    @Override\r\n    public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {\r\n        View view = inflater.inflate(R.layout.fragment_tools, container, false);\r\n        RecyclerView recyclerView = view.findViewById(R.id.tools_recyclerview);\r\n        TextView textView = view.findViewById(R.id.tools_button);\r\n        ImageView imageView = view.findViewById(R.id.image_why);\r\n\r\n\r\n        ToolsAdapter toolsAdapter = new ToolsAdapter(getActivity());\r\n        toolsAdapter.setHasStableIds(true);\r\n        recyclerView.setAdapter(toolsAdapter);\r\n        setMargin(recyclerView, 0, 0, 0, AsApplication.Companion.getStatusBarHeight());\r\n        recyclerView.setLayoutManager(new LinearLayoutManager(getActivity(),LinearLayoutManager.VERTICAL,false){\r\n            @Override\r\n            public boolean canScrollVertically() {\r\n                return true;\r\n            }\r\n        });\r\n        recyclerView.addItemDecoration(new RecyclerViewDecoration(8, 8));\r\n        imageView.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                dialog.show();\r\n                AppCompatTextView officialWeb = dialogView.findViewById(R.id.dialog_official_web);\r\n                officialWeb.setOnClickListener(new View.OnClickListener() {\r\n                    @Override\r\n                    public void onClick(View view) {\r\n                        Intent intentContractUs = new Intent();\r\n                        intentContractUs.setAction(\"android.intent.action.VIEW\");\r\n                        Uri content_url = Uri.parse(\"https://app.asf.ink/\");\r\n                        intentContractUs.setData(content_url);\r\n                        startActivity(intentContractUs);\r\n                        dialog.dismiss();\r\n                    }\r\n                });\r\n            }\r\n        });\r\n        textView.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                toolsAdapter.setShowBox();\r\n                toolsAdapter.notifyDataSetChanged();\r\n                if (!toolsAdapter.isShowBox()){\r\n                    new MyDialog(getActivity(), R.style.mdialog, new MyDialog.OncloseListener() {\r\n                        @Override\r\n                        public void onClick(boolean confirm) {\r\n                            //设置重启后生效，但是自动重启速度慢，如果用户在自动重启的过程中之间点开应用会有神奇的bug\r\n                            if (confirm){\r\n                                Intent intent = getActivity().getPackageManager()\r\n                                        .getLaunchIntentForPackage(getActivity().getApplication().getPackageName());\r\n                                PendingIntent restartIntent = PendingIntent.getActivity(getActivity().getApplicationContext(), 0, intent, 0);\r\n                                AlarmManager mgr = (AlarmManager)getActivity().getSystemService(Context.ALARM_SERVICE);\r\n                                mgr.set(AlarmManager.RTC, System.currentTimeMillis() + 100, restartIntent); // 1秒钟后重启应用\r\n                                System.exit(0);\r\n                            }\r\n                        }\r\n                    }).show();\r\n//                    Toast.makeText(getContext(),\"手动重启以变更底部栏哦\",Toast.LENGTH_SHORT).show();\r\n                    textView.setBackgroundColor(getActivity().getResources().getColor(R.color.tab_text_normal));\r\n                    textView.setTextColor(getActivity().getResources().getColor(R.color.cardWhite));\r\n                }else {\r\n                    textView.setBackgroundColor(getActivity().getResources().getColor(R.color.backgroundGray));\r\n                    textView.setTextColor(getActivity().getResources().getColor(R.color.cardBlack));\r\n                }\r\n            }\r\n        });\r\n        View emptyView = view.findViewById(R.id.emptyViewTools);\r\n        CoordinatorLayout.LayoutParams layoutParams = new CoordinatorLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, AsApplication.Companion.getStatusBarHeight());\r\n        emptyView.setLayoutParams(layoutParams);\r\n        AppBarLayout appBarLayout = view.findViewById(R.id.appBar);\r\n        setMargin(appBarLayout, 0, AsApplication.Companion.getStatusBarHeight(),0,0);\r\n        return view;\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/asasfans/ui/main/fragment/ToolsFragment.java b/app/src/main/java/com/example/asasfans/ui/main/fragment/ToolsFragment.java
--- a/app/src/main/java/com/example/asasfans/ui/main/fragment/ToolsFragment.java	
+++ b/app/src/main/java/com/example/asasfans/ui/main/fragment/ToolsFragment.java	
@@ -2,9 +2,6 @@
 
 import static com.example.asasfans.util.ViewUtilsKt.setMargin;
 
-import android.app.AlarmManager;
-import android.app.PendingIntent;
-import android.content.Context;
 import android.content.Intent;
 import android.net.Uri;
 import android.os.Bundle;
@@ -25,7 +22,6 @@
 
 import com.example.asasfans.AsApplication;
 import com.example.asasfans.R;
-import com.example.asasfans.ui.customcomponent.MyDialog;
 import com.example.asasfans.ui.customcomponent.RecyclerViewDecoration;
 import com.example.asasfans.ui.main.adapter.ToolsAdapter;
 import com.google.android.material.appbar.AppBarLayout;
@@ -105,30 +101,30 @@
         textView.setOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View v) {
-                toolsAdapter.setShowBox();
-                toolsAdapter.notifyDataSetChanged();
-                if (!toolsAdapter.isShowBox()){
-                    new MyDialog(getActivity(), R.style.mdialog, new MyDialog.OncloseListener() {
-                        @Override
-                        public void onClick(boolean confirm) {
-                            //设置重启后生效，但是自动重启速度慢，如果用户在自动重启的过程中之间点开应用会有神奇的bug
-                            if (confirm){
-                                Intent intent = getActivity().getPackageManager()
-                                        .getLaunchIntentForPackage(getActivity().getApplication().getPackageName());
-                                PendingIntent restartIntent = PendingIntent.getActivity(getActivity().getApplicationContext(), 0, intent, 0);
-                                AlarmManager mgr = (AlarmManager)getActivity().getSystemService(Context.ALARM_SERVICE);
-                                mgr.set(AlarmManager.RTC, System.currentTimeMillis() + 100, restartIntent); // 1秒钟后重启应用
-                                System.exit(0);
-                            }
-                        }
-                    }).show();
-//                    Toast.makeText(getContext(),"手动重启以变更底部栏哦",Toast.LENGTH_SHORT).show();
-                    textView.setBackgroundColor(getActivity().getResources().getColor(R.color.tab_text_normal));
-                    textView.setTextColor(getActivity().getResources().getColor(R.color.cardWhite));
-                }else {
-                    textView.setBackgroundColor(getActivity().getResources().getColor(R.color.backgroundGray));
-                    textView.setTextColor(getActivity().getResources().getColor(R.color.cardBlack));
-                }
+//                toolsAdapter.setShowBox();
+//                toolsAdapter.notifyDataSetChanged();
+//                if (!toolsAdapter.isShowBox()){
+//                    new MyDialog(getActivity(), R.style.mdialog, new MyDialog.OncloseListener() {
+//                        @Override
+//                        public void onClick(boolean confirm) {
+//                            //设置重启后生效，但是自动重启速度慢，如果用户在自动重启的过程中之间点开应用会有神奇的bug
+//                            if (confirm){
+//                                Intent intent = getActivity().getPackageManager()
+//                                        .getLaunchIntentForPackage(getActivity().getApplication().getPackageName());
+//                                PendingIntent restartIntent = PendingIntent.getActivity(getActivity().getApplicationContext(), 0, intent, 0);
+//                                AlarmManager mgr = (AlarmManager)getActivity().getSystemService(Context.ALARM_SERVICE);
+//                                mgr.set(AlarmManager.RTC, System.currentTimeMillis() + 100, restartIntent); // 1秒钟后重启应用
+//                                System.exit(0);
+//                            }
+//                        }
+//                    }).show();
+////                    Toast.makeText(getContext(),"手动重启以变更底部栏哦",Toast.LENGTH_SHORT).show();
+//                    textView.setBackgroundColor(getActivity().getResources().getColor(R.color.tab_text_normal));
+//                    textView.setTextColor(getActivity().getResources().getColor(R.color.cardWhite));
+//                }else {
+//                    textView.setBackgroundColor(getActivity().getResources().getColor(R.color.backgroundGray));
+//                    textView.setTextColor(getActivity().getResources().getColor(R.color.cardBlack));
+//                }
             }
         });
         View emptyView = view.findViewById(R.id.emptyViewTools);
Index: app/src/main/java/com/example/asasfans/ui/main/fragment/ImageFanArtFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.asasfans.ui.main.fragment;\r\n\r\nimport static com.example.asasfans.ui.main.fragment.BiliVideoFragment.GET_DATA_SUCCESS;\r\nimport static com.example.asasfans.ui.main.fragment.BiliVideoFragment.NETWORK_ERROR;\r\nimport static com.example.asasfans.util.ViewUtilsKt.setMargin;\r\n\r\nimport android.graphics.Rect;\r\nimport android.os.Bundle;\r\nimport android.os.Handler;\r\nimport android.os.Looper;\r\nimport android.os.Message;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.AdapterView;\r\nimport android.widget.ArrayAdapter;\r\nimport android.widget.Spinner;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.annotation.Nullable;\r\nimport androidx.coordinatorlayout.widget.CoordinatorLayout;\r\nimport androidx.fragment.app.Fragment;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\nimport androidx.recyclerview.widget.StaggeredGridLayoutManager;\r\n\r\nimport com.example.asasfans.AsApplication;\r\nimport com.example.asasfans.R;\r\nimport com.example.asasfans.data.ImageDataBean;\r\nimport com.example.asasfans.ui.main.adapter.ImageAdapter;\r\nimport com.google.android.material.appbar.AppBarLayout;\r\nimport com.google.gson.Gson;\r\nimport com.google.gson.GsonBuilder;\r\nimport com.google.gson.reflect.TypeToken;\r\nimport com.scwang.smart.refresh.footer.BallPulseFooter;\r\nimport com.scwang.smart.refresh.footer.ClassicsFooter;\r\nimport com.scwang.smart.refresh.header.BezierRadarHeader;\r\nimport com.scwang.smart.refresh.header.MaterialHeader;\r\nimport com.scwang.smart.refresh.layout.api.RefreshLayout;\r\nimport com.scwang.smart.refresh.layout.listener.OnLoadMoreListener;\r\nimport com.scwang.smart.refresh.layout.listener.OnRefreshListener;\r\n\r\nimport java.io.IOException;\r\nimport java.security.SecureRandom;\r\nimport java.security.cert.CertificateException;\r\nimport java.security.cert.X509Certificate;\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\nimport java.util.concurrent.ExecutorService;\r\nimport java.util.concurrent.Executors;\r\nimport java.util.concurrent.TimeUnit;\r\n\r\nimport javax.net.ssl.HostnameVerifier;\r\nimport javax.net.ssl.SSLContext;\r\nimport javax.net.ssl.SSLSession;\r\nimport javax.net.ssl.SSLSocketFactory;\r\nimport javax.net.ssl.TrustManager;\r\nimport javax.net.ssl.X509TrustManager;\r\n\r\nimport okhttp3.Call;\r\nimport okhttp3.OkHttpClient;\r\nimport okhttp3.Request;\r\nimport okhttp3.Response;\r\n\r\n/**\r\n * @author: akari\r\n * @date: 2022/3/8\r\n * @description 图片加载页面\r\n */\r\npublic class ImageFanArtFragment extends Fragment {\r\n    public static int divider = 15;\r\n    private ImageAdapter imageAdapter;\r\n    private ImageUrl imageUrl;\r\n    private View view;\r\n    private List<ImageDataBean> imageRecyclerViewData = new ArrayList<>();\r\n    private RecyclerView recyclerView;\r\n    private RefreshLayout refreshLayout;\r\n    private String[] order = {\"最新发布\", \"B站热门\"};\r\n    private String[] date = {\"无榜单\", \"日榜\", \"周榜\", \"月榜\"};\r\n    private String[] tag = {\"全部TAG\", \"A-SOUL\", \"向晚AvA\", \"贝拉Bella\", \"珈乐Carol\", \"嘉然Diana\",\r\n                        \"乃琳Queen\", \"贝贝珈\", \"乃贝\", \"嘉晚饭\", \"琳狼\", \"珈特琳\", \"果丹皮\", \"琳嘉女孩\"};\r\n    private enum sort{\r\n        pubdateImage(3), biliHotImage(4);\r\n        private int value = 3;\r\n        sort(int value) {\r\n            this.value = value;\r\n        }\r\n        public int value() {\r\n            return this.value;\r\n        }\r\n    }\r\n    private enum part{\r\n        allTag(0), asoul(1712619), ava(9221368), bella(195579), carol(17872743),\r\n        diana(17520266), queen(17839311), bbj(18207897), nb(18843054), jwf(17895874),\r\n        ll(21134102), jtl(18579605), gdp(1058727), ljnh(20064249);\r\n        private int value = 0;\r\n        part(int value) {\r\n            this.value = value;\r\n        }\r\n        public int value() {\r\n            return this.value;\r\n        }\r\n    }\r\n\r\n    private final ExecutorService cachedThreadPool = Executors.newCachedThreadPool();\r\n    private boolean isFirstOrder = true;\r\n    private boolean isFirstDate = true;\r\n    private boolean isFirstTag = true;\r\n\r\n\r\n    public static ImageFanArtFragment newInstance() {\r\n\r\n        Bundle args = new Bundle();\r\n\r\n        ImageFanArtFragment fragment = new ImageFanArtFragment();\r\n        fragment.setArguments(args);\r\n        return fragment;\r\n    }\r\n\r\n    @Override\r\n    public void onCreate(@Nullable Bundle savedInstanceState) {\r\n\r\n        super.onCreate(savedInstanceState);\r\n    }\r\n\r\n\r\n    @Nullable\r\n    @Override\r\n    public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {\r\n        view = inflater.inflate(R.layout.fragment_fan_art_image, container, false);\r\n        initImageAdapter();\r\n        initSpinner();\r\n\r\n        imageUrl = new ImageUrl();\r\n        refreshLayout = (RefreshLayout)view.findViewById(R.id.fan_art_image_refreshLayout);\r\n        refreshLayout.setRefreshHeader(new MaterialHeader(getActivity()).setColorSchemeResources(R.color.tab_text_normal,R.color.cardWhite,R.color.cardWhite));\r\n        refreshLayout.setRefreshFooter(new ClassicsFooter(getActivity()));\r\n        refreshLayout.setDragRate(1f);\r\n        refreshLayout.setEnableAutoLoadMore(true);\r\n        refreshLayout.setHeaderTriggerRate((float) 0.3);\r\n        refreshLayout.setOnRefreshListener(new OnRefreshListener() {\r\n            @Override\r\n            public void onRefresh(@NonNull RefreshLayout refreshLayout) {\r\n                imageRecyclerViewData.clear();\r\n                imageAdapter.notifyDataSetChanged();\r\n                cachedThreadPool.execute(networkTask.setParam(imageUrl.getUrl()));\r\n                refreshLayout.finishRefresh();\r\n            }\r\n        });\r\n        refreshLayout.setOnLoadMoreListener(new OnLoadMoreListener() {\r\n            @Override\r\n            public void onLoadMore(@NonNull RefreshLayout refreshLayout) {\r\n                imageUrl.pageSelfAdd();\r\n                cachedThreadPool.execute(networkTask.setParam(imageUrl.getUrl()));\r\n                refreshLayout.finishLoadMore(100/*,false*/);\r\n            }\r\n        });\r\n\r\n        imageRecyclerViewData.clear();\r\n        imageAdapter.notifyDataSetChanged();\r\n        cachedThreadPool.execute(networkTask.setParam(imageUrl.getUrl()));\r\n//        cachedThreadPool.execute(networkTask.setParam(imageUrl.getUrl()));\r\n//        new Thread(networkTask.setParam(\"https://api.asoul.cloud:8000/getPic?page=1&sort=3&part=0&rank=0&type=1\")).start();\r\n        View emptyView = view.findViewById(R.id.emptyViewFanArt);\r\n        CoordinatorLayout.LayoutParams layoutParams = new CoordinatorLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, AsApplication.Companion.getStatusBarHeight());\r\n        emptyView.setLayoutParams(layoutParams);\r\n        AppBarLayout appBarLayout = view.findViewById(R.id.appBar);\r\n        setMargin(appBarLayout, 0, AsApplication.Companion.getStatusBarHeight(),0,0);\r\n        return view;\r\n    }\r\n\r\n    private void initImageAdapter(){\r\n        imageAdapter = new ImageAdapter(getActivity(), imageRecyclerViewData.size(), imageRecyclerViewData);\r\n        recyclerView = view.findViewById(R.id.fan_art_image_recyclerview);\r\n        setMargin(recyclerView, 0, 0, 0, AsApplication.Companion.getStatusBarHeight());\r\n        recyclerView.setLayoutManager(new StaggeredGridLayoutManager(2, StaggeredGridLayoutManager.VERTICAL));\r\n        RecyclerView.ItemDecoration gridItemDecoration = new RecyclerView.ItemDecoration() {\r\n            @Override\r\n            public void getItemOffsets(@NonNull Rect outRect, @NonNull View view, RecyclerView parent, @NonNull RecyclerView.State state) {\r\n                StaggeredGridLayoutManager.LayoutParams layoutParams = (StaggeredGridLayoutManager.LayoutParams) view.getLayoutParams();\r\n                int spanIndex = layoutParams.getSpanIndex();\r\n                int position = parent.getChildAdapterPosition(view);\r\n                outRect.bottom = divider;\r\n                if (position == 0 || position == 1) {\r\n                    outRect.top = divider * 2;\r\n                } else {\r\n                    outRect.top = 0;\r\n                }\r\n                if (spanIndex % 2 == 0) {//偶数项\r\n                    outRect.left = divider;\r\n                    outRect.right = divider / 2;\r\n                } else {\r\n                    outRect.left = divider / 2;\r\n                    outRect.right = divider;\r\n                }\r\n            }\r\n        };\r\n        recyclerView.addItemDecoration(gridItemDecoration);\r\n        recyclerView.setAdapter(imageAdapter);\r\n    }\r\n\r\n    private void initSpinner() {\r\n        //声明一个下拉列表的数组适配器\r\n        ArrayAdapter<String> starAdapterOrder = new ArrayAdapter<String>(this.getContext(), R.layout.item_for_custom_spinner, order);\r\n        ArrayAdapter<String> starAdapterDate = new ArrayAdapter<String>(this.getContext(), R.layout.item_for_custom_spinner, date);\r\n        ArrayAdapter<String> starAdapterTag = new ArrayAdapter<String>(this.getContext(), R.layout.item_for_custom_spinner, tag);\r\n        //设置数组适配器的布局样式\r\n//        starAdapter.setDropDownViewResource(R.layout.spinner_item_select);\r\n        //从布局文件中获取下拉框\r\n        Spinner order = view.findViewById(R.id.fragment_fan_art_spinner_order);\r\n        Spinner date = view.findViewById(R.id.fragment_fan_art_spinner_date);\r\n        Spinner tag = view.findViewById(R.id.fragment_fan_art_spinner_tag);\r\n        //设置下拉框的标题，不设置就没有难看的标题了\r\n//        sp.setPrompt(\"请选择配送方式\");\r\n        //设置下拉框的数组适配器\r\n        order.setAdapter(starAdapterOrder);\r\n        date.setAdapter(starAdapterDate);\r\n        tag.setAdapter(starAdapterTag);\r\n        //设置下拉框默认的显示第一项\r\n        order.setSelection(-1, true);\r\n        date.setSelection(-1, true);\r\n        tag.setSelection(-1, true);\r\n\r\n        //给下拉框设置选择监听器，一旦用户选中某一项，就触发监听器的onItemSelected方法\r\n        order.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {\r\n            @Override\r\n            public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {\r\n                if (isFirstOrder){\r\n                    isFirstOrder = false;\r\n                }else {\r\n                    switch (position){\r\n                        case 0:\r\n                            imageUrl.setPage(1);\r\n                            imageUrl.setSort(sort.pubdateImage.value());\r\n                            imageUrl.setCtime(0);\r\n                            break;\r\n                        case 1:\r\n                            imageUrl.setPage(1);\r\n                            imageUrl.setSort(sort.biliHotImage.value());\r\n                            imageUrl.setCtime(0);\r\n                            break;\r\n                    }\r\n                    imageRecyclerViewData.clear();\r\n                    imageAdapter.notifyDataSetChanged();\r\n                    cachedThreadPool.execute(networkTask.setParam(imageUrl.getUrl()));\r\n                }\r\n            }\r\n\r\n            @Override\r\n            public void onNothingSelected(AdapterView<?> parent) {\r\n\r\n            }\r\n        });\r\n        date.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {\r\n            @Override\r\n            public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {\r\n                if (isFirstDate){\r\n                    isFirstDate = false;\r\n                }else {\r\n                    switch (position) {\r\n                        case 0:\r\n                            imageUrl.setRank(0);\r\n                            imageUrl.setCtime(0);\r\n                            break;\r\n                        case 1:\r\n                            imageUrl.setRank(1);\r\n                            imageUrl.setCtime(System.currentTimeMillis());\r\n                            break;\r\n                        case 2:\r\n                            imageUrl.setRank(2);\r\n                            imageUrl.setSort(sort.biliHotImage.value());\r\n                            imageUrl.setCtime(0);\r\n                            break;\r\n                        case 3:\r\n                            imageUrl.setRank(3);\r\n                            imageUrl.setSort(sort.biliHotImage.value());\r\n                            imageUrl.setCtime(0);\r\n                            break;\r\n                    }\r\n                    imageRecyclerViewData.clear();\r\n                    imageAdapter.notifyDataSetChanged();\r\n                    cachedThreadPool.execute(networkTask.setParam(imageUrl.getUrl()));\r\n                }\r\n            }\r\n\r\n            @Override\r\n            public void onNothingSelected(AdapterView<?> parent) {\r\n\r\n            }\r\n        });\r\n        tag.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {\r\n            @Override\r\n            public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {\r\n                if (isFirstTag){\r\n                    isFirstTag = false;\r\n                }else {\r\n                    switch (position) {\r\n                        case 0:\r\n                            imageUrl.setPart(part.allTag.value());\r\n                            break;\r\n                        case 1:\r\n                            imageUrl.setPart(part.asoul.value());\r\n                            break;\r\n                        case 2:\r\n                            imageUrl.setPart(part.ava.value());\r\n                            break;\r\n                        case 3:\r\n                            imageUrl.setPart(part.bella.value());\r\n                            break;\r\n                        case 4:\r\n                            imageUrl.setPart(part.carol.value());\r\n                            break;\r\n                        case 5:\r\n                            imageUrl.setPart(part.diana.value());\r\n                            break;\r\n                        case 6:\r\n                            imageUrl.setPart(part.queen.value());\r\n                            break;\r\n                        case 7:\r\n                            imageUrl.setPart(part.bbj.value());\r\n                            break;\r\n                        case 8:\r\n                            imageUrl.setPart(part.nb.value());\r\n                            break;\r\n                        case 9:\r\n                            imageUrl.setPart(part.jwf.value());\r\n                            break;\r\n                        case 10:\r\n                            imageUrl.setPart(part.ll.value());\r\n                            break;\r\n                        case 11:\r\n                            imageUrl.setPart(part.jtl.value());\r\n                            break;\r\n                        case 12:\r\n                            imageUrl.setPart(part.gdp.value());\r\n                            break;\r\n                        case 13:\r\n                            imageUrl.setPart(part.ljnh.value());\r\n                            break;\r\n                    }\r\n                    imageRecyclerViewData.clear();\r\n                    imageAdapter.notifyDataSetChanged();\r\n                    cachedThreadPool.execute(networkTask.setParam(imageUrl.getUrl()));\r\n                }\r\n            }\r\n\r\n            @Override\r\n            public void onNothingSelected(AdapterView<?> parent) {\r\n\r\n            }\r\n        });\r\n        imageRecyclerViewData.clear();\r\n        imageAdapter.notifyDataSetChanged();\r\n    }\r\n\r\n    private Handler handler = new Handler(Looper.getMainLooper()) {\r\n        @Override\r\n        public void handleMessage(@NonNull Message msg) {\r\n            super.handleMessage(msg);\r\n            Bundle data = msg.getData();\r\n            String val = data.getString(\"dataBean\");\r\n            Gson gson = new GsonBuilder().serializeNulls().create();\r\n            switch (msg.what) {\r\n                case GET_DATA_SUCCESS:\r\n                    if (val.equals(\"{\\\"code\\\": 1, \\\"message\\\": \\\"\\\\u6ca1\\\\u6709\\\\u66f4\\\\u591a\\\\u6570\\\\u636e\\\"}\")){\r\n                        imageUrl.pageSelfDecrement();\r\n                        Toast.makeText(getActivity(),\"后面没有了~\",Toast.LENGTH_SHORT).show();\r\n//                        Log.i(\"GET_DATA_SUCCESS\", val);\r\n                        break;\r\n                    }else {\r\n                        List<ImageDataBean> imageDataBean = gson.fromJson(val, new TypeToken<List<ImageDataBean>>() {}.getType());\r\n//                        Log.i(\"GET_DATA_SUCCESS:ImageDataBean\", val);\r\n                        int pastSize = imageRecyclerViewData.size();\r\n                        imageRecyclerViewData.addAll(imageDataBean);\r\n                        if (imageRecyclerViewData.size() == 0){\r\n                            Toast.makeText(getActivity(),\"什么都没有了~\",Toast.LENGTH_SHORT).show();\r\n                        }\r\n                        imageAdapter.notifyItemRangeChanged(pastSize, imageDataBean.size());\r\n                    }\r\n                    break;\r\n                case NETWORK_ERROR:\r\n//                    refreshLayout.finishLoadMore(false);\r\n                    break;\r\n            }\r\n        }\r\n    };\r\n    private MyRunnable networkTask = new MyRunnable() {\r\n        String url;\r\n        @Override\r\n        public MyRunnable setParam(String param) {\r\n            url = param;\r\n            return this;\r\n        }\r\n\r\n        @Override\r\n        public void run() {\r\n            Message msg = new Message();\r\n            Bundle data = new Bundle();\r\n            // TODO\r\n            // 在这里进行 http request.网络请求相关操作\r\n            OkHttpClient client;\r\n\r\n            client = new OkHttpClient.Builder().hostnameVerifier(new HostnameVerifier() {\r\n                @Override\r\n                public boolean verify(String hostname, SSLSession session) {\r\n                    return true;\r\n                }\r\n            }).sslSocketFactory(createSSLSocketFactory(), new X509TrustManager() {//忽视https网站的安全证书\r\n                @Override\r\n                public void checkClientTrusted(X509Certificate[] chain, String authType) throws CertificateException {\r\n\r\n                }\r\n\r\n                @Override\r\n                public void checkServerTrusted(X509Certificate[] chain, String authType) throws CertificateException {\r\n\r\n                }\r\n\r\n                @Override\r\n                public X509Certificate[] getAcceptedIssuers() {\r\n                    return new X509Certificate[0];\r\n                }\r\n            }).readTimeout(5, TimeUnit.SECONDS).build();\r\n\r\n            Request request = new Request.Builder().url(url)\r\n                    .get().build();\r\n            Call call = client.newCall(request);\r\n            Response response = null;\r\n            String tmp;\r\n            try {\r\n                response = call.execute();\r\n                tmp = response.body().string();\r\n                msg.what = GET_DATA_SUCCESS;\r\n                data.putString(\"dataBean\", tmp);\r\n//                Log.i(\"ImageDataBean\", tmp);\r\n            } catch (IOException e) {\r\n                e.printStackTrace();\r\n//                page--;\r\n                handler.sendEmptyMessage(NETWORK_ERROR);\r\n            }\r\n            msg.setData(data);\r\n            handler.sendMessage(msg);\r\n        }\r\n    };\r\n\r\n    private SSLSocketFactory createSSLSocketFactory() {\r\n        SSLSocketFactory ssfFactory = null;\r\n        try {\r\n            SSLContext sc = SSLContext.getInstance(\"TLS\");\r\n            sc.init(null, new TrustManager[]{new TrustAllCerts()}, new SecureRandom());\r\n            ssfFactory = sc.getSocketFactory();\r\n        } catch (Exception e) {\r\n        }\r\n\r\n        return ssfFactory;\r\n    }\r\n\r\n    public class TrustAllCerts implements X509TrustManager {\r\n        @Override\r\n        public void checkClientTrusted(X509Certificate[] chain, String authType) throws CertificateException {\r\n        }\r\n\r\n        @Override\r\n        public void checkServerTrusted(X509Certificate[] chain, String authType) throws CertificateException {\r\n        }\r\n\r\n        @Override\r\n        public X509Certificate[] getAcceptedIssuers() {\r\n            return new X509Certificate[0];\r\n        }\r\n    }\r\n\r\n    public interface MyRunnable extends Runnable {\r\n        public MyRunnable setParam(String param);\r\n    }\r\n\r\n    public class ImageUrl{\r\n        private int page;\r\n        private int sort;\r\n        private int part;\r\n        private int rank;\r\n        private long ctime;\r\n        private String url;\r\n\r\n        public ImageUrl(){\r\n            this.page = 1;\r\n            this.sort = 3;\r\n            this.part = 0;\r\n            this.rank = 0;\r\n            this.ctime = 0;\r\n        }\r\n\r\n        public ImageUrl(int page, int sort, int part, int rank, int ctime) {\r\n            this.page = page;\r\n            this.sort = sort;\r\n            this.part = part;\r\n            this.rank = rank;\r\n            this.ctime = ctime;\r\n        }\r\n\r\n        public String getUrl() {\r\n            url = \"https://api.asoul.cloud:8000/getPic?page=\" + page +\r\n                    \"&sort=\" + sort +\r\n                    \"&part=\" + part +\r\n                    \"&rank=\" + rank +\r\n                    \"&ctime=\" + ctime;\r\n            return url;\r\n        }\r\n\r\n        public void setUrl(String url) {\r\n            this.url = url;\r\n        }\r\n\r\n        public int getPage() {\r\n            return page;\r\n        }\r\n\r\n        public void setPage(int page) {\r\n            this.page = page;\r\n        }\r\n\r\n        public void pageSelfAdd() {\r\n            this.page++;\r\n        }\r\n\r\n        public void pageSelfDecrement() {\r\n            this.page--;\r\n        }\r\n\r\n        public int getSort() {\r\n            return sort;\r\n        }\r\n\r\n        public void setSort(int sort) {\r\n            this.sort = sort;\r\n        }\r\n\r\n        public int getPart() {\r\n            return part;\r\n        }\r\n\r\n        public void setPart(int part) {\r\n            this.part = part;\r\n        }\r\n\r\n        public int getRank() {\r\n            return rank;\r\n        }\r\n\r\n        public void setRank(int rank) {\r\n            this.rank = rank;\r\n        }\r\n\r\n        public long getCtime() {\r\n            return ctime;\r\n        }\r\n\r\n        public void setCtime(long ctime) {\r\n            this.ctime = ctime;\r\n        }\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/asasfans/ui/main/fragment/ImageFanArtFragment.java b/app/src/main/java/com/example/asasfans/ui/main/fragment/ImageFanArtFragment.java
--- a/app/src/main/java/com/example/asasfans/ui/main/fragment/ImageFanArtFragment.java	
+++ b/app/src/main/java/com/example/asasfans/ui/main/fragment/ImageFanArtFragment.java	
@@ -32,9 +32,7 @@
 import com.google.gson.Gson;
 import com.google.gson.GsonBuilder;
 import com.google.gson.reflect.TypeToken;
-import com.scwang.smart.refresh.footer.BallPulseFooter;
 import com.scwang.smart.refresh.footer.ClassicsFooter;
-import com.scwang.smart.refresh.header.BezierRadarHeader;
 import com.scwang.smart.refresh.header.MaterialHeader;
 import com.scwang.smart.refresh.layout.api.RefreshLayout;
 import com.scwang.smart.refresh.layout.listener.OnLoadMoreListener;
Index: app/src/main/java/com/example/asasfans/ui/main/fragment/BiliVideoFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.asasfans.ui.main.fragment;\r\n\r\nimport android.database.Cursor;\r\nimport android.database.sqlite.SQLiteDatabase;\r\nimport android.os.Bundle;\r\nimport android.os.Handler;\r\nimport android.os.Message;\r\nimport android.util.Log;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.view.animation.Animation;\r\nimport android.view.animation.AnimationUtils;\r\nimport android.widget.ImageView;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.annotation.Nullable;\r\nimport androidx.fragment.app.Fragment;\r\nimport androidx.recyclerview.widget.LinearLayoutManager;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\n\r\nimport com.example.asasfans.R;\r\nimport com.example.asasfans.data.AdvancedSearchDataBean;\r\nimport com.example.asasfans.data.DBOpenHelper;\r\nimport com.example.asasfans.data.VideoDataStoragedInMemory;\r\nimport com.example.asasfans.ui.customcomponent.RecyclerViewDecoration;\r\nimport com.example.asasfans.ui.main.adapter.PubdateVideoAdapter;\r\nimport com.example.asasfans.util.ApiConfig;\r\nimport com.google.gson.Gson;\r\nimport com.scwang.smart.refresh.footer.BallPulseFooter;\r\nimport com.scwang.smart.refresh.footer.ClassicsFooter;\r\nimport com.scwang.smart.refresh.header.BezierRadarHeader;\r\nimport com.scwang.smart.refresh.header.MaterialHeader;\r\nimport com.scwang.smart.refresh.layout.api.RefreshLayout;\r\nimport com.scwang.smart.refresh.layout.listener.OnLoadMoreListener;\r\nimport com.scwang.smart.refresh.layout.listener.OnRefreshListener;\r\n\r\nimport java.io.IOException;\r\nimport java.util.ArrayList;\r\nimport java.util.Arrays;\r\nimport java.util.List;\r\nimport java.util.concurrent.ExecutorService;\r\nimport java.util.concurrent.Executors;\r\nimport java.util.concurrent.TimeUnit;\r\n\r\nimport okhttp3.Call;\r\nimport okhttp3.OkHttpClient;\r\nimport okhttp3.Request;\r\nimport okhttp3.Response;\r\n\r\n/**\r\n * @author: akari\r\n * @date: 2022/3/13\r\n * @description $\r\n */\r\npublic class BiliVideoFragment extends Fragment {\r\n//    private String VideoUrl;\r\n    public static final int GET_DATA_SUCCESS = 1;\r\n    public static final int NETWORK_ERROR = 2;\r\n    private List<VideoDataStoragedInMemory> videoDataStoragedInMemoryList = new ArrayList<>();\r\n    private List<AdvancedSearchDataBean.DataBean.ResultBean> resultBeans = new ArrayList<>();\r\n    public PubdateVideoAdapter pubdateVideoAdapter;\r\n    private RecyclerView recyclerView;\r\n    private int page = 1;\r\n    private RefreshLayout refreshLayout;\r\n    private ExecutorService cachedThreadPool =  Executors.newCachedThreadPool();;\r\n    private boolean firstOnCreateView = true;\r\n    private ApiConfig apiConfig;\r\n    private ImageView to_top;\r\n    private DBOpenHelper dbOpenHelper;\r\n    private SQLiteDatabase db;\r\n\r\n\r\n    public static BiliVideoFragment newInstance(String url) {\r\n\r\n        Bundle args = new Bundle();\r\n        args.putString(\"VideoUrl\", url);\r\n        BiliVideoFragment fragment = new BiliVideoFragment();\r\n        fragment.setArguments(args);\r\n        return fragment;\r\n    }\r\n\r\n    @Override\r\n    public void onCreate(@Nullable Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n//        this.VideoUrl = getArguments().getString(\"VideoUrl\");\r\n        Log.i(\"VideoUrl\", getArguments().getString(\"VideoUrl\"));\r\n        apiConfig = new ApiConfig().fromString(getArguments().getString(\"VideoUrl\"));\r\n        Log.i(\"apiConfig.getUrl()\", apiConfig.getUrl());\r\n\r\n    }\r\n\r\n    public void refreshing(){\r\n        refreshLayout.autoRefreshAnimationOnly();\r\n    }\r\n\r\n    @Nullable\r\n    @Override\r\n    public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {\r\n        View view = inflater.inflate(R.layout.fragment_main, container, false);\r\n        Animation fadeIn = AnimationUtils.loadAnimation(getActivity(), R.anim.fadein);\r\n\r\n        recyclerView = view.findViewById(R.id.recyclerview);\r\n        refreshLayout = (RefreshLayout)view.findViewById(R.id.refreshLayout);\r\n        refreshLayout.setRefreshHeader(new MaterialHeader(getActivity()).setColorSchemeResources(R.color.tab_text_normal,R.color.cardWhite,R.color.cardWhite));\r\n        refreshLayout.setRefreshFooter(new ClassicsFooter(getActivity()));\r\n        refreshLayout.setEnableAutoLoadMore(true);\r\n        refreshLayout.setDisableContentWhenRefresh(false);//是否在刷新的时候禁止列表的操作\r\n        refreshLayout.setDisableContentWhenLoading(false);//是否在加载的时候禁止列表的操作\r\n        refreshLayout.setEnableLoadMoreWhenContentNotFull(true);\r\n\r\n        to_top = view.findViewById(R.id.to_top);\r\n\r\n        //设置RecyclerView滑动监听器 addOnScrollListener()\r\n        recyclerView.addOnScrollListener(new RecyclerView.OnScrollListener() {\r\n            @Override\r\n            public void onScrollStateChanged(RecyclerView recyclerView, int newState) {\r\n                super.onScrollStateChanged(recyclerView, newState);\r\n                //获得recyclerView的线性布局管理器\r\n                LinearLayoutManager manager = (LinearLayoutManager) recyclerView.getLayoutManager();\r\n                //获取到第一个item的显示的下标  不等于0表示第一个item处于不可见状态 说明列表没有滑动到顶部 显示回到顶部按钮\r\n                int firstVisibleItemPosition = manager.findFirstVisibleItemPosition();\r\n                // 当不滚动时，也就是停止滑动的情况下\r\n                if (newState == RecyclerView.SCROLL_STATE_IDLE) {\r\n                    // 判断是否滚动超过一屏\r\n                    if (firstVisibleItemPosition == 0) {\r\n                        //如果没有超过一屏，隐藏图标\r\n                        to_top.setVisibility(View.GONE);\r\n                    } else {\r\n                        //相反如果超过了一屏幕则显示回到顶部按钮\r\n                        to_top.startAnimation(fadeIn);\r\n                        to_top.setVisibility(View.VISIBLE);\r\n                        to_top.startAnimation(fadeIn);\r\n                    }\r\n                    //获取RecyclerView滑动时候的状态\r\n                } else if (newState == RecyclerView.SCROLL_STATE_DRAGGING) {\r\n                    //如果Recyclerview是拖动中的状态隐藏按钮\r\n                    to_top.setVisibility(View.GONE);\r\n                }\r\n            }\r\n        });\r\n\r\n        to_top.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                recyclerView.smoothScrollToPosition(0);\r\n            }\r\n        });\r\n\r\n        pubdateVideoAdapter = new PubdateVideoAdapter(getActivity(), resultBeans, resultBeans.size());\r\n        recyclerView.setAdapter(pubdateVideoAdapter);\r\n        LinearLayoutManager linearLayoutManager = new LinearLayoutManager(getActivity(),LinearLayoutManager.VERTICAL,false);\r\n//        linearLayoutManager.setStackFromEnd(true);//列表再底部开始展示，反转后由上面开始展示\r\n//        linearLayoutManager.setReverseLayout(true);//列表翻转\r\n        linearLayoutManager.setInitialPrefetchItemCount(2);\r\n        recyclerView.setLayoutManager(linearLayoutManager);\r\n        recyclerView.addItemDecoration(new RecyclerViewDecoration(12, 12));\r\n        refreshLayout.setOnRefreshListener(new OnRefreshListener() {\r\n            @Override\r\n            public void onRefresh(@NonNull RefreshLayout refreshLayout) {\r\n                apiConfig.setPage(1);\r\n                resultBeans.clear();\r\n                pubdateVideoAdapter.notifyDataSetChanged();\r\n                try {\r\n                    cachedThreadPool.execute(networkTask.setParam(apiConfig.getUrl()));\r\n                }catch (Exception e){\r\n                    e.printStackTrace();\r\n                    Toast.makeText(getActivity(),\"刷新失败，再试一次\",Toast.LENGTH_SHORT).show();\r\n                }\r\n\r\n                refreshLayout.finishRefresh(100/*,false*/);\r\n            }\r\n        });\r\n        refreshLayout.setOnLoadMoreListener(new OnLoadMoreListener() {\r\n            @Override\r\n            public void onLoadMore(@NonNull RefreshLayout refreshLayout) {\r\n                apiConfig.pageSelfAdd();\r\n                try {\r\n                    cachedThreadPool.execute(networkTask.setParam(apiConfig.getUrl()));\r\n                }catch (Exception e){\r\n                    e.printStackTrace();\r\n                    apiConfig.pageSelfDecrement();\r\n                    Toast.makeText(getActivity(),\"加载失败，再试一次\",Toast.LENGTH_SHORT).show();\r\n                }\r\n                refreshLayout.finishLoadMore(100/*,false*/);\r\n            }\r\n        });\r\n        if (firstOnCreateView) {\r\n            cachedThreadPool.execute(networkTask.setParam(apiConfig.getUrl()));\r\n            firstOnCreateView = false;\r\n        }\r\n        return view;\r\n    }\r\n    private Handler handler = new Handler() {\r\n        @Override\r\n        public void handleMessage(Message msg) {\r\n            super.handleMessage(msg);\r\n            Bundle data = msg.getData();\r\n            String val = data.getString(\"AdvancedSearchDataBean\");\r\n            Log.i(\"BiliVideoFragment:AdvancedSearchDataBean\", \"请求结果为-->\" + val);\r\n            Gson gson =new Gson();\r\n            switch (msg.what){\r\n                case GET_DATA_SUCCESS:\r\n                    if (val.startsWith(\"{\\\"code\\\":0,\\\"message\\\":\\\"ok\\\"\")) {\r\n                        AdvancedSearchDataBean advancedSearchDataBean = gson.fromJson(val, AdvancedSearchDataBean.class);\r\n                        List<AdvancedSearchDataBean.DataBean.ResultBean> allResultBeans = advancedSearchDataBean.getData().getResult();\r\n\r\n//                        List<List<String>> hVideosBvid = new ArrayList<>();\r\n//                        hVideosBvid = hPubdateVideoBean.getData().getResult();\r\n                        int PastSize = resultBeans.size();\r\n                        dbOpenHelper = new DBOpenHelper(getActivity(),\r\n                                \"blackList.db\", null, DBOpenHelper.DB_VERSION);\r\n                        db = dbOpenHelper.getReadableDatabase();\r\n                        Cursor cursor = db.query(\"blackTag\",null,null,null,null,null,null);\r\n                        List<String> blackTag = new ArrayList<>();\r\n                        if (cursor.getCount() > 0) {\r\n                            while (cursor.moveToNext()) {\r\n                                blackTag.add(cursor.getString(cursor.getColumnIndex(\"tag\")));\r\n                                Log.i(\"cursor.getCount()\", cursor.getString(cursor.getColumnIndex(\"tag\")));\r\n                            }\r\n                        }\r\n                        cursor.close();\r\n                        int addVideoCount = 0;\r\n                        for (int i = 0; i < allResultBeans.size(); i++){\r\n                            List currentTag = Arrays.asList(PubdateVideoAdapter.tagFormat(allResultBeans.get(i).getTag()));\r\n                            List<String> tmpBlackTag = new ArrayList<>();\r\n                            tmpBlackTag.addAll(blackTag);\r\n                            tmpBlackTag.retainAll(currentTag);\r\n                            boolean tmp = false;\r\n                            if (tmpBlackTag.size() > 0){\r\n                                tmp = true;\r\n                            }\r\n                            if (!searchInSQL(db, allResultBeans.get(i).getBvid(), \"blackBvid\", \"bvid\") &&\r\n                                    !searchInSQL(db, String.valueOf(allResultBeans.get(i).getMid()), \"blackMid\", \"mid\") &&\r\n                                    !tmp) {\r\n                                resultBeans.add(allResultBeans.get(i));\r\n                                addVideoCount++;\r\n                            }\r\n                        }\r\n                        if (allResultBeans.size() == 0){\r\n                            apiConfig.pageSelfDecrement();\r\n                            refreshLayout.finishLoadMoreWithNoMoreData();\r\n                            Toast.makeText(getActivity(),\"后面没有内容了~\",Toast.LENGTH_SHORT).show();\r\n                        }else if (addVideoCount == 0){\r\n                            Toast.makeText(getActivity(),\"刚刚有一整页视频都被屏蔽掉了哦\",Toast.LENGTH_SHORT).show();\r\n                        }\r\n                        db.close();\r\n                        dbOpenHelper.close();\r\n                        pubdateVideoAdapter.notifyItemRangeChanged(PastSize, allResultBeans.size());\r\n                        refreshLayout.finishLoadMore(100);\r\n                    }else {\r\n                        if (page > 1){\r\n\r\n                        }\r\n                        refreshLayout.finishLoadMoreWithNoMoreData();\r\n                        Toast.makeText(getActivity(),\"后面没有内容了~\",Toast.LENGTH_SHORT).show();\r\n                    }\r\n                    break;\r\n                case NETWORK_ERROR:\r\n                    //这里因为在高级搜索界面可能会有人快速切换页面，因此在fragment视图消失时手动强制关闭了线程池和handle，\r\n                    // 但是网络请求会报java.io.InterruptedIOException，之前在异常里并没有区分，全走网络错误了，\r\n                    // 先这样办，能解决问题，以后再加异常类型区分\r\n                    refreshLayout.finishRefresh(100/*,false*/);\r\n                    refreshLayout.finishLoadMore(100/*,false*/);\r\n                    if (getActivity() != null) {\r\n                        Toast.makeText(getActivity(), \"网络消失了~\", Toast.LENGTH_SHORT).show();\r\n                        break;\r\n                    }\r\n            }\r\n            // TODO\r\n            // UI界面的更新等相关操作\r\n        }\r\n    };\r\n\r\n\r\n    private ImageFanArtFragment.MyRunnable networkTask = new ImageFanArtFragment.MyRunnable() {\r\n        String url;\r\n        @Override\r\n        public ImageFanArtFragment.MyRunnable setParam(String param) {\r\n            url = param;\r\n            return this;\r\n        }\r\n\r\n        @Override\r\n        public void run() {\r\n            Message msg = new Message();\r\n            Bundle data = new Bundle();\r\n            // TODO\r\n            // 在这里进行 http request.网络请求相关操作\r\n//            page++;\r\n//            ACache aCache = ACache.get(getActivity());\r\n//            String tmpACache = aCache.getAsString(url);\r\n//            if (tmpACache == null) {\r\n                OkHttpClient client = new OkHttpClient.Builder().readTimeout(15, TimeUnit.SECONDS).build();\r\n                Request request = new Request.Builder().url(url)\r\n                        .get().build();\r\n                Call call = client.newCall(request);\r\n                Response response = null;\r\n                String tmp;\r\n                try {\r\n                    response = call.execute();\r\n                    tmp = response.body().string();\r\n                    msg.what = GET_DATA_SUCCESS;\r\n                    data.putString(\"AdvancedSearchDataBean\", tmp);\r\n//                    aCache.put(url, tmp, ACache.TIME_HOUR);\r\n                } catch (IOException e) {\r\n                    e.printStackTrace();\r\n//                page--;\r\n                    handler.sendEmptyMessage(NETWORK_ERROR);\r\n                }\r\n//            }else {\r\n//                msg.what = GET_DATA_SUCCESS;\r\n//                data.putString(\"AdvancedSearchDataBean\", aCache.getAsString(url));\r\n//                Log.i(\"ACache:AdvancedSearchDataBean\", aCache.getAsString(url));\r\n//            }\r\n            msg.setData(data);\r\n            handler.sendMessage(msg);\r\n        }\r\n    };\r\n    public static boolean searchInSQL(SQLiteDatabase db, String str, String table, String col) {\r\n\r\n        Cursor cursor = db.rawQuery(\r\n                \"select * from   \" + table + \"  where   \" + col +\"=? \",\r\n                new String[] { str });\r\n        while (cursor.moveToNext()) {\r\n//            Log.i(\" bvid:\", str + \"在数据库已存在,return true\");\r\n            return true;\r\n        }\r\n//        Log.i(\" bvid:\", str + \"在数据库不存在，return false\");\r\n        return false;\r\n    }\r\n\r\n    @Override\r\n    public void onDetach() {\r\n        pubdateVideoAdapter.closeSQL();\r\n        if (db != null) {\r\n            db.close();\r\n        }\r\n        if (dbOpenHelper != null) {\r\n            dbOpenHelper.close();\r\n        }\r\n        cachedThreadPool.shutdownNow();\r\n        handler.removeCallbacksAndMessages(null);\r\n        super.onDetach();\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/asasfans/ui/main/fragment/BiliVideoFragment.java b/app/src/main/java/com/example/asasfans/ui/main/fragment/BiliVideoFragment.java
--- a/app/src/main/java/com/example/asasfans/ui/main/fragment/BiliVideoFragment.java	
+++ b/app/src/main/java/com/example/asasfans/ui/main/fragment/BiliVideoFragment.java	
@@ -28,9 +28,7 @@
 import com.example.asasfans.ui.main.adapter.PubdateVideoAdapter;
 import com.example.asasfans.util.ApiConfig;
 import com.google.gson.Gson;
-import com.scwang.smart.refresh.footer.BallPulseFooter;
 import com.scwang.smart.refresh.footer.ClassicsFooter;
-import com.scwang.smart.refresh.header.BezierRadarHeader;
 import com.scwang.smart.refresh.header.MaterialHeader;
 import com.scwang.smart.refresh.layout.api.RefreshLayout;
 import com.scwang.smart.refresh.layout.listener.OnLoadMoreListener;
@@ -187,6 +185,7 @@
             }
         });
         if (firstOnCreateView) {
+            refreshLayout.autoRefreshAnimationOnly();
             cachedThreadPool.execute(networkTask.setParam(apiConfig.getUrl()));
             firstOnCreateView = false;
         }
@@ -202,6 +201,7 @@
             Gson gson =new Gson();
             switch (msg.what){
                 case GET_DATA_SUCCESS:
+                    refreshLayout.finishRefresh();
                     if (val.startsWith("{\"code\":0,\"message\":\"ok\"")) {
                         AdvancedSearchDataBean advancedSearchDataBean = gson.fromJson(val, AdvancedSearchDataBean.class);
                         List<AdvancedSearchDataBean.DataBean.ResultBean> allResultBeans = advancedSearchDataBean.getData().getResult();
@@ -292,23 +292,23 @@
 //            ACache aCache = ACache.get(getActivity());
 //            String tmpACache = aCache.getAsString(url);
 //            if (tmpACache == null) {
-                OkHttpClient client = new OkHttpClient.Builder().readTimeout(15, TimeUnit.SECONDS).build();
-                Request request = new Request.Builder().url(url)
-                        .get().build();
-                Call call = client.newCall(request);
-                Response response = null;
-                String tmp;
-                try {
-                    response = call.execute();
-                    tmp = response.body().string();
-                    msg.what = GET_DATA_SUCCESS;
-                    data.putString("AdvancedSearchDataBean", tmp);
+            OkHttpClient client = new OkHttpClient.Builder().readTimeout(15, TimeUnit.SECONDS).build();
+            Request request = new Request.Builder().url(url)
+                    .get().build();
+            Call call = client.newCall(request);
+            Response response = null;
+            String tmp;
+            try {
+                response = call.execute();
+                tmp = response.body().string();
+                msg.what = GET_DATA_SUCCESS;
+                data.putString("AdvancedSearchDataBean", tmp);
 //                    aCache.put(url, tmp, ACache.TIME_HOUR);
-                } catch (IOException e) {
-                    e.printStackTrace();
+            } catch (IOException e) {
+                e.printStackTrace();
 //                page--;
-                    handler.sendEmptyMessage(NETWORK_ERROR);
-                }
+                handler.sendEmptyMessage(NETWORK_ERROR);
+            }
 //            }else {
 //                msg.what = GET_DATA_SUCCESS;
 //                data.putString("AdvancedSearchDataBean", aCache.getAsString(url));
Index: app/src/main/res/layout/fragment_tools_web.xml
===================================================================
diff --git a/app/src/main/res/layout/fragment_tools_web.xml b/app/src/main/res/layout/fragment_tools_web.xml
new file mode 100644
--- /dev/null	
+++ b/app/src/main/res/layout/fragment_tools_web.xml	
@@ -0,0 +1,22 @@
+<?xml version="1.0" encoding="utf-8"?>
+<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:orientation="vertical"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent">
+    <ProgressBar
+        android:id="@+id/pb"
+        android:indeterminateTintMode="src_atop"
+        android:indeterminateTint="@color/tab_text_selected"
+        style="@style/Widget.AppCompat.ProgressBar.Horizontal"
+        android:layout_width="match_parent"
+        android:layout_height="4dp"
+        android:max="100"
+        android:progress="50"
+        android:visibility="gone" />
+
+    <WebView
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"
+        android:id="@+id/webView"/>
+
+</LinearLayout>
\ No newline at end of file
Index: app/google-services.json
===================================================================
diff --git a/app/google-services.json b/app/google-services.json
new file mode 100644
--- /dev/null	
+++ b/app/google-services.json	
@@ -0,0 +1,39 @@
+{
+  "project_info": {
+    "project_number": "1016964769616",
+    "project_id": "asasfans-app---ga4",
+    "storage_bucket": "asasfans-app---ga4.appspot.com"
+  },
+  "client": [
+    {
+      "client_info": {
+        "mobilesdk_app_id": "1:1016964769616:android:6e4ca7a2613ce8c206ee55",
+        "android_client_info": {
+          "package_name": "com.example.asasfans"
+        }
+      },
+      "oauth_client": [
+        {
+          "client_id": "1016964769616-4og6k6qn3fjje4ko35jlufhkfn4lskbl.apps.googleusercontent.com",
+          "client_type": 3
+        }
+      ],
+      "api_key": [
+        {
+          "current_key": "AIzaSyAK5xeMmbU36HKVu7tbKF-Y5B_vIQo3xFQ"
+        }
+      ],
+      "services": {
+        "appinvite_service": {
+          "other_platform_oauth_client": [
+            {
+              "client_id": "1016964769616-4og6k6qn3fjje4ko35jlufhkfn4lskbl.apps.googleusercontent.com",
+              "client_type": 3
+            }
+          ]
+        }
+      }
+    }
+  ],
+  "configuration_version": "1"
+}
\ No newline at end of file
Index: app/src/main/java/com/example/asasfans/util/ACache.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.asasfans.util;\r\n/**\r\n * Copyright (c) 2012-2013, Michael Yang 杨福海 (www.yangfuhai.com).\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *      http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nimport java.io.BufferedReader;\r\nimport java.io.BufferedWriter;\r\nimport java.io.ByteArrayInputStream;\r\nimport java.io.ByteArrayOutputStream;\r\nimport java.io.File;\r\nimport java.io.FileOutputStream;\r\nimport java.io.FileReader;\r\nimport java.io.FileWriter;\r\nimport java.io.IOException;\r\nimport java.io.ObjectInputStream;\r\nimport java.io.ObjectOutputStream;\r\nimport java.io.RandomAccessFile;\r\nimport java.io.Serializable;\r\nimport java.util.Collections;\r\nimport java.util.HashMap;\r\nimport java.util.Map;\r\nimport java.util.Map.Entry;\r\nimport java.util.Set;\r\nimport java.util.concurrent.atomic.AtomicInteger;\r\nimport java.util.concurrent.atomic.AtomicLong;\r\n\r\nimport org.json.JSONArray;\r\nimport org.json.JSONObject;\r\n\r\nimport android.content.Context;\r\nimport android.graphics.Bitmap;\r\nimport android.graphics.BitmapFactory;\r\nimport android.graphics.Canvas;\r\nimport android.graphics.PixelFormat;\r\nimport android.graphics.drawable.BitmapDrawable;\r\nimport android.graphics.drawable.Drawable;\r\nimport android.util.Log;\r\n\r\n/**\r\n * @author Michael Yang（www.yangfuhai.com） update at 2013.08.07\r\n */\r\npublic class ACache {\r\n    public static final int TIME_HOUR = 60 * 60;\r\n    public static final int TIME_DAY = TIME_HOUR * 24;\r\n    private static final int MAX_SIZE = 1000 * 1000 * 50; // 50 mb\r\n    private static final int MAX_COUNT = Integer.MAX_VALUE; // 不限制存放数据的数量\r\n    private static Map<String, ACache> mInstanceMap = new HashMap<String, ACache>();\r\n    private ACacheManager mCache;\r\n\r\n    public static ACache get(Context ctx) {\r\n        return get(ctx, \"ACache\");\r\n    }\r\n\r\n    public static ACache get(Context ctx, String cacheName) {\r\n        File f = new File(ctx.getCacheDir(), cacheName);\r\n        return get(f, MAX_SIZE, MAX_COUNT);\r\n    }\r\n\r\n    public static ACache get(File cacheDir) {\r\n        return get(cacheDir, MAX_SIZE, MAX_COUNT);\r\n    }\r\n\r\n    public static ACache get(Context ctx, long max_zise, int max_count) {\r\n        File f = new File(ctx.getCacheDir(), \"ACache\");\r\n        return get(f, max_zise, max_count);\r\n    }\r\n\r\n    public static ACache get(File cacheDir, long max_zise, int max_count) {\r\n        ACache manager = mInstanceMap.get(cacheDir.getAbsoluteFile() + myPid());\r\n        if (manager == null) {\r\n            manager = new ACache(cacheDir, max_zise, max_count);\r\n            mInstanceMap.put(cacheDir.getAbsolutePath() + myPid(), manager);\r\n        }\r\n        return manager;\r\n    }\r\n\r\n    private static String myPid() {\r\n        return \"_\" + android.os.Process.myPid();\r\n    }\r\n\r\n    private ACache(File cacheDir, long max_size, int max_count) {\r\n        if (!cacheDir.exists() && !cacheDir.mkdirs()) {\r\n            throw new RuntimeException(\"can't make dirs in \"\r\n                    + cacheDir.getAbsolutePath());\r\n        }\r\n        mCache = new ACacheManager(cacheDir, max_size, max_count);\r\n    }\r\n\r\n    // =======================================\r\n    // ============ String数据 读写 ==============\r\n    // =======================================\r\n    /**\r\n     * 保存 String数据 到 缓存中\r\n     *\r\n     * @param key\r\n     *            保存的key\r\n     * @param value\r\n     *            保存的String数据\r\n     */\r\n    public void put(String key, String value) {\r\n        File file = mCache.newFile(key);\r\n        BufferedWriter out = null;\r\n        try {\r\n            out = new BufferedWriter(new FileWriter(file), 1024);\r\n            out.write(value);\r\n        } catch (IOException e) {\r\n            e.printStackTrace();\r\n        } finally {\r\n            if (out != null) {\r\n                try {\r\n                    out.flush();\r\n                    out.close();\r\n                } catch (IOException e) {\r\n                    e.printStackTrace();\r\n                }\r\n            }\r\n            mCache.put(file);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 保存 String数据 到 缓存中\r\n     *\r\n     * @param key\r\n     *            保存的key\r\n     * @param value\r\n     *            保存的String数据\r\n     * @param saveTime\r\n     *            保存的时间，单位：秒\r\n     */\r\n    public void put(String key, String value, int saveTime) {\r\n        put(key, Utils.newStringWithDateInfo(saveTime, value));\r\n    }\r\n\r\n    /**\r\n     * 读取 String数据\r\n     *\r\n     * @param key\r\n     * @return String 数据\r\n     */\r\n    public String getAsString(String key) {\r\n        File file = mCache.get(key);\r\n        if (!file.exists()) {\r\n            return null;\r\n        }\r\n        boolean removeFile = false;\r\n        BufferedReader in = null;\r\n        try {\r\n            in = new BufferedReader(new FileReader(file));\r\n            String readString = \"\";\r\n            String currentLine;\r\n            while ((currentLine = in.readLine()) != null) {\r\n                readString += currentLine;\r\n            }\r\n            if (!Utils.isDue(readString)) {\r\n                return Utils.clearDateInfo(readString);\r\n            } else {\r\n                removeFile = true;\r\n                return null;\r\n            }\r\n        } catch (IOException e) {\r\n            e.printStackTrace();\r\n            return null;\r\n        } finally {\r\n            if (in != null) {\r\n                try {\r\n                    in.close();\r\n                } catch (IOException e) {\r\n                    e.printStackTrace();\r\n                }\r\n            }\r\n            if (removeFile)\r\n                remove(key);\r\n        }\r\n    }\r\n\r\n    // =======================================\r\n    // ============= JSONObject 数据 读写 ==============\r\n    // =======================================\r\n    /**\r\n     * 保存 JSONObject数据 到 缓存中\r\n     *\r\n     * @param key\r\n     *            保存的key\r\n     * @param value\r\n     *            保存的JSON数据\r\n     */\r\n    public void put(String key, JSONObject value) {\r\n        put(key, value.toString());\r\n    }\r\n\r\n    /**\r\n     * 保存 JSONObject数据 到 缓存中\r\n     *\r\n     * @param key\r\n     *            保存的key\r\n     * @param value\r\n     *            保存的JSONObject数据\r\n     * @param saveTime\r\n     *            保存的时间，单位：秒\r\n     */\r\n    public void put(String key, JSONObject value, int saveTime) {\r\n        put(key, value.toString(), saveTime);\r\n    }\r\n\r\n    /**\r\n     * 读取JSONObject数据\r\n     *\r\n     * @param key\r\n     * @return JSONObject数据\r\n     */\r\n    public JSONObject getAsJSONObject(String key) {\r\n        String JSONString = getAsString(key);\r\n        try {\r\n            JSONObject obj = new JSONObject(JSONString);\r\n            return obj;\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n            return null;\r\n        }\r\n    }\r\n\r\n    // =======================================\r\n    // ============ JSONArray 数据 读写 =============\r\n    // =======================================\r\n    /**\r\n     * 保存 JSONArray数据 到 缓存中\r\n     *\r\n     * @param key\r\n     *            保存的key\r\n     * @param value\r\n     *            保存的JSONArray数据\r\n     */\r\n    public void put(String key, JSONArray value) {\r\n        put(key, value.toString());\r\n    }\r\n\r\n    /**\r\n     * 保存 JSONArray数据 到 缓存中\r\n     *\r\n     * @param key\r\n     *            保存的key\r\n     * @param value\r\n     *            保存的JSONArray数据\r\n     * @param saveTime\r\n     *            保存的时间，单位：秒\r\n     */\r\n    public void put(String key, JSONArray value, int saveTime) {\r\n        put(key, value.toString(), saveTime);\r\n    }\r\n\r\n    /**\r\n     * 读取JSONArray数据\r\n     *\r\n     * @param key\r\n     * @return JSONArray数据\r\n     */\r\n    public JSONArray getAsJSONArray(String key) {\r\n        String JSONString = getAsString(key);\r\n        try {\r\n            JSONArray obj = new JSONArray(JSONString);\r\n            return obj;\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n            return null;\r\n        }\r\n    }\r\n\r\n    // =======================================\r\n    // ============== byte 数据 读写 =============\r\n    // =======================================\r\n    /**\r\n     * 保存 byte数据 到 缓存中\r\n     *\r\n     * @param key\r\n     *            保存的key\r\n     * @param value\r\n     *            保存的数据\r\n     */\r\n    public void put(String key, byte[] value) {\r\n        File file = mCache.newFile(key);\r\n        FileOutputStream out = null;\r\n        try {\r\n            out = new FileOutputStream(file);\r\n            out.write(value);\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        } finally {\r\n            if (out != null) {\r\n                try {\r\n                    out.flush();\r\n                    out.close();\r\n                } catch (IOException e) {\r\n                    e.printStackTrace();\r\n                }\r\n            }\r\n            mCache.put(file);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 保存 byte数据 到 缓存中\r\n     *\r\n     * @param key\r\n     *            保存的key\r\n     * @param value\r\n     *            保存的数据\r\n     * @param saveTime\r\n     *            保存的时间，单位：秒\r\n     */\r\n    public void put(String key, byte[] value, int saveTime) {\r\n        put(key, Utils.newByteArrayWithDateInfo(saveTime, value));\r\n    }\r\n\r\n    /**\r\n     * 获取 byte 数据\r\n     *\r\n     * @param key\r\n     * @return byte 数据\r\n     */\r\n    public byte[] getAsBinary(String key) {\r\n        RandomAccessFile RAFile = null;\r\n        boolean removeFile = false;\r\n        try {\r\n            File file = mCache.get(key);\r\n            if (!file.exists())\r\n                return null;\r\n            RAFile = new RandomAccessFile(file, \"r\");\r\n            byte[] byteArray = new byte[(int) RAFile.length()];\r\n            RAFile.read(byteArray);\r\n            if (!Utils.isDue(byteArray)) {\r\n                return Utils.clearDateInfo(byteArray);\r\n            } else {\r\n                removeFile = true;\r\n                return null;\r\n            }\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n            return null;\r\n        } finally {\r\n            if (RAFile != null) {\r\n                try {\r\n                    RAFile.close();\r\n                } catch (IOException e) {\r\n                    e.printStackTrace();\r\n                }\r\n            }\r\n            if (removeFile)\r\n                remove(key);\r\n        }\r\n    }\r\n\r\n    // =======================================\r\n    // ============= 序列化 数据 读写 ===============\r\n    // =======================================\r\n    /**\r\n     * 保存 Serializable数据 到 缓存中\r\n     *\r\n     * @param key\r\n     *            保存的key\r\n     * @param value\r\n     *            保存的value\r\n     */\r\n    public void put(String key, Serializable value) {\r\n        put(key, value, -1);\r\n    }\r\n\r\n    /**\r\n     * 保存 Serializable数据到 缓存中\r\n     *\r\n     * @param key\r\n     *            保存的key\r\n     * @param value\r\n     *            保存的value\r\n     * @param saveTime\r\n     *            保存的时间，单位：秒\r\n     */\r\n    public void put(String key, Serializable value, int saveTime) {\r\n        ByteArrayOutputStream baos = null;\r\n        ObjectOutputStream oos = null;\r\n        try {\r\n            baos = new ByteArrayOutputStream();\r\n            oos = new ObjectOutputStream(baos);\r\n            oos.writeObject(value);\r\n            byte[] data = baos.toByteArray();\r\n            if (saveTime != -1) {\r\n                put(key, data, saveTime);\r\n            } else {\r\n                put(key, data);\r\n            }\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        } finally {\r\n            try {\r\n                oos.close();\r\n            } catch (IOException e) {\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 读取 Serializable数据\r\n     *\r\n     * @param key\r\n     * @return Serializable 数据\r\n     */\r\n    public Object getAsObject(String key) {\r\n        byte[] data = getAsBinary(key);\r\n        if (data != null) {\r\n            ByteArrayInputStream bais = null;\r\n            ObjectInputStream ois = null;\r\n            try {\r\n                bais = new ByteArrayInputStream(data);\r\n                ois = new ObjectInputStream(bais);\r\n                Object reObject = ois.readObject();\r\n                return reObject;\r\n            } catch (Exception e) {\r\n                e.printStackTrace();\r\n                return null;\r\n            } finally {\r\n                try {\r\n                    if (bais != null)\r\n                        bais.close();\r\n                } catch (IOException e) {\r\n                    e.printStackTrace();\r\n                }\r\n                try {\r\n                    if (ois != null)\r\n                        ois.close();\r\n                } catch (IOException e) {\r\n                    e.printStackTrace();\r\n                }\r\n            }\r\n        }\r\n        return null;\r\n\r\n    }\r\n\r\n    // =======================================\r\n    // ============== bitmap 数据 读写 =============\r\n    // =======================================\r\n    /**\r\n     * 保存 bitmap 到 缓存中\r\n     *\r\n     * @param key\r\n     *            保存的key\r\n     * @param value\r\n     *            保存的bitmap数据\r\n     */\r\n    public void put(String key, Bitmap value) {\r\n        put(key, Utils.Bitmap2Bytes(value));\r\n    }\r\n\r\n    /**\r\n     * 保存 bitmap 到 缓存中\r\n     *\r\n     * @param key\r\n     *            保存的key\r\n     * @param value\r\n     *            保存的 bitmap 数据\r\n     * @param saveTime\r\n     *            保存的时间，单位：秒\r\n     */\r\n    public void put(String key, Bitmap value, int saveTime) {\r\n        put(key, Utils.Bitmap2Bytes(value), saveTime);\r\n    }\r\n\r\n    /**\r\n     * 读取 bitmap 数据\r\n     *\r\n     * @param key\r\n     * @return bitmap 数据\r\n     */\r\n    public Bitmap getAsBitmap(String key) {\r\n        if (getAsBinary(key) == null) {\r\n            return null;\r\n        }\r\n        return Utils.Bytes2Bimap(getAsBinary(key));\r\n    }\r\n\r\n    // =======================================\r\n    // ============= drawable 数据 读写 =============\r\n    // =======================================\r\n    /**\r\n     * 保存 drawable 到 缓存中\r\n     *\r\n     * @param key\r\n     *            保存的key\r\n     * @param value\r\n     *            保存的drawable数据\r\n     */\r\n    public void put(String key, Drawable value) {\r\n        put(key, Utils.drawable2Bitmap(value));\r\n    }\r\n\r\n    /**\r\n     * 保存 drawable 到 缓存中\r\n     *\r\n     * @param key\r\n     *            保存的key\r\n     * @param value\r\n     *            保存的 drawable 数据\r\n     * @param saveTime\r\n     *            保存的时间，单位：秒\r\n     */\r\n    public void put(String key, Drawable value, int saveTime) {\r\n        put(key, Utils.drawable2Bitmap(value), saveTime);\r\n    }\r\n\r\n    /**\r\n     * 读取 Drawable 数据\r\n     *\r\n     * @param key\r\n     * @return Drawable 数据\r\n     */\r\n    public Drawable getAsDrawable(String key) {\r\n        if (getAsBinary(key) == null) {\r\n            return null;\r\n        }\r\n        return Utils.bitmap2Drawable(Utils.Bytes2Bimap(getAsBinary(key)));\r\n    }\r\n\r\n    /**\r\n     * 获取缓存文件\r\n     *\r\n     * @param key\r\n     * @return value 缓存的文件\r\n     */\r\n    public File file(String key) {\r\n        File f = mCache.newFile(key);\r\n        if (f.exists())\r\n            return f;\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * 移除某个key\r\n     *\r\n     * @param key\r\n     * @return 是否移除成功\r\n     */\r\n    public boolean remove(String key) {\r\n        return mCache.remove(key);\r\n    }\r\n\r\n    /**\r\n     * 清除所有数据\r\n     */\r\n    public void clear() {\r\n        mCache.clear();\r\n    }\r\n\r\n    /**\r\n     * @title 缓存管理器\r\n     * @author 杨福海（michael） www.yangfuhai.com\r\n     * @version 1.0\r\n     */\r\n    public class ACacheManager {\r\n        private final AtomicLong cacheSize;\r\n        private final AtomicInteger cacheCount;\r\n        private final long sizeLimit;\r\n        private final int countLimit;\r\n        private final Map<File, Long> lastUsageDates = Collections\r\n                .synchronizedMap(new HashMap<File, Long>());\r\n        protected File cacheDir;\r\n\r\n        private ACacheManager(File cacheDir, long sizeLimit, int countLimit) {\r\n            this.cacheDir = cacheDir;\r\n            this.sizeLimit = sizeLimit;\r\n            this.countLimit = countLimit;\r\n            cacheSize = new AtomicLong();\r\n            cacheCount = new AtomicInteger();\r\n            calculateCacheSizeAndCacheCount();\r\n        }\r\n\r\n        /**\r\n         * 计算 cacheSize和cacheCount\r\n         */\r\n        private void calculateCacheSizeAndCacheCount() {\r\n            new Thread(new Runnable() {\r\n                @Override\r\n                public void run() {\r\n                    int size = 0;\r\n                    int count = 0;\r\n                    File[] cachedFiles = cacheDir.listFiles();\r\n                    if (cachedFiles != null) {\r\n                        for (File cachedFile : cachedFiles) {\r\n                            size += calculateSize(cachedFile);\r\n                            count += 1;\r\n                            lastUsageDates.put(cachedFile,\r\n                                    cachedFile.lastModified());\r\n                        }\r\n                        cacheSize.set(size);\r\n                        cacheCount.set(count);\r\n                    }\r\n                }\r\n            }).start();\r\n        }\r\n\r\n        private void put(File file) {\r\n            int curCacheCount = cacheCount.get();\r\n            while (curCacheCount + 1 > countLimit) {\r\n                long freedSize = removeNext();\r\n                cacheSize.addAndGet(-freedSize);\r\n\r\n                curCacheCount = cacheCount.addAndGet(-1);\r\n            }\r\n            cacheCount.addAndGet(1);\r\n\r\n            long valueSize = calculateSize(file);\r\n            long curCacheSize = cacheSize.get();\r\n            while (curCacheSize + valueSize > sizeLimit) {\r\n                long freedSize = removeNext();\r\n                curCacheSize = cacheSize.addAndGet(-freedSize);\r\n            }\r\n            cacheSize.addAndGet(valueSize);\r\n\r\n            Long currentTime = System.currentTimeMillis();\r\n            file.setLastModified(currentTime);\r\n            lastUsageDates.put(file, currentTime);\r\n        }\r\n\r\n        private File get(String key) {\r\n            File file = newFile(key);\r\n            Long currentTime = System.currentTimeMillis();\r\n            file.setLastModified(currentTime);\r\n            lastUsageDates.put(file, currentTime);\r\n\r\n            return file;\r\n        }\r\n\r\n        private File newFile(String key) {\r\n            return new File(cacheDir, key.hashCode() + \"\");\r\n        }\r\n\r\n        private boolean remove(String key) {\r\n            File image = get(key);\r\n            return image.delete();\r\n        }\r\n\r\n        private void clear() {\r\n            lastUsageDates.clear();\r\n            cacheSize.set(0);\r\n            File[] files = cacheDir.listFiles();\r\n            if (files != null) {\r\n                for (File f : files) {\r\n                    f.delete();\r\n                }\r\n            }\r\n        }\r\n\r\n        /**\r\n         * 移除旧的文件\r\n         *\r\n         * @return\r\n         */\r\n        private long removeNext() {\r\n            if (lastUsageDates.isEmpty()) {\r\n                return 0;\r\n            }\r\n\r\n            Long oldestUsage = null;\r\n            File mostLongUsedFile = null;\r\n            Set<Entry<File, Long>> entries = lastUsageDates.entrySet();\r\n            synchronized (lastUsageDates) {\r\n                for (Entry<File, Long> entry : entries) {\r\n                    if (mostLongUsedFile == null) {\r\n                        mostLongUsedFile = entry.getKey();\r\n                        oldestUsage = entry.getValue();\r\n                    } else {\r\n                        Long lastValueUsage = entry.getValue();\r\n                        if (lastValueUsage < oldestUsage) {\r\n                            oldestUsage = lastValueUsage;\r\n                            mostLongUsedFile = entry.getKey();\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            long fileSize = calculateSize(mostLongUsedFile);\r\n            if (mostLongUsedFile.delete()) {\r\n                lastUsageDates.remove(mostLongUsedFile);\r\n            }\r\n            return fileSize;\r\n        }\r\n\r\n        private long calculateSize(File file) {\r\n            return file.length();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @title 时间计算工具类\r\n     * @author 杨福海（michael） www.yangfuhai.com\r\n     * @version 1.0\r\n     */\r\n    private static class Utils {\r\n\r\n        /**\r\n         * 判断缓存的String数据是否到期\r\n         *\r\n         * @param str\r\n         * @return true：到期了 false：还没有到期\r\n         */\r\n        private static boolean isDue(String str) {\r\n            return isDue(str.getBytes());\r\n        }\r\n\r\n        /**\r\n         * 判断缓存的byte数据是否到期\r\n         *\r\n         * @param data\r\n         * @return true：到期了 false：还没有到期\r\n         */\r\n        private static boolean isDue(byte[] data) {\r\n            String[] strs = getDateInfoFromDate(data);\r\n            if (strs != null && strs.length == 2) {\r\n                String saveTimeStr = strs[0];\r\n                while (saveTimeStr.startsWith(\"0\")) {\r\n                    saveTimeStr = saveTimeStr\r\n                            .substring(1, saveTimeStr.length());\r\n                }\r\n                long saveTime = Long.valueOf(saveTimeStr);\r\n                long deleteAfter = Long.valueOf(strs[1]);\r\n                if (System.currentTimeMillis() > saveTime + deleteAfter * 1000) {\r\n                    return true;\r\n                }\r\n            }\r\n            return false;\r\n        }\r\n\r\n        private static String newStringWithDateInfo(int second, String strInfo) {\r\n            return createDateInfo(second) + strInfo;\r\n        }\r\n\r\n        private static byte[] newByteArrayWithDateInfo(int second, byte[] data2) {\r\n            byte[] data1 = createDateInfo(second).getBytes();\r\n            byte[] retdata = new byte[data1.length + data2.length];\r\n            System.arraycopy(data1, 0, retdata, 0, data1.length);\r\n            System.arraycopy(data2, 0, retdata, data1.length, data2.length);\r\n            return retdata;\r\n        }\r\n\r\n        private static String clearDateInfo(String strInfo) {\r\n            if (strInfo != null && hasDateInfo(strInfo.getBytes())) {\r\n                strInfo = strInfo.substring(strInfo.indexOf(mSeparator) + 1,\r\n                        strInfo.length());\r\n            }\r\n            return strInfo;\r\n        }\r\n\r\n        private static byte[] clearDateInfo(byte[] data) {\r\n            if (hasDateInfo(data)) {\r\n                return copyOfRange(data, indexOf(data, mSeparator) + 1,\r\n                        data.length);\r\n            }\r\n            return data;\r\n        }\r\n\r\n        private static boolean hasDateInfo(byte[] data) {\r\n            return data != null && data.length > 15 && data[13] == '-'\r\n                    && indexOf(data, mSeparator) > 14;\r\n        }\r\n\r\n        private static String[] getDateInfoFromDate(byte[] data) {\r\n            if (hasDateInfo(data)) {\r\n                String saveDate = new String(copyOfRange(data, 0, 13));\r\n                String deleteAfter = new String(copyOfRange(data, 14,\r\n                        indexOf(data, mSeparator)));\r\n                return new String[] { saveDate, deleteAfter };\r\n            }\r\n            return null;\r\n        }\r\n\r\n        private static int indexOf(byte[] data, char c) {\r\n            for (int i = 0; i < data.length; i++) {\r\n                if (data[i] == c) {\r\n                    return i;\r\n                }\r\n            }\r\n            return -1;\r\n        }\r\n\r\n        private static byte[] copyOfRange(byte[] original, int from, int to) {\r\n            int newLength = to - from;\r\n            if (newLength < 0)\r\n                throw new IllegalArgumentException(from + \" > \" + to);\r\n            byte[] copy = new byte[newLength];\r\n            System.arraycopy(original, from, copy, 0,\r\n                    Math.min(original.length - from, newLength));\r\n            return copy;\r\n        }\r\n\r\n        private static final char mSeparator = ' ';\r\n\r\n        private static String createDateInfo(int second) {\r\n            String currentTime = System.currentTimeMillis() + \"\";\r\n            while (currentTime.length() < 13) {\r\n                currentTime = \"0\" + currentTime;\r\n            }\r\n            return currentTime + \"-\" + second + mSeparator;\r\n        }\r\n\r\n        /*\r\n         * Bitmap → byte[]\r\n         */\r\n        private static byte[] Bitmap2Bytes(Bitmap bm) {\r\n            if (bm == null) {\r\n                return null;\r\n            }\r\n            ByteArrayOutputStream baos = new ByteArrayOutputStream();\r\n            bm.compress(Bitmap.CompressFormat.PNG, 100, baos);\r\n            return baos.toByteArray();\r\n        }\r\n\r\n        /*\r\n         * byte[] → Bitmap\r\n         */\r\n        private static Bitmap Bytes2Bimap(byte[] b) {\r\n            if (b.length == 0) {\r\n                return null;\r\n            }\r\n            return BitmapFactory.decodeByteArray(b, 0, b.length);\r\n        }\r\n\r\n        /*\r\n         * Drawable → Bitmap\r\n         */\r\n        private static Bitmap drawable2Bitmap(Drawable drawable) {\r\n            if (drawable == null) {\r\n                return null;\r\n            }\r\n            // 取 drawable 的长宽\r\n            int w = drawable.getIntrinsicWidth();\r\n            int h = drawable.getIntrinsicHeight();\r\n            // 取 drawable 的颜色格式\r\n            Bitmap.Config config = drawable.getOpacity() != PixelFormat.OPAQUE ? Bitmap.Config.ARGB_8888\r\n                    : Bitmap.Config.RGB_565;\r\n            // 建立对应 bitmap\r\n            Bitmap bitmap = Bitmap.createBitmap(w, h, config);\r\n            // 建立对应 bitmap 的画布\r\n            Canvas canvas = new Canvas(bitmap);\r\n            drawable.setBounds(0, 0, w, h);\r\n            // 把 drawable 内容画到画布中\r\n            drawable.draw(canvas);\r\n            return bitmap;\r\n        }\r\n\r\n        /*\r\n         * Bitmap → Drawable\r\n         */\r\n        @SuppressWarnings(\"deprecation\")\r\n        private static Drawable bitmap2Drawable(Bitmap bm) {\r\n            if (bm == null) {\r\n                return null;\r\n            }\r\n            return new BitmapDrawable(bm);\r\n        }\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/asasfans/util/ACache.java b/app/src/main/java/com/example/asasfans/util/ACache.java
--- a/app/src/main/java/com/example/asasfans/util/ACache.java	
+++ b/app/src/main/java/com/example/asasfans/util/ACache.java	
@@ -14,6 +14,18 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
+
+import android.content.Context;
+import android.graphics.Bitmap;
+import android.graphics.BitmapFactory;
+import android.graphics.Canvas;
+import android.graphics.PixelFormat;
+import android.graphics.drawable.BitmapDrawable;
+import android.graphics.drawable.Drawable;
+
+import org.json.JSONArray;
+import org.json.JSONObject;
+
 import java.io.BufferedReader;
 import java.io.BufferedWriter;
 import java.io.ByteArrayInputStream;
@@ -35,18 +47,6 @@
 import java.util.concurrent.atomic.AtomicInteger;
 import java.util.concurrent.atomic.AtomicLong;
 
-import org.json.JSONArray;
-import org.json.JSONObject;
-
-import android.content.Context;
-import android.graphics.Bitmap;
-import android.graphics.BitmapFactory;
-import android.graphics.Canvas;
-import android.graphics.PixelFormat;
-import android.graphics.drawable.BitmapDrawable;
-import android.graphics.drawable.Drawable;
-import android.util.Log;
-
 /**
  * @author Michael Yang（www.yangfuhai.com） update at 2013.08.07
  */
Index: app/src/main/java/com/example/asasfans/receiver/XMPlayerReceiver.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.asasfans.receiver;\r\n\r\nimport android.content.BroadcastReceiver;\r\nimport android.content.Context;\r\nimport android.content.Intent;\r\nimport android.util.Log;\r\n\r\nimport com.example.asasfans.TestActivity;\r\nimport com.example.asasfans.ui.main.adapter.ToolsAdapter;\r\nimport com.example.asasfans.ui.main.fragment.WebFragment;\r\n\r\npublic class XMPlayerReceiver extends BroadcastReceiver {\r\n    public static final String PLAY_PRE = \"play_pre\";\r\n    public static final String PLAY_NEXT = \"play_next\";\r\n    public static final String PLAY_PAUSE = \"play_pause\";\r\n    public static final String PLAY_PLAY = \"play_play\";\r\n    @Override\r\n    public void onReceive(Context context, Intent intent) {\r\n\r\n        if (intent.getAction().equals(PLAY_NEXT)){//PLAY_NEXT\r\n            Log.e(\"XMPlayerReceiver\", \"通知栏点击了下一首\");\r\n\r\n        }\r\n        if (intent.getAction().equals(PLAY_PRE)) {;\r\n            Log.e(\"XMPlayerReceiver\", \"通知栏点击了上一首\");\r\n        }\r\n        if (intent.getAction().equals(PLAY_PAUSE)) {\r\n            Log.e(\"XMPlayerReceiver\", \"通知栏点击了暂停\");\r\n        }\r\n        if (intent.getAction().equals(PLAY_PLAY)) {\r\n            Log.e(\"XMPlayerReceiver\", \"通知栏点击了开始\");\r\n        }\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/asasfans/receiver/XMPlayerReceiver.java b/app/src/main/java/com/example/asasfans/receiver/XMPlayerReceiver.java
--- a/app/src/main/java/com/example/asasfans/receiver/XMPlayerReceiver.java	
+++ b/app/src/main/java/com/example/asasfans/receiver/XMPlayerReceiver.java	
@@ -5,10 +5,6 @@
 import android.content.Intent;
 import android.util.Log;
 
-import com.example.asasfans.TestActivity;
-import com.example.asasfans.ui.main.adapter.ToolsAdapter;
-import com.example.asasfans.ui.main.fragment.WebFragment;
-
 public class XMPlayerReceiver extends BroadcastReceiver {
     public static final String PLAY_PRE = "play_pre";
     public static final String PLAY_NEXT = "play_next";
Index: app/src/main/java/com/example/asasfans/util/OkHttp.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.asasfans.util;\r\n\r\nimport android.os.Handler;\r\nimport android.os.Looper;\r\nimport java.io.File;\r\nimport java.io.FileOutputStream;\r\nimport java.io.IOException;\r\nimport java.io.InputStream;\r\nimport java.util.HashMap;\r\nimport java.util.Map;\r\nimport java.util.concurrent.TimeUnit;\r\nimport okhttp3.Call;\r\nimport okhttp3.Callback;\r\nimport okhttp3.FormBody;\r\nimport okhttp3.OkHttpClient;\r\nimport okhttp3.Request;\r\nimport okhttp3.RequestBody;\r\nimport okhttp3.Response;\r\n\r\n/**\r\n * Created by fan on 2016/11/9.\r\n */\r\n\r\npublic class OkHttp {\r\n\r\n    /**\r\n     * 静态实例\r\n     */\r\n    private static OkHttp sOkHttpManager;\r\n\r\n    /**\r\n     * okhttpclient实例\r\n     */\r\n    private OkHttpClient mClient;\r\n\r\n    /**\r\n     * 因为我们请求数据一般都是子线程中请求，在这里我们使用了handler\r\n     */\r\n    private Handler mHandler;\r\n\r\n    /**\r\n     * 构造方法\r\n     */\r\n    private OkHttp() {\r\n\r\n        mClient = new OkHttpClient();\r\n\r\n        /**\r\n         * 在这里直接设置连接超时.读取超时，写入超时\r\n         */\r\n        mClient.newBuilder().connectTimeout(10, TimeUnit.SECONDS);\r\n        mClient.newBuilder().readTimeout(10, TimeUnit.SECONDS);\r\n        mClient.newBuilder().writeTimeout(10, TimeUnit.SECONDS);\r\n\r\n        /**\r\n         * 如果是用的3.0之前的版本  使用以下直接设置连接超时.读取超时，写入超时\r\n         */\r\n\r\n        //client.setConnectTimeout(10, TimeUnit.SECONDS);\r\n        //client.setWriteTimeout(10, TimeUnit.SECONDS);\r\n        //client.setReadTimeout(30, TimeUnit.SECONDS);\r\n\r\n\r\n        /**\r\n         * 初始化handler\r\n         */\r\n        mHandler = new Handler(Looper.getMainLooper());\r\n    }\r\n\r\n\r\n    /**\r\n     * 单例模式  获取OkHttp实例\r\n     *\r\n     * @return\r\n     */\r\n    public static OkHttp getInstance() {\r\n\r\n        if (sOkHttpManager == null) {\r\n            sOkHttpManager = new OkHttp();\r\n        }\r\n        return sOkHttpManager;\r\n    }\r\n\r\n    //-------------------------同步的方式请求数据--------------------------\r\n\r\n    /**\r\n     * 对外提供的get方法,同步的方式\r\n     *\r\n     * @param url 传入的地址\r\n     * @return\r\n     */\r\n    public static Response getSync(String url) {\r\n\r\n        //通过获取到的实例来调用内部方法\r\n        return sOkHttpManager.inner_getSync(url);\r\n    }\r\n\r\n    /**\r\n     * GET方式请求的内部逻辑处理方式，同步的方式\r\n     *\r\n     * @param url\r\n     * @return\r\n     */\r\n    private Response inner_getSync(String url) {\r\n        Request request = new Request.Builder().url(url).build();\r\n        Response response = null;\r\n        try {\r\n            //同步请求返回的是response对象\r\n            response = mClient.newCall(request).execute();\r\n        } catch (IOException e) {\r\n            e.printStackTrace();\r\n        }\r\n        return response;\r\n    }\r\n\r\n    /**\r\n     * 对外提供的同步获取String的方法\r\n     *\r\n     * @param url\r\n     * @return\r\n     */\r\n    public static String getSyncString(String url) {\r\n        return sOkHttpManager.inner_getSyncString(url);\r\n    }\r\n\r\n\r\n    /**\r\n     * 同步方法\r\n     */\r\n    private String inner_getSyncString(String url) {\r\n        String result = null;\r\n        try {\r\n            /**\r\n             * 把取得到的结果转为字符串，这里最好用string()\r\n             */\r\n            result = inner_getSync(url).body().string();\r\n        } catch (IOException e) {\r\n            e.printStackTrace();\r\n        }\r\n        return result;\r\n    }\r\n\r\n    //-------------------------异步的方式请求数据--------------------------\r\n    public static void getAsync(String url, DataCallBack callBack) {\r\n        getInstance().inner_getAsync(url, callBack);\r\n    }\r\n\r\n    /**\r\n     * 内部逻辑请求的方法\r\n     *\r\n     * @param url\r\n     * @param callBack\r\n     * @return\r\n     */\r\n    private void inner_getAsync(String url, final DataCallBack callBack) {\r\n        final Request request = new Request.Builder().url(url).build();\r\n\r\n        mClient.newCall(request).enqueue(new Callback() {\r\n            @Override\r\n            public void onFailure(Call call, IOException e) {\r\n                deliverDataFailure(request, e, callBack);\r\n            }\r\n\r\n            @Override\r\n            public void onResponse(Call call, Response response) throws IOException {\r\n                String result = null;\r\n                try {\r\n                    result = response.body().string();\r\n                } catch (IOException e) {\r\n                    deliverDataFailure(request, e, callBack);\r\n                }\r\n                deliverDataSuccess(result, callBack);\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n    /**\r\n     * 分发失败的时候调用\r\n     *\r\n     * @param request\r\n     * @param e\r\n     * @param callBack\r\n     */\r\n    private void deliverDataFailure(final Request request, final IOException e, final DataCallBack callBack) {\r\n        /**\r\n         * 在这里使用异步处理\r\n         */\r\n        mHandler.post(new Runnable() {\r\n            @Override\r\n            public void run() {\r\n                if (callBack != null) {\r\n                    callBack.requestFailure(request, e);\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 分发成功的时候调用\r\n     *\r\n     * @param result\r\n     * @param callBack\r\n     */\r\n    private void deliverDataSuccess(final String result, final DataCallBack callBack) {\r\n        /**\r\n         * 在这里使用异步线程处理\r\n         */\r\n        mHandler.post(new Runnable() {\r\n            @Override\r\n            public void run() {\r\n                if (callBack != null) {\r\n                    try {\r\n                        callBack.requestSuccess(result);\r\n                    } catch (Exception e) {\r\n                        e.printStackTrace();\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 数据回调接口\r\n     */\r\n    public interface DataCallBack {\r\n        void requestFailure(Request request, IOException e);\r\n\r\n        void requestSuccess(String result) throws Exception;\r\n    }\r\n\r\n    //-------------------------提交表单--------------------------\r\n\r\n    public static void postAsync(String url, Map<String, String> params, DataCallBack callBack) {\r\n        getInstance().inner_postAsync(url, params, callBack);\r\n    }\r\n\r\n    private void inner_postAsync(String url, Map<String, String> params, final DataCallBack callBack) {\r\n\r\n        RequestBody requestBody = null;\r\n        if (params == null) {\r\n            params = new HashMap<>();\r\n        }\r\n\r\n        /**\r\n         * 如果是3.0之前版本的，构建表单数据是下面的一句\r\n         */\r\n        //FormEncodingBuilder builder = new FormEncodingBuilder();\r\n\r\n        /**\r\n         * 3.0之后版本\r\n         */\r\n        FormBody.Builder builder = new FormBody.Builder();\r\n\r\n        /**\r\n         * 在这对添加的参数进行遍历，map遍历有四种方式，如果想要了解的可以网上查找\r\n         */\r\n        for (Map.Entry<String, String> map : params.entrySet()) {\r\n            String key = map.getKey().toString();\r\n            String value = null;\r\n            /**\r\n             * 判断值是否是空的\r\n             */\r\n            if (map.getValue() == null) {\r\n                value = \"\";\r\n            } else {\r\n                value = map.getValue();\r\n            }\r\n            /**\r\n             * 把key和value添加到formbody中\r\n             */\r\n            builder.add(key, value);\r\n        }\r\n        requestBody = builder.build();\r\n        //结果返回\r\n        // 请求对象\r\n        final Request request = new Request.Builder().url(url).post(requestBody).build();\r\n        mClient.newCall(request).enqueue(new Callback() {\r\n            @Override\r\n            public void onFailure(Call call, IOException e) {\r\n                deliverDataFailure(request, e, callBack);\r\n            }\r\n\r\n            @Override\r\n            public void onResponse(Call call, Response response) throws IOException {\r\n                String result = response.body().string();\r\n                deliverDataSuccess(result, callBack);\r\n            }\r\n\r\n\r\n        });\r\n    }\r\n\r\n\r\n    //-------------------------文件下载--------------------------\r\n    public static void downloadAsync(String url, String desDir, DataCallBack callBack) {\r\n        getInstance().inner_downloadAsync(url, desDir, callBack);\r\n    }\r\n\r\n    /**\r\n     * 下载文件的内部逻辑处理类\r\n     *\r\n     * @param url      下载地址\r\n     * @param desDir   目标地址\r\n     * @param callBack\r\n     */\r\n    private void inner_downloadAsync(final String url, final String desDir, final DataCallBack callBack) {\r\n        final Request request = new Request.Builder().url(url).build();\r\n        mClient.newCall(request).enqueue(new Callback() {\r\n            @Override\r\n            public void onFailure(Call call, IOException e) {\r\n                deliverDataFailure(request, e, callBack);\r\n            }\r\n\r\n            @Override\r\n            public void onResponse(Call call, Response response) throws IOException {\r\n\r\n                /**\r\n                 * 在这里进行文件的下载处理\r\n                 */\r\n                InputStream inputStream = null;\r\n                FileOutputStream fileOutputStream = null;\r\n                try {\r\n                    //文件名和目标地址\r\n                    File file = new File(desDir, getFileName(url));\r\n                    //把请求回来的response对象装换为字节流\r\n                    inputStream = response.body().byteStream();\r\n                    fileOutputStream = new FileOutputStream(file);\r\n                    int len = 0;\r\n                    byte[] bytes = new byte[2048];\r\n                    //循环读取数据\r\n                    while ((len = inputStream.read(bytes)) != -1) {\r\n                        fileOutputStream.write(bytes, 0, len);\r\n                    }\r\n                    //关闭文件输出流\r\n                    fileOutputStream.flush();\r\n                    //调用分发数据成功的方法\r\n                    deliverDataSuccess(file.getAbsolutePath(), callBack);\r\n                } catch (IOException e) {\r\n                    //如果失败，调用此方法\r\n                    deliverDataFailure(request, e, callBack);\r\n                    e.printStackTrace();\r\n                } finally {\r\n                    if (inputStream != null) {\r\n                        inputStream.close();\r\n                    }\r\n                    if (fileOutputStream != null) {\r\n                        fileOutputStream.close();\r\n                    }\r\n\r\n                }\r\n            }\r\n\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 根据文件url获取文件的路径名字\r\n     *\r\n     * @param url\r\n     * @return\r\n     */\r\n    private String getFileName(String url) {\r\n        int separatorIndex = url.lastIndexOf(\"/\");\r\n        String path = (separatorIndex < 0) ? url : url.substring(separatorIndex + 1, url.length());\r\n        return path;\r\n    }\r\n\r\n\r\n}\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/asasfans/util/OkHttp.java b/app/src/main/java/com/example/asasfans/util/OkHttp.java
--- a/app/src/main/java/com/example/asasfans/util/OkHttp.java	
+++ b/app/src/main/java/com/example/asasfans/util/OkHttp.java	
@@ -2,6 +2,7 @@
 
 import android.os.Handler;
 import android.os.Looper;
+
 import java.io.File;
 import java.io.FileOutputStream;
 import java.io.IOException;
@@ -9,6 +10,7 @@
 import java.util.HashMap;
 import java.util.Map;
 import java.util.concurrent.TimeUnit;
+
 import okhttp3.Call;
 import okhttp3.Callback;
 import okhttp3.FormBody;
